{
  "openapi": "3.0.1",
  "info": {
    "title": "Modulr API",
    "description": "Modulr API",
    "license": {
      "name": "Â© Modulr Finance"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api-sandbox.modulrfinance.com/api-sandbox-token"
    }
  ],
  "security": [
    {
      "modulo_security": []
    }
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "Operations on Accounts"
    },
    {
      "name": "Async",
      "description": "Asynchronous card task operations"
    },
    {
      "name": "Beneficiaries",
      "description": "Operations on Beneficiaries"
    },
    {
      "name": "Cards",
      "description": "Cards API"
    },
    {
      "name": "Confirmation of Payee",
      "description": "Account Name Checks"
    },
    {
      "name": "Customers",
      "description": "Operations on Customers"
    },
    {
      "name": "Direct Debits",
      "description": "Direct Debit operations"
    },
    {
      "name": "Direct Debit Outbound",
      "description": "Direct Debit Outbound operations"
    },
    {
      "name": "Inbound Payments",
      "description": "Inbound payments"
    },
    {
      "name": "Payments",
      "description": "Operations on Payments"
    },
    {
      "name": "Rules",
      "description": "Rules"
    },
    {
      "name": "Transactions",
      "description": "Operations on Transactions"
    },
    {
      "name": "Document",
      "description": "Operations on Documents"
    },
    {
      "name": "Access Group",
      "description": "Operations on Access Group"
    },
    {
      "name": "Card Simulator",
      "description": "Cards Simulator API"
    },
    {
      "name": "Channel Manager",
      "description": "Channel Manager Operations"
    },
    {
      "name": "File Upload",
      "description": "Upload payment files"
    },
    {
      "name": "Notification",
      "description": "Operations on Notifications"
    },
    {
      "name": "Restricted",
      "description": "Restricted access API calls"
    }
  ],
  "paths": {
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Retrieve a specific customer using a unique customer reference",
        "description": "Retrieve a specific customer using a unique customer reference. This identifier can be found in the response obtained after creating a new customer, it starts by C, e.g: C0000000",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to fetch",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Customer statuses allowed when fetching the customer",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "CLOSED",
                  "BLOCKED"
                ]
              },
              "default": [
                "ACTIVE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "createdDate",
                    "id",
                    "name",
                    "status",
                    "type",
                    "verificationStatus"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for a Customer. Begins with 'C'",
                      "example": "C00000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Customer's company name - must be unique across the Modulr platform."
                    },
                    "brandNames": {
                      "type": "array",
                      "description": "The customers brand name(s)",
                      "items": {
                        "required": [
                          "id",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the Brand Name"
                          },
                          "name": {
                            "type": "string",
                            "description": "The Brand Name"
                          }
                        },
                        "description": "BrandName"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the customer, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the Customer. Customers must be 'Active' for Accounts to be created for them.",
                      "enum": [
                        "ACTIVE",
                        "CLOSED",
                        "BLOCKED"
                      ]
                    },
                    "verificationStatus": {
                      "type": "string",
                      "description": "How the identity of the Customer has been verified. Can be:\n1. UNVERIFIED -> no verification checks have been completed\n2. VERIFIED -> verification checks completed satisfactorily\n3. EXVERIFIED -> verification completed externally\n4. REFERRED -> verification is pending manual review\n5. DECLINED -> verification is complete with a negative result\n6. REVIEWED -> verification check has been reviewed"
                    },
                    "companyRegNumber": {
                      "type": "string",
                      "description": "The company registration / incorporation number of the company. Only applicable for companies registered with Companies House"
                    },
                    "expectedMonthlySpend": {
                      "type": "integer",
                      "description": "Indication of the monthly spend of the customer.",
                      "format": "int32"
                    },
                    "registeredAddress": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "type": "string"
                        },
                        "addressLine2": {
                          "type": "string"
                        },
                        "postTown": {
                          "type": "string"
                        },
                        "postCode": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "countrySubDivision": {
                          "type": "string"
                        }
                      },
                      "description": "Address"
                    },
                    "tradingAddress": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "type": "string"
                        },
                        "addressLine2": {
                          "type": "string"
                        },
                        "postTown": {
                          "type": "string"
                        },
                        "postCode": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "countrySubDivision": {
                          "type": "string"
                        }
                      },
                      "description": "Address"
                    },
                    "partnerId": {
                      "type": "string",
                      "description": "The owning partner identifier"
                    },
                    "associates": {
                      "type": "array",
                      "description": "Array of associate objects that link to the Customer. For example, this could contain the details of the company directors for a Limited company, or or the partners for a partnership.",
                      "items": {
                        "required": [
                          "dateOfBirth",
                          "firstName",
                          "id",
                          "lastName",
                          "type",
                          "verificationStatus"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the Associate"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Associate's first name(s)"
                          },
                          "middleName": {
                            "type": "string",
                            "description": "Associate's middle name"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Associate's surname"
                          },
                          "email": {
                            "type": "string",
                            "description": "Associate's email address"
                          },
                          "phone": {
                            "type": "string",
                            "description": "Associate's phone number, in international number format"
                          },
                          "applicant": {
                            "type": "boolean",
                            "description": "Indicates which Associate originally applied for the Modulr account"
                          },
                          "ownership": {
                            "type": "integer",
                            "description": "The Associate's percentage ownership of the Customer",
                            "format": "int32"
                          },
                          "type": {
                            "type": "string",
                            "description": "Describes the relation between the Associate and the Customer. Can be one of "
                          },
                          "dateOfBirth": {
                            "type": "string",
                            "description": "Associate's date of birth in format yyyy-MM-dd, or format yyyy-MM where day is unknown"
                          },
                          "verificationStatus": {
                            "type": "string",
                            "description": "How the Associate was verified. Can be one of "
                          },
                          "homeAddress": {
                            "required": [
                              "addressLine1",
                              "country",
                              "postCode",
                              "postTown"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "type": "string"
                              },
                              "addressLine2": {
                                "type": "string"
                              },
                              "postTown": {
                                "type": "string"
                              },
                              "postCode": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "countrySubDivision": {
                                "type": "string"
                              }
                            },
                            "description": "Address"
                          },
                          "documentInfo": {
                            "type": "array",
                            "description": "Documents gathered during Customer Due Diligence checks on an Associate.",
                            "items": {
                              "required": [
                                "fileName",
                                "path",
                                "uploadedDate"
                              ],
                              "type": "object",
                              "properties": {
                                "path": {
                                  "type": "string"
                                },
                                "fileName": {
                                  "type": "string"
                                },
                                "uploadedDate": {
                                  "type": "string",
                                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                                  "example": "2017-01-28T01:01:01+0000"
                                }
                              },
                              "description": "Document"
                            }
                          },
                          "additionalPersonalIdentifiers": {
                            "type": "array",
                            "description": "Additional personal identifier(s)",
                            "items": {
                              "required": [
                                "type",
                                "value"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of Additional Personal Identifier",
                                  "enum": [
                                    "BSN"
                                  ]
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Additional Personal Identifier value"
                                }
                              },
                              "description": "AdditionalPersonalIdentifier"
                            }
                          },
                          "complianceData": {
                            "type": "object",
                            "properties": {
                              "relationship": {
                                "type": "string"
                              }
                            },
                            "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
                          }
                        },
                        "description": "Associate"
                      }
                    },
                    "industryCode": {
                      "type": "string"
                    },
                    "tcsVersion": {
                      "type": "integer",
                      "description": "Version of the Modulr Account Terms and Conditions the Customer has agreed to.",
                      "format": "int32"
                    },
                    "documentInfo": {
                      "type": "array",
                      "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement.",
                      "items": {
                        "required": [
                          "fileName",
                          "path",
                          "uploadedDate"
                        ],
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "uploadedDate": {
                            "type": "string",
                            "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "example": "2017-01-28T01:01:01+0000"
                          }
                        },
                        "description": "Document"
                      }
                    },
                    "externalReference": {
                      "type": "string"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when the customer was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "delegate": {
                      "required": [
                        "created",
                        "id",
                        "name",
                        "roleId",
                        "status",
                        "updated"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique reference for the Delegate.",
                          "example": "D0000001"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name for the Delegate"
                        },
                        "address": {
                          "required": [
                            "addressLine1",
                            "country",
                            "postCode",
                            "postTown"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "type": "string"
                            },
                            "addressLine2": {
                              "type": "string"
                            },
                            "postTown": {
                              "type": "string"
                            },
                            "postCode": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "countrySubDivision": {
                              "type": "string"
                            }
                          },
                          "description": "Address"
                        },
                        "roleId": {
                          "type": "string",
                          "description": "The id of the Role assigned to the delegate",
                          "example": "R02002M5"
                        },
                        "externalReference": {
                          "type": "string",
                          "description": "External system reference for the Delegate"
                        },
                        "partner": {
                          "type": "string",
                          "description": "Partner Bid.",
                          "example": "R0000001"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the Delegate."
                        },
                        "created": {
                          "type": "string",
                          "description": "Datetime the Delegate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                          "format": "date-time"
                        },
                        "updated": {
                          "type": "string",
                          "description": "Datetime the Delegate was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                          "format": "date-time"
                        }
                      },
                      "description": "Delegate"
                    },
                    "legalEntity": {
                      "type": "string",
                      "description": "Legal entity of the customer",
                      "enum": [
                        "GB",
                        "NL",
                        "IE"
                      ]
                    },
                    "customerTrust": {
                      "type": "object",
                      "properties": {
                        "trustNature": {
                          "type": "string",
                          "enum": [
                            "BARE_TRUSTS",
                            "INTEREST_IN_POSSESSION_TRUSTS",
                            "DISCRETIONARY_TRUSTS",
                            "ACCUMULATION_TRUSTS",
                            "MIXED_TRUSTS",
                            "SETTLOR_INTERESTED_TRUSTS",
                            "NON_RESIDENT_TRUSTS",
                            "OFFSHORE_TRUSTS",
                            "FAMILY_LIVING_TRUST",
                            "PILOT_TRUST",
                            "VULNERABLE_BENEFICIARY_TRUST",
                            "CHARITABLE_TRUSTS",
                            "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                            "TESTAMENTARY_TRUSTS",
                            "OTHER"
                          ]
                        }
                      },
                      "description": "Trust nature for customers of type trust. Mandatory for type Trust, not to be set for non-trust customers."
                    },
                    "taxProfile": {
                      "required": [
                        "taxIdentifier"
                      ],
                      "type": "object",
                      "properties": {
                        "taxIdentifier": {
                          "type": "string",
                          "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                        }
                      },
                      "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                    },
                    "complianceData": {
                      "type": "object",
                      "properties": {
                        "typeDescription": {
                          "type": "string"
                        },
                        "riskLevel": {
                          "type": "string",
                          "enum": [
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "UNDETERMINED"
                          ]
                        },
                        "vulnerabilityReasons": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "LIFE_EVENTS",
                              "HEALTH",
                              "RESILIENCE",
                              "CAPABILITY",
                              "FINANCIAL_DIFFICULTY"
                            ]
                          }
                        }
                      },
                      "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
                    },
                    "complianceSector": {
                      "type": "string",
                      "example": "Agency Lite Consumer"
                    },
                    "generateStatements": {
                      "type": "boolean",
                      "description": "True if the customer is configured to generate statements"
                    }
                  },
                  "description": "A Customer is a single legal entity that can have 1 or more accounts"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Edit a specific customer using a unique customer reference",
        "description": "  Currently editable fields:\n  <ol>\n    <li>For all customer types: <b>externalReference</b> can be edited</li>\n    <li>For all customers not requiring manual or in-house KYC verification: <b>industryCode</b>, <b>registeredAddress</b>, <b>tcsVersions</b> and <b>regNumber</b> can additionally be edited. Of those:\n      <ul>\n        <li>For all other customer types: <b>name</b> and <b>tradingAddress</b> can additionally be edited</li>\n        <li>For all types other than PCM_BUSINESS: the <b>associate</b> can additionally be edited</li>\n      </ul>\n    </li>\n    <li> For <b>vulnerabilityReason</b> you must supply a list and to delete a list you must supply an empty list in request, not supplying a list will result in no change</li>\n  </ol>\n",
        "operationId": "editCustomer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to be edited",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "C0000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalReference": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w \\-]*",
                    "type": "string",
                    "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
                  },
                  "associates": {
                    "type": "array",
                    "description": "Applicable to all types except 'PCM_BUSINESS'",
                    "items": {
                      "required": [
                        "firstName",
                        "homeAddress",
                        "lastName",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of associate"
                        },
                        "firstName": {
                          "maxLength": 100,
                          "minLength": 1,
                          "pattern": "^[\\p{L}' -]+$",
                          "type": "string",
                          "description": "Letters, hyphens and apostrophes"
                        },
                        "middleName": {
                          "pattern": "^[\\p{L}' -]*$",
                          "type": "string",
                          "description": "Letters, hyphens and apostrophes"
                        },
                        "lastName": {
                          "maxLength": 100,
                          "minLength": 1,
                          "pattern": "^[\\p{L}' -]+$",
                          "type": "string",
                          "description": "Letters, hyphens and apostrophes"
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "description": "Date in yyyy-MM-dd format. If associate is a non-applicant director or partner, then partial DOB of yyyy-MM format is allowed. Valid age is from 16 to 100 years. If Applicant then minimum age required is 18 years for specific partners. Required for all associate types except PCM_INDIVIDUAL."
                        },
                        "ownership": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer",
                          "description": "Ownership percentage for Partners",
                          "format": "int32"
                        },
                        "homeAddress": {
                          "required": [
                            "addressLine1",
                            "postTown"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            },
                            "addressLine2": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            },
                            "postTown": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            },
                            "postCode": {
                              "maxLength": 10,
                              "type": "string"
                            },
                            "country": {
                              "type": "string",
                              "description": "Mandatory for international payments."
                            },
                            "countrySubDivision": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string"
                            }
                          },
                          "description": "Applicable to all types except 'INDIVIDUAL' and 'PCM_INDIVIDUAL'"
                        },
                        "id": {
                          "type": "string",
                          "description": "ID of associate"
                        }
                      },
                      "description": "Applicable to all types except 'PCM_BUSINESS'"
                    }
                  },
                  "name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "pattern": "^([_'@,&()Â£$â¬Â¥=#%\\â\\â:;/<>Â«Â»\\\"!\\â\\â\\â.\\?\\-\\s\\*\\{\\}\\[\\]\\+\\%\\\\]*?[\\p{L}0-9])+[_'@,&()Â£$â¬Â¥=#%\\â\\â:;/<>Â«Â»\\\"!\\â\\â\\â.\\?\\-\\s\\*\\{\\}\\[\\]\\+\\%\\\\]*",
                    "type": "string",
                    "description": "AlphaNumeric characters plus [ _ ' @ , & Â£ $ â¬ Â¥ = # % â â : ; \\ / < > Â« Â»  ! â â â . ? - *{ }  + % ( )]. Mandatory for all types except 'INDIVIDUAL and PCM_INDIVIDUAL'"
                  },
                  "brandNames": {
                    "type": "array",
                    "description": "The customers brand name(s)",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique id for the Brand Name"
                        },
                        "name": {
                          "type": "string",
                          "description": "The Brand Name"
                        }
                      },
                      "description": "The customers brand name(s)"
                    }
                  },
                  "tradingAddress": {
                    "required": [
                      "addressLine1",
                      "postTown"
                    ],
                    "type": "object",
                    "properties": {
                      "addressLine1": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "addressLine2": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postTown": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postCode": {
                        "maxLength": 10,
                        "type": "string"
                      },
                      "country": {
                        "type": "string",
                        "description": "Mandatory for international payments."
                      },
                      "countrySubDivision": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                      }
                    },
                    "description": "Applicable to all types except 'INDIVIDUAL' and 'PCM_INDIVIDUAL'"
                  },
                  "customerTrust": {
                    "required": [
                      "trustNature"
                    ],
                    "type": "object",
                    "properties": {
                      "trustNature": {
                        "type": "string",
                        "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers.",
                        "enum": [
                          "BARE_TRUSTS",
                          "INTEREST_IN_POSSESSION_TRUSTS",
                          "DISCRETIONARY_TRUSTS",
                          "ACCUMULATION_TRUSTS",
                          "MIXED_TRUSTS",
                          "SETTLOR_INTERESTED_TRUSTS",
                          "NON_RESIDENT_TRUSTS",
                          "OFFSHORE_TRUSTS",
                          "FAMILY_LIVING_TRUST",
                          "PILOT_TRUST",
                          "VULNERABLE_BENEFICIARY_TRUST",
                          "CHARITABLE_TRUSTS",
                          "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                          "TESTAMENTARY_TRUSTS",
                          "OTHER"
                        ]
                      }
                    },
                    "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers."
                  },
                  "complianceData": {
                    "type": "object",
                    "properties": {
                      "typeDescription": {
                        "maxLength": 200,
                        "minLength": 0,
                        "type": "string",
                        "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
                      },
                      "riskLevel": {
                        "type": "string",
                        "description": "Risk level of the customer",
                        "enum": [
                          "LOW",
                          "MEDIUM",
                          "HIGH",
                          "UNDETERMINED"
                        ]
                      },
                      "vulnerabilityReasons": {
                        "type": "array",
                        "description": "Vulnerability Reasons of the customer",
                        "items": {
                          "type": "string",
                          "description": "Vulnerability Reasons of the customer",
                          "enum": [
                            "LIFE_EVENTS",
                            "HEALTH",
                            "RESILIENCE",
                            "CAPABILITY",
                            "FINANCIAL_DIFFICULTY"
                          ]
                        }
                      }
                    },
                    "description": "Required for customers of type PREQUALIFIED"
                  }
                },
                "description": "Details of customer to edit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "createdDate",
                    "id",
                    "name",
                    "status",
                    "type",
                    "verificationStatus"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for a Customer. Begins with 'C'",
                      "example": "C00000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Customer's company name - must be unique across the Modulr platform."
                    },
                    "brandNames": {
                      "type": "array",
                      "description": "The customers brand name(s)",
                      "items": {
                        "required": [
                          "id",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the Brand Name"
                          },
                          "name": {
                            "type": "string",
                            "description": "The Brand Name"
                          }
                        },
                        "description": "BrandName"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the customer, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the Customer. Customers must be 'Active' for Accounts to be created for them.",
                      "enum": [
                        "ACTIVE",
                        "CLOSED",
                        "BLOCKED"
                      ]
                    },
                    "verificationStatus": {
                      "type": "string",
                      "description": "How the identity of the Customer has been verified. Can be:\n1. UNVERIFIED -> no verification checks have been completed\n2. VERIFIED -> verification checks completed satisfactorily\n3. EXVERIFIED -> verification completed externally\n4. REFERRED -> verification is pending manual review\n5. DECLINED -> verification is complete with a negative result\n6. REVIEWED -> verification check has been reviewed"
                    },
                    "companyRegNumber": {
                      "type": "string",
                      "description": "The company registration / incorporation number of the company. Only applicable for companies registered with Companies House"
                    },
                    "expectedMonthlySpend": {
                      "type": "integer",
                      "description": "Indication of the monthly spend of the customer.",
                      "format": "int32"
                    },
                    "registeredAddress": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "type": "string"
                        },
                        "addressLine2": {
                          "type": "string"
                        },
                        "postTown": {
                          "type": "string"
                        },
                        "postCode": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "countrySubDivision": {
                          "type": "string"
                        }
                      },
                      "description": "Address"
                    },
                    "tradingAddress": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "type": "string"
                        },
                        "addressLine2": {
                          "type": "string"
                        },
                        "postTown": {
                          "type": "string"
                        },
                        "postCode": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "countrySubDivision": {
                          "type": "string"
                        }
                      },
                      "description": "Address"
                    },
                    "partnerId": {
                      "type": "string",
                      "description": "The owning partner identifier"
                    },
                    "associates": {
                      "type": "array",
                      "description": "Array of associate objects that link to the Customer. For example, this could contain the details of the company directors for a Limited company, or or the partners for a partnership.",
                      "items": {
                        "required": [
                          "dateOfBirth",
                          "firstName",
                          "id",
                          "lastName",
                          "type",
                          "verificationStatus"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the Associate"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Associate's first name(s)"
                          },
                          "middleName": {
                            "type": "string",
                            "description": "Associate's middle name"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Associate's surname"
                          },
                          "email": {
                            "type": "string",
                            "description": "Associate's email address"
                          },
                          "phone": {
                            "type": "string",
                            "description": "Associate's phone number, in international number format"
                          },
                          "applicant": {
                            "type": "boolean",
                            "description": "Indicates which Associate originally applied for the Modulr account"
                          },
                          "ownership": {
                            "type": "integer",
                            "description": "The Associate's percentage ownership of the Customer",
                            "format": "int32"
                          },
                          "type": {
                            "type": "string",
                            "description": "Describes the relation between the Associate and the Customer. Can be one of "
                          },
                          "dateOfBirth": {
                            "type": "string",
                            "description": "Associate's date of birth in format yyyy-MM-dd, or format yyyy-MM where day is unknown"
                          },
                          "verificationStatus": {
                            "type": "string",
                            "description": "How the Associate was verified. Can be one of "
                          },
                          "homeAddress": {
                            "required": [
                              "addressLine1",
                              "country",
                              "postCode",
                              "postTown"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "type": "string"
                              },
                              "addressLine2": {
                                "type": "string"
                              },
                              "postTown": {
                                "type": "string"
                              },
                              "postCode": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "countrySubDivision": {
                                "type": "string"
                              }
                            },
                            "description": "Address"
                          },
                          "documentInfo": {
                            "type": "array",
                            "description": "Documents gathered during Customer Due Diligence checks on an Associate.",
                            "items": {
                              "required": [
                                "fileName",
                                "path",
                                "uploadedDate"
                              ],
                              "type": "object",
                              "properties": {
                                "path": {
                                  "type": "string"
                                },
                                "fileName": {
                                  "type": "string"
                                },
                                "uploadedDate": {
                                  "type": "string",
                                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                                  "example": "2017-01-28T01:01:01+0000"
                                }
                              },
                              "description": "Document"
                            }
                          },
                          "additionalPersonalIdentifiers": {
                            "type": "array",
                            "description": "Additional personal identifier(s)",
                            "items": {
                              "required": [
                                "type",
                                "value"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of Additional Personal Identifier",
                                  "enum": [
                                    "BSN"
                                  ]
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Additional Personal Identifier value"
                                }
                              },
                              "description": "AdditionalPersonalIdentifier"
                            }
                          },
                          "complianceData": {
                            "type": "object",
                            "properties": {
                              "relationship": {
                                "type": "string"
                              }
                            },
                            "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
                          }
                        },
                        "description": "Associate"
                      }
                    },
                    "industryCode": {
                      "type": "string"
                    },
                    "tcsVersion": {
                      "type": "integer",
                      "description": "Version of the Modulr Account Terms and Conditions the Customer has agreed to.",
                      "format": "int32"
                    },
                    "documentInfo": {
                      "type": "array",
                      "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement.",
                      "items": {
                        "required": [
                          "fileName",
                          "path",
                          "uploadedDate"
                        ],
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "uploadedDate": {
                            "type": "string",
                            "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "example": "2017-01-28T01:01:01+0000"
                          }
                        },
                        "description": "Document"
                      }
                    },
                    "externalReference": {
                      "type": "string"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when the customer was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "delegate": {
                      "required": [
                        "created",
                        "id",
                        "name",
                        "roleId",
                        "status",
                        "updated"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique reference for the Delegate.",
                          "example": "D0000001"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name for the Delegate"
                        },
                        "address": {
                          "required": [
                            "addressLine1",
                            "country",
                            "postCode",
                            "postTown"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "type": "string"
                            },
                            "addressLine2": {
                              "type": "string"
                            },
                            "postTown": {
                              "type": "string"
                            },
                            "postCode": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "countrySubDivision": {
                              "type": "string"
                            }
                          },
                          "description": "Address"
                        },
                        "roleId": {
                          "type": "string",
                          "description": "The id of the Role assigned to the delegate",
                          "example": "R02002M5"
                        },
                        "externalReference": {
                          "type": "string",
                          "description": "External system reference for the Delegate"
                        },
                        "partner": {
                          "type": "string",
                          "description": "Partner Bid.",
                          "example": "R0000001"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the Delegate."
                        },
                        "created": {
                          "type": "string",
                          "description": "Datetime the Delegate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                          "format": "date-time"
                        },
                        "updated": {
                          "type": "string",
                          "description": "Datetime the Delegate was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                          "format": "date-time"
                        }
                      },
                      "description": "Delegate"
                    },
                    "legalEntity": {
                      "type": "string",
                      "description": "Legal entity of the customer",
                      "enum": [
                        "GB",
                        "NL",
                        "IE"
                      ]
                    },
                    "customerTrust": {
                      "type": "object",
                      "properties": {
                        "trustNature": {
                          "type": "string",
                          "enum": [
                            "BARE_TRUSTS",
                            "INTEREST_IN_POSSESSION_TRUSTS",
                            "DISCRETIONARY_TRUSTS",
                            "ACCUMULATION_TRUSTS",
                            "MIXED_TRUSTS",
                            "SETTLOR_INTERESTED_TRUSTS",
                            "NON_RESIDENT_TRUSTS",
                            "OFFSHORE_TRUSTS",
                            "FAMILY_LIVING_TRUST",
                            "PILOT_TRUST",
                            "VULNERABLE_BENEFICIARY_TRUST",
                            "CHARITABLE_TRUSTS",
                            "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                            "TESTAMENTARY_TRUSTS",
                            "OTHER"
                          ]
                        }
                      },
                      "description": "Trust nature for customers of type trust. Mandatory for type Trust, not to be set for non-trust customers."
                    },
                    "taxProfile": {
                      "required": [
                        "taxIdentifier"
                      ],
                      "type": "object",
                      "properties": {
                        "taxIdentifier": {
                          "type": "string",
                          "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                        }
                      },
                      "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                    },
                    "complianceData": {
                      "type": "object",
                      "properties": {
                        "typeDescription": {
                          "type": "string"
                        },
                        "riskLevel": {
                          "type": "string",
                          "enum": [
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "UNDETERMINED"
                          ]
                        },
                        "vulnerabilityReasons": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "LIFE_EVENTS",
                              "HEALTH",
                              "RESILIENCE",
                              "CAPABILITY",
                              "FINANCIAL_DIFFICULTY"
                            ]
                          }
                        }
                      },
                      "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
                    },
                    "complianceSector": {
                      "type": "string",
                      "example": "Agency Lite Consumer"
                    },
                    "generateStatements": {
                      "type": "boolean",
                      "description": "True if the customer is configured to generate statements"
                    }
                  },
                  "description": "A Customer is a single legal entity that can have 1 or more accounts"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get an account",
        "description": "Retrieve details of a particular account using its ID as a reference",
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to fetch",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Account statuses allowed when fetching the account",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "BLOCKED",
                  "CLOSED",
                  "CLIENT_BLOCKED"
                ]
              },
              "default": [
                "ACTIVE"
              ]
            }
          },
          {
            "name": "includePendingTransactions",
            "in": "query",
            "description": "Include all pending transactions in 'balance' field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "availableBalance",
                    "balance",
                    "createdDate",
                    "currency",
                    "customerId",
                    "id",
                    "identifiers",
                    "name",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for the account",
                      "example": "A0000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name for the account"
                    },
                    "balance": {
                      "type": "string",
                      "description": "Balance of the account in format 'NN.NN'",
                      "example": "10000.0"
                    },
                    "availableBalance": {
                      "type": "string",
                      "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
                      "example": "10000.0"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency of the account in ISO 4217 format",
                      "example": "GBP"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
                      "example": "ACTIVE"
                    },
                    "identifiers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string",
                            "description": "Bank account Sort Code",
                            "example": "12345678"
                          },
                          "accountType": {
                            "type": "string",
                            "description": "Bank account type like PERSONAL/BUSINESS",
                            "enum": [
                              "PERSONAL",
                              "BUSINESS"
                            ]
                          },
                          "sortCode": {
                            "type": "string",
                            "description": "Bank account Sort Code",
                            "example": "000000"
                          },
                          "iban": {
                            "type": "string",
                            "example": "GB20MODR04001401100000"
                          },
                          "bic": {
                            "type": "string",
                            "example": "MODRGB21"
                          },
                          "currency": {
                            "type": "string",
                            "example": "GBP"
                          },
                          "countrySpecificDetails": {
                            "type": "object",
                            "properties": {
                              "bankName": {
                                "type": "string",
                                "description": "The name of the destination bank.",
                                "example": "Apple Bank"
                              },
                              "bankAddress": {
                                "type": "string",
                                "description": "The address of the destination bank.",
                                "example": "2100 Broadway"
                              },
                              "bankCity": {
                                "type": "string",
                                "description": "The city in which the destination bank resides.",
                                "example": "New York City"
                              },
                              "bankBranchName": {
                                "type": "string",
                                "description": "The name of the destination bank's branch.",
                                "example": "New York"
                              },
                              "bankBranchCode": {
                                "type": "string",
                                "description": "The code of the destination bank's branch.",
                                "example": "44-04"
                              },
                              "bankCode": {
                                "type": "string",
                                "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                              },
                              "chineseId": {
                                "type": "string",
                                "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                "example": "01101201901018889"
                              },
                              "province": {
                                "type": "string",
                                "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                "example": "Zhejiang"
                              },
                              "business": {
                                "type": "boolean",
                                "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                "example": true
                              },
                              "bankCodeType": {
                                "type": "string",
                                "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                "example": "ABA",
                                "enum": [
                                  "ABA",
                                  "CHIPS"
                                ]
                              },
                              "bankCountry": {
                                "type": "string",
                                "description": "The country in which the destination bank resides.",
                                "example": "US",
                                "enum": [
                                  "AT",
                                  "BE",
                                  "BG",
                                  "CY",
                                  "CZ",
                                  "DK",
                                  "EE",
                                  "FI",
                                  "FR",
                                  "DE",
                                  "GR",
                                  "HR",
                                  "HU",
                                  "IS",
                                  "IE",
                                  "IT",
                                  "LV",
                                  "LI",
                                  "LT",
                                  "LU",
                                  "MT",
                                  "NL",
                                  "NO",
                                  "PL",
                                  "PT",
                                  "RO",
                                  "SK",
                                  "SI",
                                  "ES",
                                  "SE",
                                  "GB",
                                  "MQ",
                                  "YT",
                                  "GP",
                                  "GF",
                                  "RE",
                                  "MF",
                                  "GI",
                                  "GG",
                                  "IM",
                                  "JE",
                                  "MC",
                                  "CH",
                                  "AD",
                                  "SM",
                                  "VA",
                                  "AX",
                                  "PM",
                                  "BL",
                                  "AF",
                                  "AL",
                                  "DZ",
                                  "AS",
                                  "AO",
                                  "AI",
                                  "AQ",
                                  "AG",
                                  "AR",
                                  "AM",
                                  "AW",
                                  "AU",
                                  "AZ",
                                  "BS",
                                  "BH",
                                  "BD",
                                  "BB",
                                  "BY",
                                  "BZ",
                                  "BJ",
                                  "BM",
                                  "BT",
                                  "BO",
                                  "BQ",
                                  "BA",
                                  "BW",
                                  "BV",
                                  "BR",
                                  "IO",
                                  "VG",
                                  "BN",
                                  "BF",
                                  "BI",
                                  "KH",
                                  "CM",
                                  "CA",
                                  "CV",
                                  "KY",
                                  "CF",
                                  "TD",
                                  "CL",
                                  "CN",
                                  "CX",
                                  "CC",
                                  "CO",
                                  "KM",
                                  "CK",
                                  "CR",
                                  "CU",
                                  "CW",
                                  "CD",
                                  "DJ",
                                  "DM",
                                  "DO",
                                  "TL",
                                  "EC",
                                  "EG",
                                  "SV",
                                  "GQ",
                                  "ER",
                                  "SZ",
                                  "ET",
                                  "FK",
                                  "FO",
                                  "FJ",
                                  "PF",
                                  "TF",
                                  "GA",
                                  "GM",
                                  "GE",
                                  "GH",
                                  "GL",
                                  "GD",
                                  "GU",
                                  "GT",
                                  "GN",
                                  "GW",
                                  "GY",
                                  "HT",
                                  "HM",
                                  "HN",
                                  "HK",
                                  "IN",
                                  "ID",
                                  "IR",
                                  "IQ",
                                  "IL",
                                  "CI",
                                  "JM",
                                  "JP",
                                  "JO",
                                  "KZ",
                                  "KE",
                                  "KI",
                                  "XK",
                                  "KW",
                                  "KG",
                                  "LA",
                                  "LB",
                                  "LS",
                                  "LR",
                                  "LY",
                                  "MO",
                                  "MG",
                                  "MW",
                                  "MY",
                                  "MV",
                                  "ML",
                                  "MH",
                                  "MR",
                                  "MU",
                                  "MX",
                                  "FM",
                                  "MD",
                                  "MN",
                                  "ME",
                                  "MS",
                                  "MA",
                                  "MZ",
                                  "MM",
                                  "NA",
                                  "NR",
                                  "NP",
                                  "AN",
                                  "NC",
                                  "NZ",
                                  "NI",
                                  "NE",
                                  "NG",
                                  "NU",
                                  "NF",
                                  "KP",
                                  "MK",
                                  "MP",
                                  "OM",
                                  "PK",
                                  "PW",
                                  "PS",
                                  "PA",
                                  "PG",
                                  "PY",
                                  "PE",
                                  "PH",
                                  "PN",
                                  "PR",
                                  "QA",
                                  "CG",
                                  "RU",
                                  "RW",
                                  "SH",
                                  "KN",
                                  "LC",
                                  "VC",
                                  "WS",
                                  "ST",
                                  "SA",
                                  "SN",
                                  "RS",
                                  "SC",
                                  "SL",
                                  "SG",
                                  "SX",
                                  "SB",
                                  "SO",
                                  "ZA",
                                  "KR",
                                  "GS",
                                  "SS",
                                  "LK",
                                  "SD",
                                  "SR",
                                  "SY",
                                  "SJ",
                                  "TW",
                                  "TJ",
                                  "TZ",
                                  "TH",
                                  "TG",
                                  "TK",
                                  "TO",
                                  "TT",
                                  "TN",
                                  "TR",
                                  "TM",
                                  "TC",
                                  "TV",
                                  "UG",
                                  "UA",
                                  "AE",
                                  "UM",
                                  "US",
                                  "UY",
                                  "UZ",
                                  "VU",
                                  "VE",
                                  "VN",
                                  "VI",
                                  "WF",
                                  "EH",
                                  "YE",
                                  "ZM",
                                  "ZW"
                                ]
                              },
                              "abaRoutingNumber": {
                                "type": "string",
                                "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                "example": "123456789"
                              }
                            },
                            "example": {
                              "branchCode": "123456789"
                            }
                          }
                        },
                        "description": "Account Identifier"
                      }
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique id of the Customer",
                      "example": "C0000001"
                    },
                    "customerName": {
                      "type": "string",
                      "description": "Customer Name"
                    },
                    "externalReference": {
                      "type": "string",
                      "description": "Your reference for an account",
                      "example": "aReference_00001"
                    },
                    "accessGroups": {
                      "type": "array",
                      "description": "Ids of Access Groups this account belongs to",
                      "items": {
                        "type": "string",
                        "description": "Ids of Access Groups this account belongs to"
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "directDebit": {
                      "type": "boolean",
                      "description": "Direct Debit Enabled"
                    },
                    "securedFundingLimit": {
                      "type": "string",
                      "description": "Limit of funds available below a balance of zero"
                    }
                  },
                  "description": "Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "summary": "Edit an account",
        "description": "Edit details of a particular account using its ID as a reference\nCurrently editable fields:\n  1. for accounts of all customer types, externalReference can be edited\n  2. for accounts of PCM_INDIVIDUAL & PCM_BUSINESS customer types, name can additionally be edited",
        "operationId": "editAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to be edited",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalReference": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w \\-]*",
                    "type": "string",
                    "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
                  },
                  "name": {
                    "maxLength": 40,
                    "minLength": 0,
                    "type": "string",
                    "description": "Name for the account, only applicable for 'PCM_INDIVIDUAL' and 'PCM_BUSINESS' customer types"
                  }
                },
                "description": "Details of account to edit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "availableBalance",
                    "balance",
                    "createdDate",
                    "currency",
                    "customerId",
                    "id",
                    "identifiers",
                    "name",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for the account",
                      "example": "A0000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name for the account"
                    },
                    "balance": {
                      "type": "string",
                      "description": "Balance of the account in format 'NN.NN'",
                      "example": "10000.0"
                    },
                    "availableBalance": {
                      "type": "string",
                      "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
                      "example": "10000.0"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency of the account in ISO 4217 format",
                      "example": "GBP"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
                      "example": "ACTIVE"
                    },
                    "identifiers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string",
                            "description": "Bank account Sort Code",
                            "example": "12345678"
                          },
                          "accountType": {
                            "type": "string",
                            "description": "Bank account type like PERSONAL/BUSINESS",
                            "enum": [
                              "PERSONAL",
                              "BUSINESS"
                            ]
                          },
                          "sortCode": {
                            "type": "string",
                            "description": "Bank account Sort Code",
                            "example": "000000"
                          },
                          "iban": {
                            "type": "string",
                            "example": "GB20MODR04001401100000"
                          },
                          "bic": {
                            "type": "string",
                            "example": "MODRGB21"
                          },
                          "currency": {
                            "type": "string",
                            "example": "GBP"
                          },
                          "countrySpecificDetails": {
                            "type": "object",
                            "properties": {
                              "bankName": {
                                "type": "string",
                                "description": "The name of the destination bank.",
                                "example": "Apple Bank"
                              },
                              "bankAddress": {
                                "type": "string",
                                "description": "The address of the destination bank.",
                                "example": "2100 Broadway"
                              },
                              "bankCity": {
                                "type": "string",
                                "description": "The city in which the destination bank resides.",
                                "example": "New York City"
                              },
                              "bankBranchName": {
                                "type": "string",
                                "description": "The name of the destination bank's branch.",
                                "example": "New York"
                              },
                              "bankBranchCode": {
                                "type": "string",
                                "description": "The code of the destination bank's branch.",
                                "example": "44-04"
                              },
                              "bankCode": {
                                "type": "string",
                                "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                              },
                              "chineseId": {
                                "type": "string",
                                "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                "example": "01101201901018889"
                              },
                              "province": {
                                "type": "string",
                                "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                "example": "Zhejiang"
                              },
                              "business": {
                                "type": "boolean",
                                "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                "example": true
                              },
                              "bankCodeType": {
                                "type": "string",
                                "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                "example": "ABA",
                                "enum": [
                                  "ABA",
                                  "CHIPS"
                                ]
                              },
                              "bankCountry": {
                                "type": "string",
                                "description": "The country in which the destination bank resides.",
                                "example": "US",
                                "enum": [
                                  "AT",
                                  "BE",
                                  "BG",
                                  "CY",
                                  "CZ",
                                  "DK",
                                  "EE",
                                  "FI",
                                  "FR",
                                  "DE",
                                  "GR",
                                  "HR",
                                  "HU",
                                  "IS",
                                  "IE",
                                  "IT",
                                  "LV",
                                  "LI",
                                  "LT",
                                  "LU",
                                  "MT",
                                  "NL",
                                  "NO",
                                  "PL",
                                  "PT",
                                  "RO",
                                  "SK",
                                  "SI",
                                  "ES",
                                  "SE",
                                  "GB",
                                  "MQ",
                                  "YT",
                                  "GP",
                                  "GF",
                                  "RE",
                                  "MF",
                                  "GI",
                                  "GG",
                                  "IM",
                                  "JE",
                                  "MC",
                                  "CH",
                                  "AD",
                                  "SM",
                                  "VA",
                                  "AX",
                                  "PM",
                                  "BL",
                                  "AF",
                                  "AL",
                                  "DZ",
                                  "AS",
                                  "AO",
                                  "AI",
                                  "AQ",
                                  "AG",
                                  "AR",
                                  "AM",
                                  "AW",
                                  "AU",
                                  "AZ",
                                  "BS",
                                  "BH",
                                  "BD",
                                  "BB",
                                  "BY",
                                  "BZ",
                                  "BJ",
                                  "BM",
                                  "BT",
                                  "BO",
                                  "BQ",
                                  "BA",
                                  "BW",
                                  "BV",
                                  "BR",
                                  "IO",
                                  "VG",
                                  "BN",
                                  "BF",
                                  "BI",
                                  "KH",
                                  "CM",
                                  "CA",
                                  "CV",
                                  "KY",
                                  "CF",
                                  "TD",
                                  "CL",
                                  "CN",
                                  "CX",
                                  "CC",
                                  "CO",
                                  "KM",
                                  "CK",
                                  "CR",
                                  "CU",
                                  "CW",
                                  "CD",
                                  "DJ",
                                  "DM",
                                  "DO",
                                  "TL",
                                  "EC",
                                  "EG",
                                  "SV",
                                  "GQ",
                                  "ER",
                                  "SZ",
                                  "ET",
                                  "FK",
                                  "FO",
                                  "FJ",
                                  "PF",
                                  "TF",
                                  "GA",
                                  "GM",
                                  "GE",
                                  "GH",
                                  "GL",
                                  "GD",
                                  "GU",
                                  "GT",
                                  "GN",
                                  "GW",
                                  "GY",
                                  "HT",
                                  "HM",
                                  "HN",
                                  "HK",
                                  "IN",
                                  "ID",
                                  "IR",
                                  "IQ",
                                  "IL",
                                  "CI",
                                  "JM",
                                  "JP",
                                  "JO",
                                  "KZ",
                                  "KE",
                                  "KI",
                                  "XK",
                                  "KW",
                                  "KG",
                                  "LA",
                                  "LB",
                                  "LS",
                                  "LR",
                                  "LY",
                                  "MO",
                                  "MG",
                                  "MW",
                                  "MY",
                                  "MV",
                                  "ML",
                                  "MH",
                                  "MR",
                                  "MU",
                                  "MX",
                                  "FM",
                                  "MD",
                                  "MN",
                                  "ME",
                                  "MS",
                                  "MA",
                                  "MZ",
                                  "MM",
                                  "NA",
                                  "NR",
                                  "NP",
                                  "AN",
                                  "NC",
                                  "NZ",
                                  "NI",
                                  "NE",
                                  "NG",
                                  "NU",
                                  "NF",
                                  "KP",
                                  "MK",
                                  "MP",
                                  "OM",
                                  "PK",
                                  "PW",
                                  "PS",
                                  "PA",
                                  "PG",
                                  "PY",
                                  "PE",
                                  "PH",
                                  "PN",
                                  "PR",
                                  "QA",
                                  "CG",
                                  "RU",
                                  "RW",
                                  "SH",
                                  "KN",
                                  "LC",
                                  "VC",
                                  "WS",
                                  "ST",
                                  "SA",
                                  "SN",
                                  "RS",
                                  "SC",
                                  "SL",
                                  "SG",
                                  "SX",
                                  "SB",
                                  "SO",
                                  "ZA",
                                  "KR",
                                  "GS",
                                  "SS",
                                  "LK",
                                  "SD",
                                  "SR",
                                  "SY",
                                  "SJ",
                                  "TW",
                                  "TJ",
                                  "TZ",
                                  "TH",
                                  "TG",
                                  "TK",
                                  "TO",
                                  "TT",
                                  "TN",
                                  "TR",
                                  "TM",
                                  "TC",
                                  "TV",
                                  "UG",
                                  "UA",
                                  "AE",
                                  "UM",
                                  "US",
                                  "UY",
                                  "UZ",
                                  "VU",
                                  "VE",
                                  "VN",
                                  "VI",
                                  "WF",
                                  "EH",
                                  "YE",
                                  "ZM",
                                  "ZW"
                                ]
                              },
                              "abaRoutingNumber": {
                                "type": "string",
                                "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                "example": "123456789"
                              }
                            },
                            "example": {
                              "branchCode": "123456789"
                            }
                          }
                        },
                        "description": "Account Identifier"
                      }
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique id of the Customer",
                      "example": "C0000001"
                    },
                    "customerName": {
                      "type": "string",
                      "description": "Customer Name"
                    },
                    "externalReference": {
                      "type": "string",
                      "description": "Your reference for an account",
                      "example": "aReference_00001"
                    },
                    "accessGroups": {
                      "type": "array",
                      "description": "Ids of Access Groups this account belongs to",
                      "items": {
                        "type": "string",
                        "description": "Ids of Access Groups this account belongs to"
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "directDebit": {
                      "type": "boolean",
                      "description": "Direct Debit Enabled"
                    },
                    "securedFundingLimit": {
                      "type": "string",
                      "description": "Limit of funds available below a balance of zero"
                    }
                  },
                  "description": "Account"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{id}/secured-funding": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "summary": "Set the secured funding limit for an account",
        "operationId": "updateSecuredFundingLimit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to set the secured funding limit",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "limit"
                ],
                "type": "object",
                "properties": {
                  "limit": {
                    "minimum": 0,
                    "type": "number",
                    "description": "Secured funding limit"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/access-groups/{id}/content": {
      "put": {
        "tags": [
          "Access Group"
        ],
        "summary": "Update access group",
        "description": "The ability to update an access group's name and add or remove an account",
        "operationId": "updateAccessGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Access group ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountIds",
                  "action",
                  "beneficiaryIds",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Action to apply for the supplied account bid",
                    "enum": [
                      "ADD",
                      "REMOVE"
                    ]
                  },
                  "accountIds": {
                    "type": "array",
                    "description": "Bids of the accounts to be added/removed",
                    "items": {
                      "type": "string",
                      "description": "Bids of the accounts to be added/removed"
                    }
                  },
                  "beneficiaryIds": {
                    "type": "array",
                    "description": "Bids of the beneficiaries to be added/removed",
                    "items": {
                      "type": "string",
                      "description": "Bids of the beneficiaries to be added/removed"
                    }
                  },
                  "name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w \\-]*",
                    "type": "string",
                    "description": "The name of the account group to create. Must match: [\\w \\-]*"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "countOfAccounts",
                    "id",
                    "name",
                    "status",
                    "type",
                    "typeId"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique ID for the access group",
                      "example": "G0000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Access group name"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of access group",
                      "enum": [
                        "SERVICE_PARTNER",
                        "SERVICE_CUSTOMER",
                        "DELEGATE",
                        "USER_DEFINED"
                      ]
                    },
                    "typeId": {
                      "type": "string",
                      "description": "The identifier of the linked entity implied by the type, e.g. the partner ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the access group",
                      "enum": [
                        "ACTIVE",
                        "DELETED"
                      ]
                    },
                    "countOfAccounts": {
                      "type": "integer",
                      "description": "The number of accounts in this group",
                      "format": "int64",
                      "deprecated": true
                    }
                  },
                  "description": "AccessGroup"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customers/{customerId}/beneficiaries": {
      "post": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Create a new beneficiary for a specified customer",
        "description": "The ability to create a new beneficiary for a customer, using their customer ID as a reference.",
        "operationId": "createBeneficiary",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to create beneficiary for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "defaultReference",
                  "destinationIdentifier",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "externalReference": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w \\-]*",
                    "type": "string",
                    "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
                  },
                  "name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "pattern": "^([^\\p{L}0-9]*?[\\p{L}0-9]){1,}['\\.\\-\\/&\\s]*",
                    "type": "string"
                  },
                  "birthdate": {
                    "type": "string",
                    "description": "The destination beneficiary's date of birth. Date in yyyy-MM-dd format",
                    "format": "date"
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "The destination beneficiary's email address"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "The destination beneficiary's phone number, will be formatted into international number pattern"
                  },
                  "destinationIdentifier": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "accountNumber": {
                        "type": "string",
                        "example": "12345678"
                      },
                      "accountType": {
                        "type": "string",
                        "description": "Bank account type like PERSONAL/BUSINESS",
                        "enum": [
                          "PERSONAL",
                          "BUSINESS"
                        ]
                      },
                      "sortCode": {
                        "pattern": "^\\d{6}",
                        "type": "string",
                        "example": "000000"
                      },
                      "iban": {
                        "pattern": "[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}([a-zA-Z0-9]?){0,26}",
                        "type": "string",
                        "example": "GB20MODR00000000000001"
                      },
                      "bic": {
                        "pattern": "([a-zA-Z]{6,6}[a-zA-Z2-9][a-nA-Np-zP-Z0-9]([a-zA-Z0-9]{3})?)",
                        "type": "string",
                        "example": "MODRGB21"
                      },
                      "currency": {
                        "pattern": "[a-zA-Z]{3}",
                        "type": "string",
                        "example": "GBP"
                      },
                      "countrySpecificDetails": {
                        "type": "object",
                        "properties": {
                          "bankName": {
                            "maxLength": 140,
                            "minLength": 0,
                            "type": "string",
                            "description": "The name of the destination bank.",
                            "example": "Apple Bank"
                          },
                          "bankAddress": {
                            "maxLength": 70,
                            "minLength": 0,
                            "type": "string",
                            "description": "The address of the destination bank.",
                            "example": "2100 Broadway"
                          },
                          "bankCity": {
                            "maxLength": 35,
                            "minLength": 0,
                            "type": "string",
                            "description": "The city in which the destination bank resides.",
                            "example": "New York City"
                          },
                          "bankBranchName": {
                            "type": "string",
                            "description": "The name of the destination bank's branch.",
                            "example": "New York"
                          },
                          "bankBranchCode": {
                            "maxLength": 35,
                            "minLength": 0,
                            "type": "string",
                            "description": "The code of the destination bank's branch.",
                            "example": "44-04"
                          },
                          "bankCode": {
                            "maxLength": 35,
                            "minLength": 0,
                            "type": "string",
                            "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                          },
                          "chineseId": {
                            "type": "string",
                            "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                            "example": "01101201901018889"
                          },
                          "province": {
                            "type": "string",
                            "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                            "example": "Zhejiang"
                          },
                          "business": {
                            "type": "boolean",
                            "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                            "example": true
                          },
                          "bankCodeType": {
                            "type": "string",
                            "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                            "example": "ABA",
                            "enum": [
                              "ABA",
                              "CHIPS"
                            ]
                          },
                          "bankCountry": {
                            "type": "string",
                            "description": "The country in which the destination bank resides.",
                            "example": "US",
                            "enum": [
                              "AT",
                              "BE",
                              "BG",
                              "CY",
                              "CZ",
                              "DK",
                              "EE",
                              "FI",
                              "FR",
                              "DE",
                              "GR",
                              "HR",
                              "HU",
                              "IS",
                              "IE",
                              "IT",
                              "LV",
                              "LI",
                              "LT",
                              "LU",
                              "MT",
                              "NL",
                              "NO",
                              "PL",
                              "PT",
                              "RO",
                              "SK",
                              "SI",
                              "ES",
                              "SE",
                              "GB",
                              "MQ",
                              "YT",
                              "GP",
                              "GF",
                              "RE",
                              "MF",
                              "GI",
                              "GG",
                              "IM",
                              "JE",
                              "MC",
                              "CH",
                              "AD",
                              "SM",
                              "VA",
                              "AX",
                              "PM",
                              "BL",
                              "AF",
                              "AL",
                              "DZ",
                              "AS",
                              "AO",
                              "AI",
                              "AQ",
                              "AG",
                              "AR",
                              "AM",
                              "AW",
                              "AU",
                              "AZ",
                              "BS",
                              "BH",
                              "BD",
                              "BB",
                              "BY",
                              "BZ",
                              "BJ",
                              "BM",
                              "BT",
                              "BO",
                              "BQ",
                              "BA",
                              "BW",
                              "BV",
                              "BR",
                              "IO",
                              "VG",
                              "BN",
                              "BF",
                              "BI",
                              "KH",
                              "CM",
                              "CA",
                              "CV",
                              "KY",
                              "CF",
                              "TD",
                              "CL",
                              "CN",
                              "CX",
                              "CC",
                              "CO",
                              "KM",
                              "CK",
                              "CR",
                              "CU",
                              "CW",
                              "CD",
                              "DJ",
                              "DM",
                              "DO",
                              "TL",
                              "EC",
                              "EG",
                              "SV",
                              "GQ",
                              "ER",
                              "SZ",
                              "ET",
                              "FK",
                              "FO",
                              "FJ",
                              "PF",
                              "TF",
                              "GA",
                              "GM",
                              "GE",
                              "GH",
                              "GL",
                              "GD",
                              "GU",
                              "GT",
                              "GN",
                              "GW",
                              "GY",
                              "HT",
                              "HM",
                              "HN",
                              "HK",
                              "IN",
                              "ID",
                              "IR",
                              "IQ",
                              "IL",
                              "CI",
                              "JM",
                              "JP",
                              "JO",
                              "KZ",
                              "KE",
                              "KI",
                              "XK",
                              "KW",
                              "KG",
                              "LA",
                              "LB",
                              "LS",
                              "LR",
                              "LY",
                              "MO",
                              "MG",
                              "MW",
                              "MY",
                              "MV",
                              "ML",
                              "MH",
                              "MR",
                              "MU",
                              "MX",
                              "FM",
                              "MD",
                              "MN",
                              "ME",
                              "MS",
                              "MA",
                              "MZ",
                              "MM",
                              "NA",
                              "NR",
                              "NP",
                              "AN",
                              "NC",
                              "NZ",
                              "NI",
                              "NE",
                              "NG",
                              "NU",
                              "NF",
                              "KP",
                              "MK",
                              "MP",
                              "OM",
                              "PK",
                              "PW",
                              "PS",
                              "PA",
                              "PG",
                              "PY",
                              "PE",
                              "PH",
                              "PN",
                              "PR",
                              "QA",
                              "CG",
                              "RU",
                              "RW",
                              "SH",
                              "KN",
                              "LC",
                              "VC",
                              "WS",
                              "ST",
                              "SA",
                              "SN",
                              "RS",
                              "SC",
                              "SL",
                              "SG",
                              "SX",
                              "SB",
                              "SO",
                              "ZA",
                              "KR",
                              "GS",
                              "SS",
                              "LK",
                              "SD",
                              "SR",
                              "SY",
                              "SJ",
                              "TW",
                              "TJ",
                              "TZ",
                              "TH",
                              "TG",
                              "TK",
                              "TO",
                              "TT",
                              "TN",
                              "TR",
                              "TM",
                              "TC",
                              "TV",
                              "UG",
                              "UA",
                              "AE",
                              "UM",
                              "US",
                              "UY",
                              "UZ",
                              "VU",
                              "VE",
                              "VN",
                              "VI",
                              "WF",
                              "EH",
                              "YE",
                              "ZM",
                              "ZW"
                            ]
                          },
                          "abaRoutingNumber": {
                            "pattern": "^\\d{9}$",
                            "type": "string",
                            "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                            "example": "123456789"
                          }
                        },
                        "example": {
                          "branchCode": "123456789"
                        }
                      }
                    }
                  },
                  "defaultReference": {
                    "type": "string"
                  },
                  "idToReplace": {
                    "type": "string"
                  },
                  "address": {
                    "required": [
                      "addressLine1",
                      "postTown"
                    ],
                    "type": "object",
                    "properties": {
                      "addressLine1": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "addressLine2": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postTown": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postCode": {
                        "maxLength": 10,
                        "type": "string"
                      },
                      "country": {
                        "type": "string",
                        "description": "Mandatory for international payments."
                      },
                      "countrySubDivision": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                      }
                    },
                    "description": "Applicable to all types except 'INDIVIDUAL' and 'PCM_INDIVIDUAL'"
                  },
                  "qualifier": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Optional qualifier. Only to be supplied if multiple beneficiaries with same destination need to be supplied"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "created",
                    "customerId",
                    "defaultReference",
                    "destinationIdentifier",
                    "id",
                    "name",
                    "status",
                    "updated"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique reference for the Beneficiary.",
                      "example": "B00000001A"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name for the Beneficiary"
                    },
                    "birthdate": {
                      "type": "string",
                      "description": "Date of birth for the Beneficiary in yyyy-MM-dd format",
                      "format": "date"
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Email address for the Beneficiary"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "Phone number for the Beneficiary in international pattern"
                    },
                    "destinationIdentifier": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "accountNumber": {
                          "type": "string",
                          "description": "Bank account Sort Code",
                          "example": "12345678"
                        },
                        "accountType": {
                          "type": "string",
                          "description": "Bank account type like PERSONAL/BUSINESS",
                          "enum": [
                            "PERSONAL",
                            "BUSINESS"
                          ]
                        },
                        "sortCode": {
                          "type": "string",
                          "description": "Bank account Sort Code",
                          "example": "000000"
                        },
                        "iban": {
                          "type": "string",
                          "example": "GB20MODR04001401100000"
                        },
                        "bic": {
                          "type": "string",
                          "example": "MODRGB21"
                        },
                        "currency": {
                          "type": "string",
                          "example": "GBP"
                        },
                        "countrySpecificDetails": {
                          "type": "object",
                          "properties": {
                            "bankName": {
                              "type": "string",
                              "description": "The name of the destination bank.",
                              "example": "Apple Bank"
                            },
                            "bankAddress": {
                              "type": "string",
                              "description": "The address of the destination bank.",
                              "example": "2100 Broadway"
                            },
                            "bankCity": {
                              "type": "string",
                              "description": "The city in which the destination bank resides.",
                              "example": "New York City"
                            },
                            "bankBranchName": {
                              "type": "string",
                              "description": "The name of the destination bank's branch.",
                              "example": "New York"
                            },
                            "bankBranchCode": {
                              "type": "string",
                              "description": "The code of the destination bank's branch.",
                              "example": "44-04"
                            },
                            "bankCode": {
                              "type": "string",
                              "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                            },
                            "chineseId": {
                              "type": "string",
                              "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                              "example": "01101201901018889"
                            },
                            "province": {
                              "type": "string",
                              "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                              "example": "Zhejiang"
                            },
                            "business": {
                              "type": "boolean",
                              "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                              "example": true
                            },
                            "bankCodeType": {
                              "type": "string",
                              "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                              "example": "ABA",
                              "enum": [
                                "ABA",
                                "CHIPS"
                              ]
                            },
                            "bankCountry": {
                              "type": "string",
                              "description": "The country in which the destination bank resides.",
                              "example": "US",
                              "enum": [
                                "AT",
                                "BE",
                                "BG",
                                "CY",
                                "CZ",
                                "DK",
                                "EE",
                                "FI",
                                "FR",
                                "DE",
                                "GR",
                                "HR",
                                "HU",
                                "IS",
                                "IE",
                                "IT",
                                "LV",
                                "LI",
                                "LT",
                                "LU",
                                "MT",
                                "NL",
                                "NO",
                                "PL",
                                "PT",
                                "RO",
                                "SK",
                                "SI",
                                "ES",
                                "SE",
                                "GB",
                                "MQ",
                                "YT",
                                "GP",
                                "GF",
                                "RE",
                                "MF",
                                "GI",
                                "GG",
                                "IM",
                                "JE",
                                "MC",
                                "CH",
                                "AD",
                                "SM",
                                "VA",
                                "AX",
                                "PM",
                                "BL",
                                "AF",
                                "AL",
                                "DZ",
                                "AS",
                                "AO",
                                "AI",
                                "AQ",
                                "AG",
                                "AR",
                                "AM",
                                "AW",
                                "AU",
                                "AZ",
                                "BS",
                                "BH",
                                "BD",
                                "BB",
                                "BY",
                                "BZ",
                                "BJ",
                                "BM",
                                "BT",
                                "BO",
                                "BQ",
                                "BA",
                                "BW",
                                "BV",
                                "BR",
                                "IO",
                                "VG",
                                "BN",
                                "BF",
                                "BI",
                                "KH",
                                "CM",
                                "CA",
                                "CV",
                                "KY",
                                "CF",
                                "TD",
                                "CL",
                                "CN",
                                "CX",
                                "CC",
                                "CO",
                                "KM",
                                "CK",
                                "CR",
                                "CU",
                                "CW",
                                "CD",
                                "DJ",
                                "DM",
                                "DO",
                                "TL",
                                "EC",
                                "EG",
                                "SV",
                                "GQ",
                                "ER",
                                "SZ",
                                "ET",
                                "FK",
                                "FO",
                                "FJ",
                                "PF",
                                "TF",
                                "GA",
                                "GM",
                                "GE",
                                "GH",
                                "GL",
                                "GD",
                                "GU",
                                "GT",
                                "GN",
                                "GW",
                                "GY",
                                "HT",
                                "HM",
                                "HN",
                                "HK",
                                "IN",
                                "ID",
                                "IR",
                                "IQ",
                                "IL",
                                "CI",
                                "JM",
                                "JP",
                                "JO",
                                "KZ",
                                "KE",
                                "KI",
                                "XK",
                                "KW",
                                "KG",
                                "LA",
                                "LB",
                                "LS",
                                "LR",
                                "LY",
                                "MO",
                                "MG",
                                "MW",
                                "MY",
                                "MV",
                                "ML",
                                "MH",
                                "MR",
                                "MU",
                                "MX",
                                "FM",
                                "MD",
                                "MN",
                                "ME",
                                "MS",
                                "MA",
                                "MZ",
                                "MM",
                                "NA",
                                "NR",
                                "NP",
                                "AN",
                                "NC",
                                "NZ",
                                "NI",
                                "NE",
                                "NG",
                                "NU",
                                "NF",
                                "KP",
                                "MK",
                                "MP",
                                "OM",
                                "PK",
                                "PW",
                                "PS",
                                "PA",
                                "PG",
                                "PY",
                                "PE",
                                "PH",
                                "PN",
                                "PR",
                                "QA",
                                "CG",
                                "RU",
                                "RW",
                                "SH",
                                "KN",
                                "LC",
                                "VC",
                                "WS",
                                "ST",
                                "SA",
                                "SN",
                                "RS",
                                "SC",
                                "SL",
                                "SG",
                                "SX",
                                "SB",
                                "SO",
                                "ZA",
                                "KR",
                                "GS",
                                "SS",
                                "LK",
                                "SD",
                                "SR",
                                "SY",
                                "SJ",
                                "TW",
                                "TJ",
                                "TZ",
                                "TH",
                                "TG",
                                "TK",
                                "TO",
                                "TT",
                                "TN",
                                "TR",
                                "TM",
                                "TC",
                                "TV",
                                "UG",
                                "UA",
                                "AE",
                                "UM",
                                "US",
                                "UY",
                                "UZ",
                                "VU",
                                "VE",
                                "VN",
                                "VI",
                                "WF",
                                "EH",
                                "YE",
                                "ZM",
                                "ZW"
                              ]
                            },
                            "abaRoutingNumber": {
                              "type": "string",
                              "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                              "example": "123456789"
                            }
                          },
                          "example": {
                            "branchCode": "123456789"
                          }
                        }
                      },
                      "description": "Account Identifier"
                    },
                    "redirectedDestination": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "accountNumber": {
                          "type": "string",
                          "description": "Bank account Sort Code",
                          "example": "12345678"
                        },
                        "accountType": {
                          "type": "string",
                          "description": "Bank account type like PERSONAL/BUSINESS",
                          "enum": [
                            "PERSONAL",
                            "BUSINESS"
                          ]
                        },
                        "sortCode": {
                          "type": "string",
                          "description": "Bank account Sort Code",
                          "example": "000000"
                        },
                        "iban": {
                          "type": "string",
                          "example": "GB20MODR04001401100000"
                        },
                        "bic": {
                          "type": "string",
                          "example": "MODRGB21"
                        },
                        "currency": {
                          "type": "string",
                          "example": "GBP"
                        },
                        "countrySpecificDetails": {
                          "type": "object",
                          "properties": {
                            "bankName": {
                              "type": "string",
                              "description": "The name of the destination bank.",
                              "example": "Apple Bank"
                            },
                            "bankAddress": {
                              "type": "string",
                              "description": "The address of the destination bank.",
                              "example": "2100 Broadway"
                            },
                            "bankCity": {
                              "type": "string",
                              "description": "The city in which the destination bank resides.",
                              "example": "New York City"
                            },
                            "bankBranchName": {
                              "type": "string",
                              "description": "The name of the destination bank's branch.",
                              "example": "New York"
                            },
                            "bankBranchCode": {
                              "type": "string",
                              "description": "The code of the destination bank's branch.",
                              "example": "44-04"
                            },
                            "bankCode": {
                              "type": "string",
                              "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                            },
                            "chineseId": {
                              "type": "string",
                              "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                              "example": "01101201901018889"
                            },
                            "province": {
                              "type": "string",
                              "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                              "example": "Zhejiang"
                            },
                            "business": {
                              "type": "boolean",
                              "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                              "example": true
                            },
                            "bankCodeType": {
                              "type": "string",
                              "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                              "example": "ABA",
                              "enum": [
                                "ABA",
                                "CHIPS"
                              ]
                            },
                            "bankCountry": {
                              "type": "string",
                              "description": "The country in which the destination bank resides.",
                              "example": "US",
                              "enum": [
                                "AT",
                                "BE",
                                "BG",
                                "CY",
                                "CZ",
                                "DK",
                                "EE",
                                "FI",
                                "FR",
                                "DE",
                                "GR",
                                "HR",
                                "HU",
                                "IS",
                                "IE",
                                "IT",
                                "LV",
                                "LI",
                                "LT",
                                "LU",
                                "MT",
                                "NL",
                                "NO",
                                "PL",
                                "PT",
                                "RO",
                                "SK",
                                "SI",
                                "ES",
                                "SE",
                                "GB",
                                "MQ",
                                "YT",
                                "GP",
                                "GF",
                                "RE",
                                "MF",
                                "GI",
                                "GG",
                                "IM",
                                "JE",
                                "MC",
                                "CH",
                                "AD",
                                "SM",
                                "VA",
                                "AX",
                                "PM",
                                "BL",
                                "AF",
                                "AL",
                                "DZ",
                                "AS",
                                "AO",
                                "AI",
                                "AQ",
                                "AG",
                                "AR",
                                "AM",
                                "AW",
                                "AU",
                                "AZ",
                                "BS",
                                "BH",
                                "BD",
                                "BB",
                                "BY",
                                "BZ",
                                "BJ",
                                "BM",
                                "BT",
                                "BO",
                                "BQ",
                                "BA",
                                "BW",
                                "BV",
                                "BR",
                                "IO",
                                "VG",
                                "BN",
                                "BF",
                                "BI",
                                "KH",
                                "CM",
                                "CA",
                                "CV",
                                "KY",
                                "CF",
                                "TD",
                                "CL",
                                "CN",
                                "CX",
                                "CC",
                                "CO",
                                "KM",
                                "CK",
                                "CR",
                                "CU",
                                "CW",
                                "CD",
                                "DJ",
                                "DM",
                                "DO",
                                "TL",
                                "EC",
                                "EG",
                                "SV",
                                "GQ",
                                "ER",
                                "SZ",
                                "ET",
                                "FK",
                                "FO",
                                "FJ",
                                "PF",
                                "TF",
                                "GA",
                                "GM",
                                "GE",
                                "GH",
                                "GL",
                                "GD",
                                "GU",
                                "GT",
                                "GN",
                                "GW",
                                "GY",
                                "HT",
                                "HM",
                                "HN",
                                "HK",
                                "IN",
                                "ID",
                                "IR",
                                "IQ",
                                "IL",
                                "CI",
                                "JM",
                                "JP",
                                "JO",
                                "KZ",
                                "KE",
                                "KI",
                                "XK",
                                "KW",
                                "KG",
                                "LA",
                                "LB",
                                "LS",
                                "LR",
                                "LY",
                                "MO",
                                "MG",
                                "MW",
                                "MY",
                                "MV",
                                "ML",
                                "MH",
                                "MR",
                                "MU",
                                "MX",
                                "FM",
                                "MD",
                                "MN",
                                "ME",
                                "MS",
                                "MA",
                                "MZ",
                                "MM",
                                "NA",
                                "NR",
                                "NP",
                                "AN",
                                "NC",
                                "NZ",
                                "NI",
                                "NE",
                                "NG",
                                "NU",
                                "NF",
                                "KP",
                                "MK",
                                "MP",
                                "OM",
                                "PK",
                                "PW",
                                "PS",
                                "PA",
                                "PG",
                                "PY",
                                "PE",
                                "PH",
                                "PN",
                                "PR",
                                "QA",
                                "CG",
                                "RU",
                                "RW",
                                "SH",
                                "KN",
                                "LC",
                                "VC",
                                "WS",
                                "ST",
                                "SA",
                                "SN",
                                "RS",
                                "SC",
                                "SL",
                                "SG",
                                "SX",
                                "SB",
                                "SO",
                                "ZA",
                                "KR",
                                "GS",
                                "SS",
                                "LK",
                                "SD",
                                "SR",
                                "SY",
                                "SJ",
                                "TW",
                                "TJ",
                                "TZ",
                                "TH",
                                "TG",
                                "TK",
                                "TO",
                                "TT",
                                "TN",
                                "TR",
                                "TM",
                                "TC",
                                "TV",
                                "UG",
                                "UA",
                                "AE",
                                "UM",
                                "US",
                                "UY",
                                "UZ",
                                "VU",
                                "VE",
                                "VN",
                                "VI",
                                "WF",
                                "EH",
                                "YE",
                                "ZM",
                                "ZW"
                              ]
                            },
                            "abaRoutingNumber": {
                              "type": "string",
                              "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                              "example": "123456789"
                            }
                          },
                          "example": {
                            "branchCode": "123456789"
                          }
                        }
                      },
                      "description": "Account Identifier"
                    },
                    "defaultReference": {
                      "type": "string",
                      "description": "Default reference used for payments to the Beneficiary."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the Beneficiary. Can be:"
                    },
                    "created": {
                      "type": "string",
                      "description": "Datetime the Beneficiary was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Id of the account if this beneficiary is a Modulr account, null otherwise"
                    },
                    "externalReference": {
                      "type": "string",
                      "description": "External system reference for the Beneficiary"
                    },
                    "approvalRequired": {
                      "type": "boolean",
                      "description": "Indicates if the beneficiary creation is pending approval"
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Id of the customer than owns this beneficiary",
                      "example": "C0000001"
                    },
                    "updated": {
                      "type": "string",
                      "description": "Datetime the Beneficiary was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "address": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "type": "string"
                        },
                        "addressLine2": {
                          "type": "string"
                        },
                        "postTown": {
                          "type": "string"
                        },
                        "postCode": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "countrySubDivision": {
                          "type": "string"
                        }
                      },
                      "description": "Address"
                    },
                    "qualifier": {
                      "type": "string",
                      "description": "Qualifier for this beneficiary"
                    },
                    "approvalRequestId": {
                      "type": "string",
                      "description": "Approval request ID for pending records."
                    },
                    "approvalStatus": {
                      "type": "string",
                      "description": "Approval status of item.",
                      "enum": [
                        "NOTNEEDED",
                        "PENDING",
                        "APPROVED",
                        "REJECTED",
                        "DELETED"
                      ]
                    },
                    "accessGroups": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "Access groups associated with beneficiary.",
                      "items": {
                        "type": "string",
                        "description": "Access groups associated with beneficiary."
                      }
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "System or person who created the beneficiary"
                    }
                  },
                  "description": "Beneficiary"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Delete beneficiaries for a specified customer",
        "description": "deleting beneficiaries for a customer, using their customer ID",
        "operationId": "deleteBeneficiaries",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to delete beneficiaries for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bid",
            "in": "query",
            "description": "ID(s) of beneficiaries to delete, must owned by customer and active",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted single resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "207": {
            "description": "Map of multiple responses for multi-request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customers/{customerId}/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get accounts by customer",
        "description": "Get details of accounts belonging to a particular customer using the customerâs ID as a reference",
        "operationId": "getAccountsByCustomer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to fetch accounts for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerStatuses",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Customer statuses",
                "default": "ACTIVE",
                "enum": [
                  "ACTIVE",
                  "CLOSED",
                  "BLOCKED"
                ]
              }
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Account statuses",
                "default": "ACTIVE",
                "enum": [
                  "ACTIVE",
                  "BLOCKED",
                  "CLOSED",
                  "CLIENT_BLOCKED"
                ]
              }
            }
          },
          {
            "name": "minBalance",
            "in": "query",
            "description": "Accounts with balance equal or more than this amount",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "string",
              "description": "Accounts with balance equal or more than this amount"
            }
          },
          {
            "name": "maxBalance",
            "in": "query",
            "description": "Accounts with balance equal or less than this amount",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.01,
              "type": "string",
              "description": "Accounts with balance equal or less than this amount"
            }
          },
          {
            "name": "fromCreatedDate",
            "in": "query",
            "description": "Accounts created after and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Accounts created after and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
              "example": "2017-01-28T01:01:01+0000"
            },
            "example": "2017-01-28T01:01:01+0000"
          },
          {
            "name": "toCreatedDate",
            "in": "query",
            "description": "Accounts created before and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Accounts created before and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
              "example": "2017-01-28T01:01:01+0000"
            },
            "example": "2017-01-28T01:01:01+0000"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Page to fetch (0 indexed)"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of Page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "string",
              "description": "Size of Page to fetch"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(id|name|balance|externalReference|createdDate)",
              "type": "string",
              "description": "Sort by field"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sorting order",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(asc|desc)",
              "type": "string",
              "description": "Sorting order"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "The currency for getting account by currency. Expected ISO Standard currency name i.e. GBP, EUR etc",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "The currency for getting account by currency. Expected ISO Standard currency name i.e. GBP, EUR etc",
              "example": "GBP"
            },
            "example": "GBP"
          },
          {
            "name": "showAvailableBalance",
            "in": "query",
            "description": "Show available balance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Show available balance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "availableBalance",
                          "balance",
                          "createdDate",
                          "currency",
                          "customerId",
                          "id",
                          "identifiers",
                          "name",
                          "status"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the account",
                            "example": "A0000001"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name for the account"
                          },
                          "balance": {
                            "type": "string",
                            "description": "Balance of the account in format 'NN.NN'",
                            "example": "10000.0"
                          },
                          "availableBalance": {
                            "type": "string",
                            "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
                            "example": "10000.0"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Currency of the account in ISO 4217 format",
                            "example": "GBP"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
                            "example": "ACTIVE"
                          },
                          "identifiers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "accountNumber": {
                                  "type": "string",
                                  "description": "Bank account Sort Code",
                                  "example": "12345678"
                                },
                                "accountType": {
                                  "type": "string",
                                  "description": "Bank account type like PERSONAL/BUSINESS",
                                  "enum": [
                                    "PERSONAL",
                                    "BUSINESS"
                                  ]
                                },
                                "sortCode": {
                                  "type": "string",
                                  "description": "Bank account Sort Code",
                                  "example": "000000"
                                },
                                "iban": {
                                  "type": "string",
                                  "example": "GB20MODR04001401100000"
                                },
                                "bic": {
                                  "type": "string",
                                  "example": "MODRGB21"
                                },
                                "currency": {
                                  "type": "string",
                                  "example": "GBP"
                                },
                                "countrySpecificDetails": {
                                  "type": "object",
                                  "properties": {
                                    "bankName": {
                                      "type": "string",
                                      "description": "The name of the destination bank.",
                                      "example": "Apple Bank"
                                    },
                                    "bankAddress": {
                                      "type": "string",
                                      "description": "The address of the destination bank.",
                                      "example": "2100 Broadway"
                                    },
                                    "bankCity": {
                                      "type": "string",
                                      "description": "The city in which the destination bank resides.",
                                      "example": "New York City"
                                    },
                                    "bankBranchName": {
                                      "type": "string",
                                      "description": "The name of the destination bank's branch.",
                                      "example": "New York"
                                    },
                                    "bankBranchCode": {
                                      "type": "string",
                                      "description": "The code of the destination bank's branch.",
                                      "example": "44-04"
                                    },
                                    "bankCode": {
                                      "type": "string",
                                      "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                                    },
                                    "chineseId": {
                                      "type": "string",
                                      "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                      "example": "01101201901018889"
                                    },
                                    "province": {
                                      "type": "string",
                                      "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                      "example": "Zhejiang"
                                    },
                                    "business": {
                                      "type": "boolean",
                                      "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                      "example": true
                                    },
                                    "bankCodeType": {
                                      "type": "string",
                                      "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                      "example": "ABA",
                                      "enum": [
                                        "ABA",
                                        "CHIPS"
                                      ]
                                    },
                                    "bankCountry": {
                                      "type": "string",
                                      "description": "The country in which the destination bank resides.",
                                      "example": "US",
                                      "enum": [
                                        "AT",
                                        "BE",
                                        "BG",
                                        "CY",
                                        "CZ",
                                        "DK",
                                        "EE",
                                        "FI",
                                        "FR",
                                        "DE",
                                        "GR",
                                        "HR",
                                        "HU",
                                        "IS",
                                        "IE",
                                        "IT",
                                        "LV",
                                        "LI",
                                        "LT",
                                        "LU",
                                        "MT",
                                        "NL",
                                        "NO",
                                        "PL",
                                        "PT",
                                        "RO",
                                        "SK",
                                        "SI",
                                        "ES",
                                        "SE",
                                        "GB",
                                        "MQ",
                                        "YT",
                                        "GP",
                                        "GF",
                                        "RE",
                                        "MF",
                                        "GI",
                                        "GG",
                                        "IM",
                                        "JE",
                                        "MC",
                                        "CH",
                                        "AD",
                                        "SM",
                                        "VA",
                                        "AX",
                                        "PM",
                                        "BL",
                                        "AF",
                                        "AL",
                                        "DZ",
                                        "AS",
                                        "AO",
                                        "AI",
                                        "AQ",
                                        "AG",
                                        "AR",
                                        "AM",
                                        "AW",
                                        "AU",
                                        "AZ",
                                        "BS",
                                        "BH",
                                        "BD",
                                        "BB",
                                        "BY",
                                        "BZ",
                                        "BJ",
                                        "BM",
                                        "BT",
                                        "BO",
                                        "BQ",
                                        "BA",
                                        "BW",
                                        "BV",
                                        "BR",
                                        "IO",
                                        "VG",
                                        "BN",
                                        "BF",
                                        "BI",
                                        "KH",
                                        "CM",
                                        "CA",
                                        "CV",
                                        "KY",
                                        "CF",
                                        "TD",
                                        "CL",
                                        "CN",
                                        "CX",
                                        "CC",
                                        "CO",
                                        "KM",
                                        "CK",
                                        "CR",
                                        "CU",
                                        "CW",
                                        "CD",
                                        "DJ",
                                        "DM",
                                        "DO",
                                        "TL",
                                        "EC",
                                        "EG",
                                        "SV",
                                        "GQ",
                                        "ER",
                                        "SZ",
                                        "ET",
                                        "FK",
                                        "FO",
                                        "FJ",
                                        "PF",
                                        "TF",
                                        "GA",
                                        "GM",
                                        "GE",
                                        "GH",
                                        "GL",
                                        "GD",
                                        "GU",
                                        "GT",
                                        "GN",
                                        "GW",
                                        "GY",
                                        "HT",
                                        "HM",
                                        "HN",
                                        "HK",
                                        "IN",
                                        "ID",
                                        "IR",
                                        "IQ",
                                        "IL",
                                        "CI",
                                        "JM",
                                        "JP",
                                        "JO",
                                        "KZ",
                                        "KE",
                                        "KI",
                                        "XK",
                                        "KW",
                                        "KG",
                                        "LA",
                                        "LB",
                                        "LS",
                                        "LR",
                                        "LY",
                                        "MO",
                                        "MG",
                                        "MW",
                                        "MY",
                                        "MV",
                                        "ML",
                                        "MH",
                                        "MR",
                                        "MU",
                                        "MX",
                                        "FM",
                                        "MD",
                                        "MN",
                                        "ME",
                                        "MS",
                                        "MA",
                                        "MZ",
                                        "MM",
                                        "NA",
                                        "NR",
                                        "NP",
                                        "AN",
                                        "NC",
                                        "NZ",
                                        "NI",
                                        "NE",
                                        "NG",
                                        "NU",
                                        "NF",
                                        "KP",
                                        "MK",
                                        "MP",
                                        "OM",
                                        "PK",
                                        "PW",
                                        "PS",
                                        "PA",
                                        "PG",
                                        "PY",
                                        "PE",
                                        "PH",
                                        "PN",
                                        "PR",
                                        "QA",
                                        "CG",
                                        "RU",
                                        "RW",
                                        "SH",
                                        "KN",
                                        "LC",
                                        "VC",
                                        "WS",
                                        "ST",
                                        "SA",
                                        "SN",
                                        "RS",
                                        "SC",
                                        "SL",
                                        "SG",
                                        "SX",
                                        "SB",
                                        "SO",
                                        "ZA",
                                        "KR",
                                        "GS",
                                        "SS",
                                        "LK",
                                        "SD",
                                        "SR",
                                        "SY",
                                        "SJ",
                                        "TW",
                                        "TJ",
                                        "TZ",
                                        "TH",
                                        "TG",
                                        "TK",
                                        "TO",
                                        "TT",
                                        "TN",
                                        "TR",
                                        "TM",
                                        "TC",
                                        "TV",
                                        "UG",
                                        "UA",
                                        "AE",
                                        "UM",
                                        "US",
                                        "UY",
                                        "UZ",
                                        "VU",
                                        "VE",
                                        "VN",
                                        "VI",
                                        "WF",
                                        "EH",
                                        "YE",
                                        "ZM",
                                        "ZW"
                                      ]
                                    },
                                    "abaRoutingNumber": {
                                      "type": "string",
                                      "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                      "example": "123456789"
                                    }
                                  },
                                  "example": {
                                    "branchCode": "123456789"
                                  }
                                }
                              },
                              "description": "Account Identifier"
                            }
                          },
                          "customerId": {
                            "type": "string",
                            "description": "Unique id of the Customer",
                            "example": "C0000001"
                          },
                          "customerName": {
                            "type": "string",
                            "description": "Customer Name"
                          },
                          "externalReference": {
                            "type": "string",
                            "description": "Your reference for an account",
                            "example": "aReference_00001"
                          },
                          "accessGroups": {
                            "type": "array",
                            "description": "Ids of Access Groups this account belongs to",
                            "items": {
                              "type": "string",
                              "description": "Ids of Access Groups this account belongs to"
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "directDebit": {
                            "type": "boolean",
                            "description": "Direct Debit Enabled"
                          },
                          "securedFundingLimit": {
                            "type": "string",
                            "description": "Limit of funds available below a balance of zero"
                          }
                        },
                        "description": "Account"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create account by customer",
        "description": "Creates an account for a particular customer using the customerâs ID as a reference",
        "operationId": "createAccount",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to create account for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "currency"
                ],
                "type": "object",
                "properties": {
                  "externalReference": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w \\-]*",
                    "type": "string",
                    "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "GBP",
                      "EUR",
                      "AED",
                      "AFN",
                      "ALL",
                      "AMD",
                      "ANG",
                      "AOA",
                      "ARS",
                      "AUD",
                      "AWG",
                      "AZN",
                      "BAM",
                      "BBD",
                      "BDT",
                      "BGN",
                      "BHD",
                      "BIF",
                      "BMD",
                      "BND",
                      "BOB",
                      "BOV",
                      "BRL",
                      "BSD",
                      "BTN",
                      "BWP",
                      "BYN",
                      "BZD",
                      "CAD",
                      "CDF",
                      "CHE",
                      "CHF",
                      "CHW",
                      "CLF",
                      "CLP",
                      "CNY",
                      "COP",
                      "COU",
                      "CRC",
                      "CUC",
                      "CUP",
                      "CVE",
                      "CZK",
                      "DJF",
                      "DKK",
                      "DOP",
                      "DZD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "FJD",
                      "FKP",
                      "GEL",
                      "GHS",
                      "GIP",
                      "GMD",
                      "GNF",
                      "GTQ",
                      "GYD",
                      "HKD",
                      "HNL",
                      "HRK",
                      "HTG",
                      "HUF",
                      "IDR",
                      "ILS",
                      "INR",
                      "IQD",
                      "IRR",
                      "ISK",
                      "JMD",
                      "JOD",
                      "JPY",
                      "KES",
                      "KGS",
                      "KHR",
                      "KMF",
                      "KPW",
                      "KRW",
                      "KWD",
                      "KYD",
                      "KZT",
                      "LAK",
                      "LBP",
                      "LKR",
                      "LRD",
                      "LSL",
                      "LYD",
                      "MAD",
                      "MDL",
                      "MGA",
                      "MKD",
                      "MMK",
                      "MNT",
                      "MOP",
                      "MRU",
                      "MUR",
                      "MVR",
                      "MWK",
                      "MXN",
                      "MXV",
                      "MYR",
                      "MZN",
                      "NAD",
                      "NGN",
                      "NIO",
                      "NOK",
                      "NPR",
                      "NZD",
                      "OMR",
                      "PAB",
                      "PEN",
                      "PGK",
                      "PHP",
                      "PKR",
                      "PLN",
                      "PYG",
                      "QAR",
                      "RON",
                      "RSD",
                      "RUB",
                      "RWF",
                      "SAR",
                      "SBD",
                      "SCR",
                      "SDG",
                      "SEK",
                      "SGD",
                      "SLE",
                      "SLL",
                      "SOS",
                      "SRD",
                      "SSP",
                      "STN",
                      "SVC",
                      "SYP",
                      "SZL",
                      "SHP",
                      "THB",
                      "TJS",
                      "TMT",
                      "TND",
                      "TOP",
                      "TRY",
                      "TTD",
                      "TWD",
                      "TZS",
                      "UAH",
                      "UGX",
                      "USD",
                      "USN",
                      "UYI",
                      "UYU",
                      "UYW",
                      "UZS",
                      "VES",
                      "VND",
                      "VUV",
                      "WST",
                      "XAF",
                      "XAG",
                      "XAU",
                      "XBA",
                      "XBB",
                      "XBC",
                      "XBD",
                      "XCD",
                      "XDR",
                      "XOF",
                      "XPD",
                      "XPF",
                      "XPT",
                      "XSU",
                      "XTS",
                      "XUA",
                      "XXX",
                      "YER",
                      "ZAR",
                      "ZMW",
                      "ZWL"
                    ]
                  },
                  "productCode": {
                    "type": "string",
                    "description": "Product associated with the account. Contact your account manager for correct code to use."
                  },
                  "identifier": {
                    "required": [
                      "accountNumber",
                      "sortCode",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "SCAN"
                        ]
                      },
                      "sortCode": {
                        "pattern": "^\\d{6}$",
                        "type": "string"
                      },
                      "accountNumber": {
                        "pattern": "^\\d{8}$",
                        "type": "string"
                      }
                    },
                    "description": "The identifier to assign to the account. Only available to selected partners."
                  }
                },
                "description": "Details of account to create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "availableBalance",
                    "balance",
                    "createdDate",
                    "currency",
                    "customerId",
                    "id",
                    "identifiers",
                    "name",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for the account",
                      "example": "A0000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name for the account"
                    },
                    "balance": {
                      "type": "string",
                      "description": "Balance of the account in format 'NN.NN'",
                      "example": "10000.0"
                    },
                    "availableBalance": {
                      "type": "string",
                      "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
                      "example": "10000.0"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency of the account in ISO 4217 format",
                      "example": "GBP"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
                      "example": "ACTIVE"
                    },
                    "identifiers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string",
                            "description": "Bank account Sort Code",
                            "example": "12345678"
                          },
                          "accountType": {
                            "type": "string",
                            "description": "Bank account type like PERSONAL/BUSINESS",
                            "enum": [
                              "PERSONAL",
                              "BUSINESS"
                            ]
                          },
                          "sortCode": {
                            "type": "string",
                            "description": "Bank account Sort Code",
                            "example": "000000"
                          },
                          "iban": {
                            "type": "string",
                            "example": "GB20MODR04001401100000"
                          },
                          "bic": {
                            "type": "string",
                            "example": "MODRGB21"
                          },
                          "currency": {
                            "type": "string",
                            "example": "GBP"
                          },
                          "countrySpecificDetails": {
                            "type": "object",
                            "properties": {
                              "bankName": {
                                "type": "string",
                                "description": "The name of the destination bank.",
                                "example": "Apple Bank"
                              },
                              "bankAddress": {
                                "type": "string",
                                "description": "The address of the destination bank.",
                                "example": "2100 Broadway"
                              },
                              "bankCity": {
                                "type": "string",
                                "description": "The city in which the destination bank resides.",
                                "example": "New York City"
                              },
                              "bankBranchName": {
                                "type": "string",
                                "description": "The name of the destination bank's branch.",
                                "example": "New York"
                              },
                              "bankBranchCode": {
                                "type": "string",
                                "description": "The code of the destination bank's branch.",
                                "example": "44-04"
                              },
                              "bankCode": {
                                "type": "string",
                                "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                              },
                              "chineseId": {
                                "type": "string",
                                "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                "example": "01101201901018889"
                              },
                              "province": {
                                "type": "string",
                                "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                "example": "Zhejiang"
                              },
                              "business": {
                                "type": "boolean",
                                "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                "example": true
                              },
                              "bankCodeType": {
                                "type": "string",
                                "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                "example": "ABA",
                                "enum": [
                                  "ABA",
                                  "CHIPS"
                                ]
                              },
                              "bankCountry": {
                                "type": "string",
                                "description": "The country in which the destination bank resides.",
                                "example": "US",
                                "enum": [
                                  "AT",
                                  "BE",
                                  "BG",
                                  "CY",
                                  "CZ",
                                  "DK",
                                  "EE",
                                  "FI",
                                  "FR",
                                  "DE",
                                  "GR",
                                  "HR",
                                  "HU",
                                  "IS",
                                  "IE",
                                  "IT",
                                  "LV",
                                  "LI",
                                  "LT",
                                  "LU",
                                  "MT",
                                  "NL",
                                  "NO",
                                  "PL",
                                  "PT",
                                  "RO",
                                  "SK",
                                  "SI",
                                  "ES",
                                  "SE",
                                  "GB",
                                  "MQ",
                                  "YT",
                                  "GP",
                                  "GF",
                                  "RE",
                                  "MF",
                                  "GI",
                                  "GG",
                                  "IM",
                                  "JE",
                                  "MC",
                                  "CH",
                                  "AD",
                                  "SM",
                                  "VA",
                                  "AX",
                                  "PM",
                                  "BL",
                                  "AF",
                                  "AL",
                                  "DZ",
                                  "AS",
                                  "AO",
                                  "AI",
                                  "AQ",
                                  "AG",
                                  "AR",
                                  "AM",
                                  "AW",
                                  "AU",
                                  "AZ",
                                  "BS",
                                  "BH",
                                  "BD",
                                  "BB",
                                  "BY",
                                  "BZ",
                                  "BJ",
                                  "BM",
                                  "BT",
                                  "BO",
                                  "BQ",
                                  "BA",
                                  "BW",
                                  "BV",
                                  "BR",
                                  "IO",
                                  "VG",
                                  "BN",
                                  "BF",
                                  "BI",
                                  "KH",
                                  "CM",
                                  "CA",
                                  "CV",
                                  "KY",
                                  "CF",
                                  "TD",
                                  "CL",
                                  "CN",
                                  "CX",
                                  "CC",
                                  "CO",
                                  "KM",
                                  "CK",
                                  "CR",
                                  "CU",
                                  "CW",
                                  "CD",
                                  "DJ",
                                  "DM",
                                  "DO",
                                  "TL",
                                  "EC",
                                  "EG",
                                  "SV",
                                  "GQ",
                                  "ER",
                                  "SZ",
                                  "ET",
                                  "FK",
                                  "FO",
                                  "FJ",
                                  "PF",
                                  "TF",
                                  "GA",
                                  "GM",
                                  "GE",
                                  "GH",
                                  "GL",
                                  "GD",
                                  "GU",
                                  "GT",
                                  "GN",
                                  "GW",
                                  "GY",
                                  "HT",
                                  "HM",
                                  "HN",
                                  "HK",
                                  "IN",
                                  "ID",
                                  "IR",
                                  "IQ",
                                  "IL",
                                  "CI",
                                  "JM",
                                  "JP",
                                  "JO",
                                  "KZ",
                                  "KE",
                                  "KI",
                                  "XK",
                                  "KW",
                                  "KG",
                                  "LA",
                                  "LB",
                                  "LS",
                                  "LR",
                                  "LY",
                                  "MO",
                                  "MG",
                                  "MW",
                                  "MY",
                                  "MV",
                                  "ML",
                                  "MH",
                                  "MR",
                                  "MU",
                                  "MX",
                                  "FM",
                                  "MD",
                                  "MN",
                                  "ME",
                                  "MS",
                                  "MA",
                                  "MZ",
                                  "MM",
                                  "NA",
                                  "NR",
                                  "NP",
                                  "AN",
                                  "NC",
                                  "NZ",
                                  "NI",
                                  "NE",
                                  "NG",
                                  "NU",
                                  "NF",
                                  "KP",
                                  "MK",
                                  "MP",
                                  "OM",
                                  "PK",
                                  "PW",
                                  "PS",
                                  "PA",
                                  "PG",
                                  "PY",
                                  "PE",
                                  "PH",
                                  "PN",
                                  "PR",
                                  "QA",
                                  "CG",
                                  "RU",
                                  "RW",
                                  "SH",
                                  "KN",
                                  "LC",
                                  "VC",
                                  "WS",
                                  "ST",
                                  "SA",
                                  "SN",
                                  "RS",
                                  "SC",
                                  "SL",
                                  "SG",
                                  "SX",
                                  "SB",
                                  "SO",
                                  "ZA",
                                  "KR",
                                  "GS",
                                  "SS",
                                  "LK",
                                  "SD",
                                  "SR",
                                  "SY",
                                  "SJ",
                                  "TW",
                                  "TJ",
                                  "TZ",
                                  "TH",
                                  "TG",
                                  "TK",
                                  "TO",
                                  "TT",
                                  "TN",
                                  "TR",
                                  "TM",
                                  "TC",
                                  "TV",
                                  "UG",
                                  "UA",
                                  "AE",
                                  "UM",
                                  "US",
                                  "UY",
                                  "UZ",
                                  "VU",
                                  "VE",
                                  "VN",
                                  "VI",
                                  "WF",
                                  "EH",
                                  "YE",
                                  "ZM",
                                  "ZW"
                                ]
                              },
                              "abaRoutingNumber": {
                                "type": "string",
                                "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                "example": "123456789"
                              }
                            },
                            "example": {
                              "branchCode": "123456789"
                            }
                          }
                        },
                        "description": "Account Identifier"
                      }
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique id of the Customer",
                      "example": "C0000001"
                    },
                    "customerName": {
                      "type": "string",
                      "description": "Customer Name"
                    },
                    "externalReference": {
                      "type": "string",
                      "description": "Your reference for an account",
                      "example": "aReference_00001"
                    },
                    "accessGroups": {
                      "type": "array",
                      "description": "Ids of Access Groups this account belongs to",
                      "items": {
                        "type": "string",
                        "description": "Ids of Access Groups this account belongs to"
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "directDebit": {
                      "type": "boolean",
                      "description": "Direct Debit Enabled"
                    },
                    "securedFundingLimit": {
                      "type": "string",
                      "description": "Limit of funds available below a balance of zero"
                    }
                  },
                  "description": "Account"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{id}/unblock": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Unblock a specific account",
        "description": "Using a unique reference (account ID) you can unblock an account",
        "operationId": "unblockAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to unblock",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{id}/close": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Close an account",
        "description": "When you no longer want or need an account you are able to close using the account ID as a unique reference",
        "operationId": "closeAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to close",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{id}/block": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Block a specific account",
        "description": "Using a unique reference (account ID) you can block an account",
        "operationId": "blockAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to block",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/access-groups": {
      "get": {
        "tags": [
          "Access Group"
        ],
        "summary": "Get a list of access groups",
        "description": "The ability to list all access groups for the customer",
        "operationId": "getAccessGroups",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "description": "ID of access group(s) to fetch",
              "items": {
                "type": "string",
                "example": "G0000001"
              }
            }
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "description": "Access group types",
              "items": {
                "type": "string",
                "description": "Access group type",
                "enum": [
                  "SERVICE_PARTNER",
                  "SERVICE_CUSTOMER",
                  "DELEGATE",
                  "USER_DEFINED"
                ]
              }
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "description": "Access group statuses",
              "items": {
                "type": "string",
                "description": "Access group status",
                "enum": [
                  "ACTIVE",
                  "DELETED"
                ]
              }
            }
          },
          {
            "name": "typeIds",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "description": "Ids of the entity implied by the type(s), e.g. the partner ID",
              "items": {
                "type": "string",
                "description": "Is of the entity implied by the type(s), e.g. the partner ID",
                "example": "C0000001"
              }
            }
          },
          {
            "name": "showCountOfAccounts",
            "in": "query",
            "description": "Whether to include the count of accounts in the response",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Whether to include the count of accounts in the response",
              "default": "true"
            }
          },
          {
            "name": "accountIds",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "description": "Account BIDs of access groups to fetch",
              "items": {
                "type": "string",
                "description": "Account BID of access groups to fetch",
                "example": "A0000001"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "countOfAccounts",
                      "id",
                      "name",
                      "status",
                      "type",
                      "typeId"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique ID for the access group",
                        "example": "G0000001"
                      },
                      "name": {
                        "type": "string",
                        "description": "Access group name"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of access group",
                        "enum": [
                          "SERVICE_PARTNER",
                          "SERVICE_CUSTOMER",
                          "DELEGATE",
                          "USER_DEFINED"
                        ]
                      },
                      "typeId": {
                        "type": "string",
                        "description": "The identifier of the linked entity implied by the type, e.g. the partner ID"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the access group",
                        "enum": [
                          "ACTIVE",
                          "DELETED"
                        ]
                      },
                      "countOfAccounts": {
                        "type": "integer",
                        "description": "The number of accounts in this group",
                        "format": "int64",
                        "deprecated": true
                      }
                    },
                    "description": "AccessGroup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Access Group"
        ],
        "summary": "Create access group",
        "description": "The ability to create a new access group",
        "operationId": "createAccessGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountIds",
                  "action",
                  "beneficiaryIds",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Action to apply for the supplied account bid",
                    "enum": [
                      "ADD",
                      "REMOVE"
                    ]
                  },
                  "accountIds": {
                    "type": "array",
                    "description": "Bids of the accounts to be added/removed",
                    "items": {
                      "type": "string",
                      "description": "Bids of the accounts to be added/removed"
                    }
                  },
                  "beneficiaryIds": {
                    "type": "array",
                    "description": "Bids of the beneficiaries to be added/removed",
                    "items": {
                      "type": "string",
                      "description": "Bids of the beneficiaries to be added/removed"
                    }
                  },
                  "name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w \\-]*",
                    "type": "string",
                    "description": "The name of the account group to create. Must match: [\\w \\-]*"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "countOfAccounts",
                    "id",
                    "name",
                    "status",
                    "type",
                    "typeId"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique ID for the access group",
                      "example": "G0000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Access group name"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of access group",
                      "enum": [
                        "SERVICE_PARTNER",
                        "SERVICE_CUSTOMER",
                        "DELEGATE",
                        "USER_DEFINED"
                      ]
                    },
                    "typeId": {
                      "type": "string",
                      "description": "The identifier of the linked entity implied by the type, e.g. the partner ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the access group",
                      "enum": [
                        "ACTIVE",
                        "DELETED"
                      ]
                    },
                    "countOfAccounts": {
                      "type": "integer",
                      "description": "The number of accounts in this group",
                      "format": "int64",
                      "deprecated": true
                    }
                  },
                  "description": "AccessGroup"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Retrieve customers using filters",
        "description": "Either using unique references, such as customer ID, or filter parameters, such as verification status, get details of any customers found.",
        "operationId": "getCustomers",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of Customer(s) to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "ID of Customer(s) to fetch"
            }
          },
          {
            "name": "delegateId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "description": "List of delegate IDs to retrieve linked customers",
              "items": {
                "type": "string",
                "description": "Delegate id to retrieve linked customers"
              }
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query parameter. ID, name or external reference of customer to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Query parameter. ID, name or external reference of customer to search for"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type to filter, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Type to filter, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer"
            }
          },
          {
            "name": "verificationStatus",
            "in": "query",
            "description": "Verification Status to filter, can be one of:\n1. UNVERIFIED -> no verification checks have been completed\n2. VERIFIED -> verification checks completed satisfactorily\n3. EXVERIFIED -> verification completed externally\n4. REFERRED -> verification is pending manual review\n5. DECLINED -> verification is complete with a negative result\n6. REVIEWED -> verification check has been reviewed",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Verification Status to filter, can be one of:\n1. UNVERIFIED -> no verification checks have been completed\n2. VERIFIED -> verification checks completed satisfactorily\n3. EXVERIFIED -> verification completed externally\n4. REFERRED -> verification is pending manual review\n5. DECLINED -> verification is complete with a negative result\n6. REVIEWED -> verification check has been reviewed"
            }
          },
          {
            "name": "fromCreatedDate",
            "in": "query",
            "description": "Customers created after and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Customers created after and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000"
            }
          },
          {
            "name": "toCreatedDate",
            "in": "query",
            "description": "Customers created before and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Customers created before and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "string",
              "description": "Page to fetch (0 indexed)"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of Page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "string",
              "description": "Size of Page to fetch"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by field. Sorted by createdDate if not present",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(name|createdDate|id)",
              "type": "string",
              "description": "Sort by field. Sorted by createdDate if not present"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sorting order:\n1. asc -> ascendant\n2. desc -> descendant",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(asc|desc)",
              "type": "string",
              "description": "Sorting order:\n1. asc -> ascendant\n2. desc -> descendant"
            }
          },
          {
            "name": "externalRef",
            "in": "query",
            "description": "A list of external references to filter",
            "required": false,
            "deprecated": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "A list of external references to filter"
            }
          },
          {
            "name": "externalReference",
            "in": "query",
            "description": "A list of external references to filter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "A list of external references to filter",
              "example": "externalReference[0].type"
            },
            "example": "externalReference[0].type"
          },
          {
            "name": "name.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "name.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyRegNumber",
            "in": "query",
            "description": "Customer registration number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Customer registration number"
            }
          },
          {
            "name": "legalEntity",
            "in": "query",
            "description": "Customer legal entity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Customer legal entity"
            }
          },
          {
            "name": "tradingAddress.addressLines",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tradingAddress.postCode",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tradingAddress.postTown",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tradingAddress.country",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tradingAddress.startDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "tradingAddress.endDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "registeredAddress.addressLines",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "registeredAddress.postCode",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registeredAddress.postTown",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registeredAddress.country",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registeredAddress.startDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "registeredAddress.endDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "associateSearchCriteria.firstNameInitial",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "associateSearchCriteria.lastName.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "associateSearchCriteria.lastName.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "associateSearchCriteria.lastNames",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "type",
                  "value"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "WORD_MATCH - using word boundaries,\nWORD_MATCH_ALPHANUMERIC - using word boundaries, but replaces non-alphanumeric characters in the search with a word boundary match,\nPREFIX - same case prefix,\nSUFFIX - same case suffix,\nCONTAINS - same case contains\nEXACT - same case exact\n",
                    "enum": [
                      "WORD_MATCH",
                      "WORD_MATCH_ALPHANUMERIC",
                      "PREFIX",
                      "SUFFIX",
                      "CONTAINS",
                      "EXACT"
                    ]
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "associateSearchCriteria.lastNamePrefix",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "associateSearchCriteria.dateOfBirth",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "associateSearchCriteria.additionalIdentifier.type",
            "in": "query",
            "description": "Type of additional personal identifier",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Type of additional personal identifier"
            }
          },
          {
            "name": "associateSearchCriteria.additionalIdentifier.value",
            "in": "query",
            "description": "Personal identifier value",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Personal identifier value"
            }
          },
          {
            "name": "associateSearchCriteria.homeAddress.addressLines",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "associateSearchCriteria.homeAddress.postCode",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "associateSearchCriteria.homeAddress.postTown",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "associateSearchCriteria.homeAddress.country",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "associateSearchCriteria.homeAddress.startDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "associateSearchCriteria.homeAddress.endDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "associateSearchCriteria.associateTypes",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DIRECTOR",
                  "PARTNER",
                  "CSECRETARY",
                  "SOLETRADER",
                  "BENE_OWNER",
                  "C_INTEREST",
                  "INDIVIDUAL",
                  "PCM_INDIVIDUAL",
                  "SIGNATORY",
                  "TRUST_SETTLOR",
                  "TRUST_BENEFICIARY",
                  "TRUST_TRUSTEE",
                  "PREQUALIFIED"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "createdDate",
                          "id",
                          "name",
                          "status",
                          "type",
                          "verificationStatus"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for a Customer. Begins with 'C'",
                            "example": "C00000001"
                          },
                          "name": {
                            "type": "string",
                            "description": "Customer's company name - must be unique across the Modulr platform."
                          },
                          "brandNames": {
                            "type": "array",
                            "description": "The customers brand name(s)",
                            "items": {
                              "required": [
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique id for the Brand Name"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The Brand Name"
                                }
                              },
                              "description": "BrandName"
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the customer, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Customer. Customers must be 'Active' for Accounts to be created for them.",
                            "enum": [
                              "ACTIVE",
                              "CLOSED",
                              "BLOCKED"
                            ]
                          },
                          "verificationStatus": {
                            "type": "string",
                            "description": "How the identity of the Customer has been verified. Can be:\n1. UNVERIFIED -> no verification checks have been completed\n2. VERIFIED -> verification checks completed satisfactorily\n3. EXVERIFIED -> verification completed externally\n4. REFERRED -> verification is pending manual review\n5. DECLINED -> verification is complete with a negative result\n6. REVIEWED -> verification check has been reviewed"
                          },
                          "companyRegNumber": {
                            "type": "string",
                            "description": "The company registration / incorporation number of the company. Only applicable for companies registered with Companies House"
                          },
                          "expectedMonthlySpend": {
                            "type": "integer",
                            "description": "Indication of the monthly spend of the customer.",
                            "format": "int32"
                          },
                          "registeredAddress": {
                            "required": [
                              "addressLine1",
                              "country",
                              "postCode",
                              "postTown"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "type": "string"
                              },
                              "addressLine2": {
                                "type": "string"
                              },
                              "postTown": {
                                "type": "string"
                              },
                              "postCode": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "countrySubDivision": {
                                "type": "string"
                              }
                            },
                            "description": "Address"
                          },
                          "tradingAddress": {
                            "required": [
                              "addressLine1",
                              "country",
                              "postCode",
                              "postTown"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "type": "string"
                              },
                              "addressLine2": {
                                "type": "string"
                              },
                              "postTown": {
                                "type": "string"
                              },
                              "postCode": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "countrySubDivision": {
                                "type": "string"
                              }
                            },
                            "description": "Address"
                          },
                          "partnerId": {
                            "type": "string",
                            "description": "The owning partner identifier"
                          },
                          "associates": {
                            "type": "array",
                            "description": "Array of associate objects that link to the Customer. For example, this could contain the details of the company directors for a Limited company, or or the partners for a partnership.",
                            "items": {
                              "required": [
                                "dateOfBirth",
                                "firstName",
                                "id",
                                "lastName",
                                "type",
                                "verificationStatus"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique id for the Associate"
                                },
                                "firstName": {
                                  "type": "string",
                                  "description": "Associate's first name(s)"
                                },
                                "middleName": {
                                  "type": "string",
                                  "description": "Associate's middle name"
                                },
                                "lastName": {
                                  "type": "string",
                                  "description": "Associate's surname"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Associate's email address"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "Associate's phone number, in international number format"
                                },
                                "applicant": {
                                  "type": "boolean",
                                  "description": "Indicates which Associate originally applied for the Modulr account"
                                },
                                "ownership": {
                                  "type": "integer",
                                  "description": "The Associate's percentage ownership of the Customer",
                                  "format": "int32"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Describes the relation between the Associate and the Customer. Can be one of "
                                },
                                "dateOfBirth": {
                                  "type": "string",
                                  "description": "Associate's date of birth in format yyyy-MM-dd, or format yyyy-MM where day is unknown"
                                },
                                "verificationStatus": {
                                  "type": "string",
                                  "description": "How the Associate was verified. Can be one of "
                                },
                                "homeAddress": {
                                  "required": [
                                    "addressLine1",
                                    "country",
                                    "postCode",
                                    "postTown"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "addressLine1": {
                                      "type": "string"
                                    },
                                    "addressLine2": {
                                      "type": "string"
                                    },
                                    "postTown": {
                                      "type": "string"
                                    },
                                    "postCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    },
                                    "countrySubDivision": {
                                      "type": "string"
                                    }
                                  },
                                  "description": "Address"
                                },
                                "documentInfo": {
                                  "type": "array",
                                  "description": "Documents gathered during Customer Due Diligence checks on an Associate.",
                                  "items": {
                                    "required": [
                                      "fileName",
                                      "path",
                                      "uploadedDate"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string"
                                      },
                                      "fileName": {
                                        "type": "string"
                                      },
                                      "uploadedDate": {
                                        "type": "string",
                                        "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                                        "example": "2017-01-28T01:01:01+0000"
                                      }
                                    },
                                    "description": "Document"
                                  }
                                },
                                "additionalPersonalIdentifiers": {
                                  "type": "array",
                                  "description": "Additional personal identifier(s)",
                                  "items": {
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of Additional Personal Identifier",
                                        "enum": [
                                          "BSN"
                                        ]
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Additional Personal Identifier value"
                                      }
                                    },
                                    "description": "AdditionalPersonalIdentifier"
                                  }
                                },
                                "complianceData": {
                                  "type": "object",
                                  "properties": {
                                    "relationship": {
                                      "type": "string"
                                    }
                                  },
                                  "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
                                }
                              },
                              "description": "Associate"
                            }
                          },
                          "industryCode": {
                            "type": "string"
                          },
                          "tcsVersion": {
                            "type": "integer",
                            "description": "Version of the Modulr Account Terms and Conditions the Customer has agreed to.",
                            "format": "int32"
                          },
                          "documentInfo": {
                            "type": "array",
                            "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement.",
                            "items": {
                              "required": [
                                "fileName",
                                "path",
                                "uploadedDate"
                              ],
                              "type": "object",
                              "properties": {
                                "path": {
                                  "type": "string"
                                },
                                "fileName": {
                                  "type": "string"
                                },
                                "uploadedDate": {
                                  "type": "string",
                                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                                  "example": "2017-01-28T01:01:01+0000"
                                }
                              },
                              "description": "Document"
                            }
                          },
                          "externalReference": {
                            "type": "string"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "Datetime when the customer was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "delegate": {
                            "required": [
                              "created",
                              "id",
                              "name",
                              "roleId",
                              "status",
                              "updated"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique reference for the Delegate.",
                                "example": "D0000001"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name for the Delegate"
                              },
                              "address": {
                                "required": [
                                  "addressLine1",
                                  "country",
                                  "postCode",
                                  "postTown"
                                ],
                                "type": "object",
                                "properties": {
                                  "addressLine1": {
                                    "type": "string"
                                  },
                                  "addressLine2": {
                                    "type": "string"
                                  },
                                  "postTown": {
                                    "type": "string"
                                  },
                                  "postCode": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "countrySubDivision": {
                                    "type": "string"
                                  }
                                },
                                "description": "Address"
                              },
                              "roleId": {
                                "type": "string",
                                "description": "The id of the Role assigned to the delegate",
                                "example": "R02002M5"
                              },
                              "externalReference": {
                                "type": "string",
                                "description": "External system reference for the Delegate"
                              },
                              "partner": {
                                "type": "string",
                                "description": "Partner Bid.",
                                "example": "R0000001"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of the Delegate."
                              },
                              "created": {
                                "type": "string",
                                "description": "Datetime the Delegate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                                "format": "date-time"
                              },
                              "updated": {
                                "type": "string",
                                "description": "Datetime the Delegate was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                                "format": "date-time"
                              }
                            },
                            "description": "Delegate"
                          },
                          "legalEntity": {
                            "type": "string",
                            "description": "Legal entity of the customer",
                            "enum": [
                              "GB",
                              "NL",
                              "IE"
                            ]
                          },
                          "customerTrust": {
                            "type": "object",
                            "properties": {
                              "trustNature": {
                                "type": "string",
                                "enum": [
                                  "BARE_TRUSTS",
                                  "INTEREST_IN_POSSESSION_TRUSTS",
                                  "DISCRETIONARY_TRUSTS",
                                  "ACCUMULATION_TRUSTS",
                                  "MIXED_TRUSTS",
                                  "SETTLOR_INTERESTED_TRUSTS",
                                  "NON_RESIDENT_TRUSTS",
                                  "OFFSHORE_TRUSTS",
                                  "FAMILY_LIVING_TRUST",
                                  "PILOT_TRUST",
                                  "VULNERABLE_BENEFICIARY_TRUST",
                                  "CHARITABLE_TRUSTS",
                                  "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                                  "TESTAMENTARY_TRUSTS",
                                  "OTHER"
                                ]
                              }
                            },
                            "description": "Trust nature for customers of type trust. Mandatory for type Trust, not to be set for non-trust customers."
                          },
                          "taxProfile": {
                            "required": [
                              "taxIdentifier"
                            ],
                            "type": "object",
                            "properties": {
                              "taxIdentifier": {
                                "type": "string",
                                "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                              }
                            },
                            "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                          },
                          "complianceData": {
                            "type": "object",
                            "properties": {
                              "typeDescription": {
                                "type": "string"
                              },
                              "riskLevel": {
                                "type": "string",
                                "enum": [
                                  "LOW",
                                  "MEDIUM",
                                  "HIGH",
                                  "UNDETERMINED"
                                ]
                              },
                              "vulnerabilityReasons": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "LIFE_EVENTS",
                                    "HEALTH",
                                    "RESILIENCE",
                                    "CAPABILITY",
                                    "FINANCIAL_DIFFICULTY"
                                  ]
                                }
                              }
                            },
                            "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
                          },
                          "complianceSector": {
                            "type": "string",
                            "example": "Agency Lite Consumer"
                          },
                          "generateStatements": {
                            "type": "boolean",
                            "description": "True if the customer is configured to generate statements"
                          }
                        },
                        "description": "A Customer is a single legal entity that can have 1 or more accounts"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create a new customer",
        "description": "This endpoint allows you to create a new customer. Creating a customer is a complex process with several dependencies, e.g: Directors, type of customer, legal specifications. For further information, please visit 'Creating a customer and account' entry on our API documentation",
        "operationId": "createCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "legalEntity",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "externalReference": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w \\-]*",
                    "type": "string",
                    "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
                  },
                  "name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "pattern": "^([_'@,&()Â£$â¬Â¥=#%\\â\\â:;/<>Â«Â»\\\"!\\â\\â\\â.\\?\\-\\s\\*\\{\\}\\[\\]\\+\\%\\\\]*?[\\p{L}0-9])+[_'@,&()Â£$â¬Â¥=#%\\â\\â:;/<>Â«Â»\\\"!\\â\\â\\â.\\?\\-\\s\\*\\{\\}\\[\\]\\+\\%\\\\]*",
                    "type": "string",
                    "description": "AlphaNumeric characters plus [ _ ' @ , & Â£ $ â¬ Â¥ = # % â â : ; \\ / < > Â« Â»  ! â â â . ? - *{ }  + % ( )]. Mandatory for all types except 'INDIVIDUAL and PCM_INDIVIDUAL'"
                  },
                  "companyRegNumber": {
                    "maxLength": 40,
                    "minLength": 0,
                    "type": "string",
                    "description": "Company registration number. Mandatory for 'LLC' and 'PLC'"
                  },
                  "registeredAddress": {
                    "required": [
                      "addressLine1",
                      "postTown"
                    ],
                    "type": "object",
                    "properties": {
                      "addressLine1": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "addressLine2": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postTown": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postCode": {
                        "maxLength": 10,
                        "type": "string"
                      },
                      "country": {
                        "type": "string",
                        "description": "Mandatory for international payments."
                      },
                      "countrySubDivision": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                      }
                    },
                    "description": "Home address"
                  },
                  "tradingAddress": {
                    "required": [
                      "addressLine1",
                      "postTown"
                    ],
                    "type": "object",
                    "properties": {
                      "addressLine1": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "addressLine2": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postTown": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postCode": {
                        "maxLength": 10,
                        "type": "string"
                      },
                      "country": {
                        "type": "string",
                        "description": "Mandatory for international payments."
                      },
                      "countrySubDivision": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                      }
                    },
                    "description": "Home address"
                  },
                  "industryCode": {
                    "maxLength": 5,
                    "minLength": 0,
                    "type": "string",
                    "description": "Mandatory for all types except 'INDIVIDUAL', 'PCM_INDIVIDUAL' and 'PCM_BUSINESS'. In-house KYC partners -> Refer to Modulr Industry Code list. Outsourced KYC partners -> custom codes allowed."
                  },
                  "tcsVersion": {
                    "maximum": 1000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Terms and conditions version. Mandatory for all types except 'PCM_INDIVIDUAL' and 'PCM_BUSINESS'",
                    "format": "int32"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the customer, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer\n11. TRUST -> trust customer\n12. PREQUALIFIED -> only for use by customers who have been pre-authorised by Modulr"
                  },
                  "expectedMonthlySpend": {
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Mandatory for all types except 'PCM_INDIVIDUAL' and 'PCM_BUSINESS'",
                    "format": "int32"
                  },
                  "associates": {
                    "type": "array",
                    "description": "Mandatory for all types except 'PCM_BUSINESS'",
                    "items": {
                      "required": [
                        "firstName",
                        "homeAddress",
                        "lastName",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of associate"
                        },
                        "firstName": {
                          "maxLength": 100,
                          "minLength": 1,
                          "pattern": "^[\\p{L}' -]+$",
                          "type": "string",
                          "description": "Letters, hyphens and apostrophes"
                        },
                        "middleName": {
                          "pattern": "^[\\p{L}' -]*$",
                          "type": "string",
                          "description": "Letters, hyphens and apostrophes"
                        },
                        "lastName": {
                          "maxLength": 100,
                          "minLength": 1,
                          "pattern": "^[\\p{L}' -]+$",
                          "type": "string",
                          "description": "Letters, hyphens and apostrophes"
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "description": "Date in yyyy-MM-dd format. If associate is a non-applicant director or partner, then partial DOB of yyyy-MM format is allowed. Valid age is from 16 to 100 years. If Applicant then minimum age required is 18 years for specific partners. Required for all associate types except PCM_INDIVIDUAL."
                        },
                        "ownership": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer",
                          "description": "Ownership percentage for Partners",
                          "format": "int32"
                        },
                        "homeAddress": {
                          "required": [
                            "addressLine1",
                            "postTown"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            },
                            "addressLine2": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            },
                            "postTown": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            },
                            "postCode": {
                              "maxLength": 10,
                              "type": "string"
                            },
                            "country": {
                              "type": "string",
                              "description": "Mandatory for international payments."
                            },
                            "countrySubDivision": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string"
                            }
                          },
                          "description": "Home address"
                        },
                        "applicant": {
                          "type": "boolean",
                          "description": "Indicates if the associate is the applicant. Only one associate can be marked as such."
                        },
                        "email": {
                          "maxLength": 100,
                          "minLength": 0,
                          "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
                          "type": "string",
                          "description": "Contact email address for applicants"
                        },
                        "phone": {
                          "type": "string",
                          "description": "Contact phone number for applicants, will be formatted into international number pattern"
                        },
                        "documentInfo": {
                          "type": "array",
                          "description": "Information on uploaded documents",
                          "items": {
                            "required": [
                              "fileName",
                              "path",
                              "uploadedDate"
                            ],
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string"
                              },
                              "fileName": {
                                "type": "string"
                              },
                              "uploadedDate": {
                                "type": "string",
                                "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                                "example": "2017-01-28T01:01:01+0000"
                              }
                            },
                            "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
                          }
                        },
                        "additionalIdentifiers": {
                          "type": "array",
                          "description": "Additional identifiers",
                          "items": {
                            "required": [
                              "type",
                              "value"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of additional personal identifier",
                                "enum": [
                                  "BSN"
                                ]
                              },
                              "value": {
                                "type": "string",
                                "description": "Personal identifier value"
                              }
                            },
                            "description": "Additional identifiers"
                          }
                        },
                        "complianceData": {
                          "required": [
                            "relationship"
                          ],
                          "type": "object",
                          "properties": {
                            "relationship": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            }
                          },
                          "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
                        }
                      },
                      "description": "Mandatory for all types except 'PCM_BUSINESS'"
                    }
                  },
                  "documentInfo": {
                    "type": "array",
                    "description": "information on uploaded documents",
                    "items": {
                      "required": [
                        "fileName",
                        "path",
                        "uploadedDate"
                      ],
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "fileName": {
                          "type": "string"
                        },
                        "uploadedDate": {
                          "type": "string",
                          "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                          "example": "2017-01-28T01:01:01+0000"
                        }
                      },
                      "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
                    }
                  },
                  "legalEntity": {
                    "type": "string",
                    "description": "Legal entity of the customer",
                    "enum": [
                      "GB",
                      "NL",
                      "IE"
                    ]
                  },
                  "provisionalCustomerId": {
                    "type": "string",
                    "description": "Reference to provisional customer in onboarding flow"
                  },
                  "customerTrust": {
                    "required": [
                      "trustNature"
                    ],
                    "type": "object",
                    "properties": {
                      "trustNature": {
                        "type": "string",
                        "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers.",
                        "enum": [
                          "BARE_TRUSTS",
                          "INTEREST_IN_POSSESSION_TRUSTS",
                          "DISCRETIONARY_TRUSTS",
                          "ACCUMULATION_TRUSTS",
                          "MIXED_TRUSTS",
                          "SETTLOR_INTERESTED_TRUSTS",
                          "NON_RESIDENT_TRUSTS",
                          "OFFSHORE_TRUSTS",
                          "FAMILY_LIVING_TRUST",
                          "PILOT_TRUST",
                          "VULNERABLE_BENEFICIARY_TRUST",
                          "CHARITABLE_TRUSTS",
                          "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                          "TESTAMENTARY_TRUSTS",
                          "OTHER"
                        ]
                      }
                    },
                    "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers."
                  },
                  "taxProfile": {
                    "required": [
                      "taxIdentifier"
                    ],
                    "type": "object",
                    "properties": {
                      "taxIdentifier": {
                        "maxLength": 15,
                        "minLength": 0,
                        "type": "string",
                        "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                      }
                    },
                    "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                  },
                  "complianceData": {
                    "type": "object",
                    "properties": {
                      "typeDescription": {
                        "maxLength": 200,
                        "minLength": 0,
                        "type": "string",
                        "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
                      },
                      "riskLevel": {
                        "type": "string",
                        "description": "Risk level of the customer",
                        "enum": [
                          "LOW",
                          "MEDIUM",
                          "HIGH",
                          "UNDETERMINED"
                        ]
                      },
                      "vulnerabilityReasons": {
                        "type": "array",
                        "description": "Vulnerability Reasons of the customer",
                        "items": {
                          "type": "string",
                          "description": "Vulnerability Reasons of the customer",
                          "enum": [
                            "LIFE_EVENTS",
                            "HEALTH",
                            "RESILIENCE",
                            "CAPABILITY",
                            "FINANCIAL_DIFFICULTY"
                          ]
                        }
                      }
                    },
                    "description": "Required for customers of type PREQUALIFIED."
                  },
                  "consumerDuty": {
                    "type": "object",
                    "properties": {
                      "scope": {
                        "type": "string",
                        "enum": [
                          "IN_SCOPE",
                          "NOT_IN_SCOPE"
                        ]
                      },
                      "numberOfEmployees": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "netAssets": {
                        "type": "number"
                      },
                      "turnover": {
                        "type": "number"
                      }
                    },
                    "description": "Consumer Duty data of the customer"
                  }
                },
                "description": "Details of customer to create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "createdDate",
                    "id",
                    "name",
                    "status",
                    "type",
                    "verificationStatus"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for a Customer. Begins with 'C'",
                      "example": "C00000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Customer's company name - must be unique across the Modulr platform."
                    },
                    "brandNames": {
                      "type": "array",
                      "description": "The customers brand name(s)",
                      "items": {
                        "required": [
                          "id",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the Brand Name"
                          },
                          "name": {
                            "type": "string",
                            "description": "The Brand Name"
                          }
                        },
                        "description": "BrandName"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the customer, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the Customer. Customers must be 'Active' for Accounts to be created for them.",
                      "enum": [
                        "ACTIVE",
                        "CLOSED",
                        "BLOCKED"
                      ]
                    },
                    "verificationStatus": {
                      "type": "string",
                      "description": "How the identity of the Customer has been verified. Can be:\n1. UNVERIFIED -> no verification checks have been completed\n2. VERIFIED -> verification checks completed satisfactorily\n3. EXVERIFIED -> verification completed externally\n4. REFERRED -> verification is pending manual review\n5. DECLINED -> verification is complete with a negative result\n6. REVIEWED -> verification check has been reviewed"
                    },
                    "companyRegNumber": {
                      "type": "string",
                      "description": "The company registration / incorporation number of the company. Only applicable for companies registered with Companies House"
                    },
                    "expectedMonthlySpend": {
                      "type": "integer",
                      "description": "Indication of the monthly spend of the customer.",
                      "format": "int32"
                    },
                    "registeredAddress": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "type": "string"
                        },
                        "addressLine2": {
                          "type": "string"
                        },
                        "postTown": {
                          "type": "string"
                        },
                        "postCode": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "countrySubDivision": {
                          "type": "string"
                        }
                      },
                      "description": "Address"
                    },
                    "tradingAddress": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "type": "string"
                        },
                        "addressLine2": {
                          "type": "string"
                        },
                        "postTown": {
                          "type": "string"
                        },
                        "postCode": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "countrySubDivision": {
                          "type": "string"
                        }
                      },
                      "description": "Address"
                    },
                    "partnerId": {
                      "type": "string",
                      "description": "The owning partner identifier"
                    },
                    "associates": {
                      "type": "array",
                      "description": "Array of associate objects that link to the Customer. For example, this could contain the details of the company directors for a Limited company, or or the partners for a partnership.",
                      "items": {
                        "required": [
                          "dateOfBirth",
                          "firstName",
                          "id",
                          "lastName",
                          "type",
                          "verificationStatus"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the Associate"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Associate's first name(s)"
                          },
                          "middleName": {
                            "type": "string",
                            "description": "Associate's middle name"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Associate's surname"
                          },
                          "email": {
                            "type": "string",
                            "description": "Associate's email address"
                          },
                          "phone": {
                            "type": "string",
                            "description": "Associate's phone number, in international number format"
                          },
                          "applicant": {
                            "type": "boolean",
                            "description": "Indicates which Associate originally applied for the Modulr account"
                          },
                          "ownership": {
                            "type": "integer",
                            "description": "The Associate's percentage ownership of the Customer",
                            "format": "int32"
                          },
                          "type": {
                            "type": "string",
                            "description": "Describes the relation between the Associate and the Customer. Can be one of "
                          },
                          "dateOfBirth": {
                            "type": "string",
                            "description": "Associate's date of birth in format yyyy-MM-dd, or format yyyy-MM where day is unknown"
                          },
                          "verificationStatus": {
                            "type": "string",
                            "description": "How the Associate was verified. Can be one of "
                          },
                          "homeAddress": {
                            "required": [
                              "addressLine1",
                              "country",
                              "postCode",
                              "postTown"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "type": "string"
                              },
                              "addressLine2": {
                                "type": "string"
                              },
                              "postTown": {
                                "type": "string"
                              },
                              "postCode": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "countrySubDivision": {
                                "type": "string"
                              }
                            },
                            "description": "Address"
                          },
                          "documentInfo": {
                            "type": "array",
                            "description": "Documents gathered during Customer Due Diligence checks on an Associate.",
                            "items": {
                              "required": [
                                "fileName",
                                "path",
                                "uploadedDate"
                              ],
                              "type": "object",
                              "properties": {
                                "path": {
                                  "type": "string"
                                },
                                "fileName": {
                                  "type": "string"
                                },
                                "uploadedDate": {
                                  "type": "string",
                                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                                  "example": "2017-01-28T01:01:01+0000"
                                }
                              },
                              "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
                            }
                          },
                          "additionalPersonalIdentifiers": {
                            "type": "array",
                            "description": "Additional personal identifier(s)",
                            "items": {
                              "required": [
                                "type",
                                "value"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of Additional Personal Identifier",
                                  "enum": [
                                    "BSN"
                                  ]
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Additional Personal Identifier value"
                                }
                              },
                              "description": "AdditionalPersonalIdentifier"
                            }
                          },
                          "complianceData": {
                            "type": "object",
                            "properties": {
                              "relationship": {
                                "type": "string"
                              }
                            },
                            "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
                          }
                        },
                        "description": "Associate"
                      }
                    },
                    "industryCode": {
                      "type": "string"
                    },
                    "tcsVersion": {
                      "type": "integer",
                      "description": "Version of the Modulr Account Terms and Conditions the Customer has agreed to.",
                      "format": "int32"
                    },
                    "documentInfo": {
                      "type": "array",
                      "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement.",
                      "items": {
                        "required": [
                          "fileName",
                          "path",
                          "uploadedDate"
                        ],
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "uploadedDate": {
                            "type": "string",
                            "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "example": "2017-01-28T01:01:01+0000"
                          }
                        },
                        "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
                      }
                    },
                    "externalReference": {
                      "type": "string"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when the customer was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "delegate": {
                      "required": [
                        "created",
                        "id",
                        "name",
                        "roleId",
                        "status",
                        "updated"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique reference for the Delegate.",
                          "example": "D0000001"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name for the Delegate"
                        },
                        "address": {
                          "required": [
                            "addressLine1",
                            "country",
                            "postCode",
                            "postTown"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "type": "string"
                            },
                            "addressLine2": {
                              "type": "string"
                            },
                            "postTown": {
                              "type": "string"
                            },
                            "postCode": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "countrySubDivision": {
                              "type": "string"
                            }
                          },
                          "description": "Address"
                        },
                        "roleId": {
                          "type": "string",
                          "description": "The id of the Role assigned to the delegate",
                          "example": "R02002M5"
                        },
                        "externalReference": {
                          "type": "string",
                          "description": "External system reference for the Delegate"
                        },
                        "partner": {
                          "type": "string",
                          "description": "Partner Bid.",
                          "example": "R0000001"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the Delegate."
                        },
                        "created": {
                          "type": "string",
                          "description": "Datetime the Delegate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                          "format": "date-time"
                        },
                        "updated": {
                          "type": "string",
                          "description": "Datetime the Delegate was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                          "format": "date-time"
                        }
                      },
                      "description": "Delegate"
                    },
                    "legalEntity": {
                      "type": "string",
                      "description": "Legal entity of the customer",
                      "enum": [
                        "GB",
                        "NL",
                        "IE"
                      ]
                    },
                    "customerTrust": {
                      "type": "object",
                      "properties": {
                        "trustNature": {
                          "type": "string",
                          "enum": [
                            "BARE_TRUSTS",
                            "INTEREST_IN_POSSESSION_TRUSTS",
                            "DISCRETIONARY_TRUSTS",
                            "ACCUMULATION_TRUSTS",
                            "MIXED_TRUSTS",
                            "SETTLOR_INTERESTED_TRUSTS",
                            "NON_RESIDENT_TRUSTS",
                            "OFFSHORE_TRUSTS",
                            "FAMILY_LIVING_TRUST",
                            "PILOT_TRUST",
                            "VULNERABLE_BENEFICIARY_TRUST",
                            "CHARITABLE_TRUSTS",
                            "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                            "TESTAMENTARY_TRUSTS",
                            "OTHER"
                          ]
                        }
                      },
                      "description": "Trust nature for customers of type trust. Mandatory for type Trust, not to be set for non-trust customers."
                    },
                    "taxProfile": {
                      "required": [
                        "taxIdentifier"
                      ],
                      "type": "object",
                      "properties": {
                        "taxIdentifier": {
                          "type": "string",
                          "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                        }
                      },
                      "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                    },
                    "complianceData": {
                      "type": "object",
                      "properties": {
                        "typeDescription": {
                          "type": "string"
                        },
                        "riskLevel": {
                          "type": "string",
                          "enum": [
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "UNDETERMINED"
                          ]
                        },
                        "vulnerabilityReasons": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "LIFE_EVENTS",
                              "HEALTH",
                              "RESILIENCE",
                              "CAPABILITY",
                              "FINANCIAL_DIFFICULTY"
                            ]
                          }
                        }
                      },
                      "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
                    },
                    "complianceSector": {
                      "type": "string",
                      "example": "Agency Lite Consumer"
                    },
                    "generateStatements": {
                      "type": "boolean",
                      "description": "True if the customer is configured to generate statements"
                    }
                  },
                  "description": "A Customer is a single legal entity that can have 1 or more accounts"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/beneficiaries": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Retrieve beneficiaries",
        "description": "The ability to get the details of beneficiaries using various pieces of information, e.g. using customer ID, retrieve all beneficiaries created by that customer. Can get details of one particular beneficiary based on the unique beneficiary reference number.",
        "operationId": "getBeneficiaries",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of Beneficiary(s) to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Id of Beneficiary(s) to fetch"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter by Customer Id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Filter by Customer Id"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Partial name of beneficiary or Scan Details Or IBAN Or external referenceOr default reference to search for. Deprecated use validForAccount, orSortCode, orAccountNumber, orIban, orName, orExternalReference, orDefaultReference instead",
            "required": false,
            "deprecated": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Partial name of beneficiary or Scan Details Or IBAN Or external referenceOr default reference to search for. Deprecated use validForAccount, orSortCode, orAccountNumber, orIban, orName, orExternalReference, orDefaultReference instead"
            }
          },
          {
            "name": "modifiedSince",
            "in": "query",
            "description": "Beneficiaries modified after this date time",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Beneficiaries modified after this date time"
            }
          },
          {
            "name": "hasExternalReference",
            "in": "query",
            "description": "Filter by existence of external reference",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "description": "Filter by existence of external reference"
            }
          },
          {
            "name": "externalReference",
            "in": "query",
            "description": "External reference for beneficiary",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "External reference for beneficiary"
            }
          },
          {
            "name": "iban",
            "in": "query",
            "description": "IBAN",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "IBAN"
            }
          },
          {
            "name": "abaRoutingNumber",
            "in": "query",
            "description": "abaRoutingNumber",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "abaRoutingNumber"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Currency"
            }
          },
          {
            "name": "qualifier",
            "in": "query",
            "description": "A list of external qualifiers",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "A list of external qualifiers"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Approval item state(s) to filter by",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Approval item state(s) to filter by"
            }
          },
          {
            "name": "validForAccount",
            "in": "query",
            "description": "Source account BID. Limit results to beneficiaries which would be valid recipients of payments from the given account (e.g. IBAN canât be paid from GBP account, SCAN canât be paid from non-GBP account). The specified account must be accessible to the user",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Source account BID. Limit results to beneficiaries which would be valid recipients of payments from the given account (e.g. IBAN canât be paid from GBP account, SCAN canât be paid from non-GBP account). The specified account must be accessible to the user",
              "example": "A000000001"
            },
            "example": "A000000001"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(ASC|DESC)",
              "type": "string",
              "description": "Sort order"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by field, This defaults to name if not present",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(name|createdDate)",
              "type": "string",
              "description": "Sort by field, This defaults to name if not present"
            }
          },
          {
            "name": "orSortCode.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "orSortCode.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orAccountNumber.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "orAccountNumber.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orIban.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "orIban.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orAbaRoutingNumber.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "orAbaRoutingNumber.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orName.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "orName.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orExternalReference.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "orExternalReference.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orDefaultReference.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "orDefaultReference.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdDate",
            "in": "query",
            "description": "Created date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Created date"
            }
          },
          {
            "name": "partialName",
            "in": "query",
            "description": "Partial name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Partial name"
            }
          },
          {
            "name": "sortCode",
            "in": "query",
            "description": "Sort code",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Sort code"
            }
          },
          {
            "name": "accountNumber",
            "in": "query",
            "description": "Account number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Account number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Page to fetch (0 indexed)"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of Page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "string",
              "description": "Size of Page to fetch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "created",
                          "customerId",
                          "defaultReference",
                          "destinationIdentifier",
                          "id",
                          "name",
                          "status",
                          "updated"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique reference for the Beneficiary.",
                            "example": "B00000001A"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name for the Beneficiary"
                          },
                          "birthdate": {
                            "type": "string",
                            "description": "Date of birth for the Beneficiary in yyyy-MM-dd format",
                            "format": "date"
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "Email address for the Beneficiary"
                          },
                          "phoneNumber": {
                            "type": "string",
                            "description": "Phone number for the Beneficiary in international pattern"
                          },
                          "destinationIdentifier": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "accountNumber": {
                                "type": "string",
                                "description": "Bank account Sort Code",
                                "example": "12345678"
                              },
                              "accountType": {
                                "type": "string",
                                "description": "Bank account type like PERSONAL/BUSINESS",
                                "enum": [
                                  "PERSONAL",
                                  "BUSINESS"
                                ]
                              },
                              "sortCode": {
                                "type": "string",
                                "description": "Bank account Sort Code",
                                "example": "000000"
                              },
                              "iban": {
                                "type": "string",
                                "example": "GB20MODR04001401100000"
                              },
                              "bic": {
                                "type": "string",
                                "example": "MODRGB21"
                              },
                              "currency": {
                                "type": "string",
                                "example": "GBP"
                              },
                              "countrySpecificDetails": {
                                "type": "object",
                                "properties": {
                                  "bankName": {
                                    "type": "string",
                                    "description": "The name of the destination bank.",
                                    "example": "Apple Bank"
                                  },
                                  "bankAddress": {
                                    "type": "string",
                                    "description": "The address of the destination bank.",
                                    "example": "2100 Broadway"
                                  },
                                  "bankCity": {
                                    "type": "string",
                                    "description": "The city in which the destination bank resides.",
                                    "example": "New York City"
                                  },
                                  "bankBranchName": {
                                    "type": "string",
                                    "description": "The name of the destination bank's branch.",
                                    "example": "New York"
                                  },
                                  "bankBranchCode": {
                                    "type": "string",
                                    "description": "The code of the destination bank's branch.",
                                    "example": "44-04"
                                  },
                                  "bankCode": {
                                    "type": "string",
                                    "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                                  },
                                  "chineseId": {
                                    "type": "string",
                                    "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                    "example": "01101201901018889"
                                  },
                                  "province": {
                                    "type": "string",
                                    "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                    "example": "Zhejiang"
                                  },
                                  "business": {
                                    "type": "boolean",
                                    "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                    "example": true
                                  },
                                  "bankCodeType": {
                                    "type": "string",
                                    "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                    "example": "ABA",
                                    "enum": [
                                      "ABA",
                                      "CHIPS"
                                    ]
                                  },
                                  "bankCountry": {
                                    "type": "string",
                                    "description": "The country in which the destination bank resides.",
                                    "example": "US",
                                    "enum": [
                                      "AT",
                                      "BE",
                                      "BG",
                                      "CY",
                                      "CZ",
                                      "DK",
                                      "EE",
                                      "FI",
                                      "FR",
                                      "DE",
                                      "GR",
                                      "HR",
                                      "HU",
                                      "IS",
                                      "IE",
                                      "IT",
                                      "LV",
                                      "LI",
                                      "LT",
                                      "LU",
                                      "MT",
                                      "NL",
                                      "NO",
                                      "PL",
                                      "PT",
                                      "RO",
                                      "SK",
                                      "SI",
                                      "ES",
                                      "SE",
                                      "GB",
                                      "MQ",
                                      "YT",
                                      "GP",
                                      "GF",
                                      "RE",
                                      "MF",
                                      "GI",
                                      "GG",
                                      "IM",
                                      "JE",
                                      "MC",
                                      "CH",
                                      "AD",
                                      "SM",
                                      "VA",
                                      "AX",
                                      "PM",
                                      "BL",
                                      "AF",
                                      "AL",
                                      "DZ",
                                      "AS",
                                      "AO",
                                      "AI",
                                      "AQ",
                                      "AG",
                                      "AR",
                                      "AM",
                                      "AW",
                                      "AU",
                                      "AZ",
                                      "BS",
                                      "BH",
                                      "BD",
                                      "BB",
                                      "BY",
                                      "BZ",
                                      "BJ",
                                      "BM",
                                      "BT",
                                      "BO",
                                      "BQ",
                                      "BA",
                                      "BW",
                                      "BV",
                                      "BR",
                                      "IO",
                                      "VG",
                                      "BN",
                                      "BF",
                                      "BI",
                                      "KH",
                                      "CM",
                                      "CA",
                                      "CV",
                                      "KY",
                                      "CF",
                                      "TD",
                                      "CL",
                                      "CN",
                                      "CX",
                                      "CC",
                                      "CO",
                                      "KM",
                                      "CK",
                                      "CR",
                                      "CU",
                                      "CW",
                                      "CD",
                                      "DJ",
                                      "DM",
                                      "DO",
                                      "TL",
                                      "EC",
                                      "EG",
                                      "SV",
                                      "GQ",
                                      "ER",
                                      "SZ",
                                      "ET",
                                      "FK",
                                      "FO",
                                      "FJ",
                                      "PF",
                                      "TF",
                                      "GA",
                                      "GM",
                                      "GE",
                                      "GH",
                                      "GL",
                                      "GD",
                                      "GU",
                                      "GT",
                                      "GN",
                                      "GW",
                                      "GY",
                                      "HT",
                                      "HM",
                                      "HN",
                                      "HK",
                                      "IN",
                                      "ID",
                                      "IR",
                                      "IQ",
                                      "IL",
                                      "CI",
                                      "JM",
                                      "JP",
                                      "JO",
                                      "KZ",
                                      "KE",
                                      "KI",
                                      "XK",
                                      "KW",
                                      "KG",
                                      "LA",
                                      "LB",
                                      "LS",
                                      "LR",
                                      "LY",
                                      "MO",
                                      "MG",
                                      "MW",
                                      "MY",
                                      "MV",
                                      "ML",
                                      "MH",
                                      "MR",
                                      "MU",
                                      "MX",
                                      "FM",
                                      "MD",
                                      "MN",
                                      "ME",
                                      "MS",
                                      "MA",
                                      "MZ",
                                      "MM",
                                      "NA",
                                      "NR",
                                      "NP",
                                      "AN",
                                      "NC",
                                      "NZ",
                                      "NI",
                                      "NE",
                                      "NG",
                                      "NU",
                                      "NF",
                                      "KP",
                                      "MK",
                                      "MP",
                                      "OM",
                                      "PK",
                                      "PW",
                                      "PS",
                                      "PA",
                                      "PG",
                                      "PY",
                                      "PE",
                                      "PH",
                                      "PN",
                                      "PR",
                                      "QA",
                                      "CG",
                                      "RU",
                                      "RW",
                                      "SH",
                                      "KN",
                                      "LC",
                                      "VC",
                                      "WS",
                                      "ST",
                                      "SA",
                                      "SN",
                                      "RS",
                                      "SC",
                                      "SL",
                                      "SG",
                                      "SX",
                                      "SB",
                                      "SO",
                                      "ZA",
                                      "KR",
                                      "GS",
                                      "SS",
                                      "LK",
                                      "SD",
                                      "SR",
                                      "SY",
                                      "SJ",
                                      "TW",
                                      "TJ",
                                      "TZ",
                                      "TH",
                                      "TG",
                                      "TK",
                                      "TO",
                                      "TT",
                                      "TN",
                                      "TR",
                                      "TM",
                                      "TC",
                                      "TV",
                                      "UG",
                                      "UA",
                                      "AE",
                                      "UM",
                                      "US",
                                      "UY",
                                      "UZ",
                                      "VU",
                                      "VE",
                                      "VN",
                                      "VI",
                                      "WF",
                                      "EH",
                                      "YE",
                                      "ZM",
                                      "ZW"
                                    ]
                                  },
                                  "abaRoutingNumber": {
                                    "type": "string",
                                    "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                    "example": "123456789"
                                  }
                                },
                                "example": {
                                  "branchCode": "123456789"
                                }
                              }
                            },
                            "description": "Account Identifier"
                          },
                          "redirectedDestination": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "accountNumber": {
                                "type": "string",
                                "description": "Bank account Sort Code",
                                "example": "12345678"
                              },
                              "accountType": {
                                "type": "string",
                                "description": "Bank account type like PERSONAL/BUSINESS",
                                "enum": [
                                  "PERSONAL",
                                  "BUSINESS"
                                ]
                              },
                              "sortCode": {
                                "type": "string",
                                "description": "Bank account Sort Code",
                                "example": "000000"
                              },
                              "iban": {
                                "type": "string",
                                "example": "GB20MODR04001401100000"
                              },
                              "bic": {
                                "type": "string",
                                "example": "MODRGB21"
                              },
                              "currency": {
                                "type": "string",
                                "example": "GBP"
                              },
                              "countrySpecificDetails": {
                                "type": "object",
                                "properties": {
                                  "bankName": {
                                    "type": "string",
                                    "description": "The name of the destination bank.",
                                    "example": "Apple Bank"
                                  },
                                  "bankAddress": {
                                    "type": "string",
                                    "description": "The address of the destination bank.",
                                    "example": "2100 Broadway"
                                  },
                                  "bankCity": {
                                    "type": "string",
                                    "description": "The city in which the destination bank resides.",
                                    "example": "New York City"
                                  },
                                  "bankBranchName": {
                                    "type": "string",
                                    "description": "The name of the destination bank's branch.",
                                    "example": "New York"
                                  },
                                  "bankBranchCode": {
                                    "type": "string",
                                    "description": "The code of the destination bank's branch.",
                                    "example": "44-04"
                                  },
                                  "bankCode": {
                                    "type": "string",
                                    "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                                  },
                                  "chineseId": {
                                    "type": "string",
                                    "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                    "example": "01101201901018889"
                                  },
                                  "province": {
                                    "type": "string",
                                    "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                    "example": "Zhejiang"
                                  },
                                  "business": {
                                    "type": "boolean",
                                    "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                    "example": true
                                  },
                                  "bankCodeType": {
                                    "type": "string",
                                    "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                    "example": "ABA",
                                    "enum": [
                                      "ABA",
                                      "CHIPS"
                                    ]
                                  },
                                  "bankCountry": {
                                    "type": "string",
                                    "description": "The country in which the destination bank resides.",
                                    "example": "US",
                                    "enum": [
                                      "AT",
                                      "BE",
                                      "BG",
                                      "CY",
                                      "CZ",
                                      "DK",
                                      "EE",
                                      "FI",
                                      "FR",
                                      "DE",
                                      "GR",
                                      "HR",
                                      "HU",
                                      "IS",
                                      "IE",
                                      "IT",
                                      "LV",
                                      "LI",
                                      "LT",
                                      "LU",
                                      "MT",
                                      "NL",
                                      "NO",
                                      "PL",
                                      "PT",
                                      "RO",
                                      "SK",
                                      "SI",
                                      "ES",
                                      "SE",
                                      "GB",
                                      "MQ",
                                      "YT",
                                      "GP",
                                      "GF",
                                      "RE",
                                      "MF",
                                      "GI",
                                      "GG",
                                      "IM",
                                      "JE",
                                      "MC",
                                      "CH",
                                      "AD",
                                      "SM",
                                      "VA",
                                      "AX",
                                      "PM",
                                      "BL",
                                      "AF",
                                      "AL",
                                      "DZ",
                                      "AS",
                                      "AO",
                                      "AI",
                                      "AQ",
                                      "AG",
                                      "AR",
                                      "AM",
                                      "AW",
                                      "AU",
                                      "AZ",
                                      "BS",
                                      "BH",
                                      "BD",
                                      "BB",
                                      "BY",
                                      "BZ",
                                      "BJ",
                                      "BM",
                                      "BT",
                                      "BO",
                                      "BQ",
                                      "BA",
                                      "BW",
                                      "BV",
                                      "BR",
                                      "IO",
                                      "VG",
                                      "BN",
                                      "BF",
                                      "BI",
                                      "KH",
                                      "CM",
                                      "CA",
                                      "CV",
                                      "KY",
                                      "CF",
                                      "TD",
                                      "CL",
                                      "CN",
                                      "CX",
                                      "CC",
                                      "CO",
                                      "KM",
                                      "CK",
                                      "CR",
                                      "CU",
                                      "CW",
                                      "CD",
                                      "DJ",
                                      "DM",
                                      "DO",
                                      "TL",
                                      "EC",
                                      "EG",
                                      "SV",
                                      "GQ",
                                      "ER",
                                      "SZ",
                                      "ET",
                                      "FK",
                                      "FO",
                                      "FJ",
                                      "PF",
                                      "TF",
                                      "GA",
                                      "GM",
                                      "GE",
                                      "GH",
                                      "GL",
                                      "GD",
                                      "GU",
                                      "GT",
                                      "GN",
                                      "GW",
                                      "GY",
                                      "HT",
                                      "HM",
                                      "HN",
                                      "HK",
                                      "IN",
                                      "ID",
                                      "IR",
                                      "IQ",
                                      "IL",
                                      "CI",
                                      "JM",
                                      "JP",
                                      "JO",
                                      "KZ",
                                      "KE",
                                      "KI",
                                      "XK",
                                      "KW",
                                      "KG",
                                      "LA",
                                      "LB",
                                      "LS",
                                      "LR",
                                      "LY",
                                      "MO",
                                      "MG",
                                      "MW",
                                      "MY",
                                      "MV",
                                      "ML",
                                      "MH",
                                      "MR",
                                      "MU",
                                      "MX",
                                      "FM",
                                      "MD",
                                      "MN",
                                      "ME",
                                      "MS",
                                      "MA",
                                      "MZ",
                                      "MM",
                                      "NA",
                                      "NR",
                                      "NP",
                                      "AN",
                                      "NC",
                                      "NZ",
                                      "NI",
                                      "NE",
                                      "NG",
                                      "NU",
                                      "NF",
                                      "KP",
                                      "MK",
                                      "MP",
                                      "OM",
                                      "PK",
                                      "PW",
                                      "PS",
                                      "PA",
                                      "PG",
                                      "PY",
                                      "PE",
                                      "PH",
                                      "PN",
                                      "PR",
                                      "QA",
                                      "CG",
                                      "RU",
                                      "RW",
                                      "SH",
                                      "KN",
                                      "LC",
                                      "VC",
                                      "WS",
                                      "ST",
                                      "SA",
                                      "SN",
                                      "RS",
                                      "SC",
                                      "SL",
                                      "SG",
                                      "SX",
                                      "SB",
                                      "SO",
                                      "ZA",
                                      "KR",
                                      "GS",
                                      "SS",
                                      "LK",
                                      "SD",
                                      "SR",
                                      "SY",
                                      "SJ",
                                      "TW",
                                      "TJ",
                                      "TZ",
                                      "TH",
                                      "TG",
                                      "TK",
                                      "TO",
                                      "TT",
                                      "TN",
                                      "TR",
                                      "TM",
                                      "TC",
                                      "TV",
                                      "UG",
                                      "UA",
                                      "AE",
                                      "UM",
                                      "US",
                                      "UY",
                                      "UZ",
                                      "VU",
                                      "VE",
                                      "VN",
                                      "VI",
                                      "WF",
                                      "EH",
                                      "YE",
                                      "ZM",
                                      "ZW"
                                    ]
                                  },
                                  "abaRoutingNumber": {
                                    "type": "string",
                                    "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                    "example": "123456789"
                                  }
                                },
                                "example": {
                                  "branchCode": "123456789"
                                }
                              }
                            },
                            "description": "Account Identifier"
                          },
                          "defaultReference": {
                            "type": "string",
                            "description": "Default reference used for payments to the Beneficiary."
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Beneficiary. Can be:"
                          },
                          "created": {
                            "type": "string",
                            "description": "Datetime the Beneficiary was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Id of the account if this beneficiary is a Modulr account, null otherwise"
                          },
                          "externalReference": {
                            "type": "string",
                            "description": "External system reference for the Beneficiary"
                          },
                          "approvalRequired": {
                            "type": "boolean",
                            "description": "Indicates if the beneficiary creation is pending approval"
                          },
                          "customerId": {
                            "type": "string",
                            "description": "Id of the customer than owns this beneficiary",
                            "example": "C0000001"
                          },
                          "updated": {
                            "type": "string",
                            "description": "Datetime the Beneficiary was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "address": {
                            "required": [
                              "addressLine1",
                              "country",
                              "postCode",
                              "postTown"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "type": "string"
                              },
                              "addressLine2": {
                                "type": "string"
                              },
                              "postTown": {
                                "type": "string"
                              },
                              "postCode": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "countrySubDivision": {
                                "type": "string"
                              }
                            },
                            "description": "Address"
                          },
                          "qualifier": {
                            "type": "string",
                            "description": "Qualifier for this beneficiary"
                          },
                          "approvalRequestId": {
                            "type": "string",
                            "description": "Approval request ID for pending records."
                          },
                          "approvalStatus": {
                            "type": "string",
                            "description": "Approval status of item.",
                            "enum": [
                              "NOTNEEDED",
                              "PENDING",
                              "APPROVED",
                              "REJECTED",
                              "DELETED"
                            ]
                          },
                          "accessGroups": {
                            "uniqueItems": true,
                            "type": "array",
                            "description": "Access groups associated with beneficiary.",
                            "items": {
                              "type": "string",
                              "description": "Access groups associated with beneficiary."
                            }
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "System or person who created the beneficiary"
                          }
                        },
                        "description": "Beneficiary"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/beneficiaries/{beneficiaryId}/locks": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Retrieve locked beneficiary entities",
        "description": "Fetch references of the entities (payment, rule) that have caused the beneficiary to be locked",
        "operationId": "getLocks",
        "parameters": [
          {
            "name": "beneficiaryId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "string",
              "description": "Page to fetch (0 indexed)"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of Page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "string",
              "description": "Size of Page to fetch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "ownerId",
                          "ownerType"
                        ],
                        "type": "object",
                        "properties": {
                          "ownerId": {
                            "type": "string",
                            "description": "Reference for the entity owning the lock.",
                            "example": "R00000001A"
                          },
                          "ownerType": {
                            "type": "string",
                            "description": "Entity type owning the lock.",
                            "enum": [
                              "RULE",
                              "PAYMENT"
                            ]
                          }
                        },
                        "description": "BeneficiaryLock"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get accounts using filter",
        "description": "Gives the ability to find accounts and get their details using filters",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "ID of the account(s) to fetch"
              }
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "ID or name of the account to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "ID or name of the account to search for"
            }
          },
          {
            "name": "identifierType",
            "in": "query",
            "description": "Accounts that contain this identifier type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Accounts that contain this identifier type",
              "example": "SCAN"
            },
            "example": "SCAN"
          },
          {
            "name": "name.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "name.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalReference.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "externalReference.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountNumber.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "accountNumber.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iban.type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "WORD_MATCH",
                "WORD_MATCH_ALPHANUMERIC",
                "PREFIX",
                "SUFFIX",
                "CONTAINS",
                "EXACT"
              ]
            }
          },
          {
            "name": "iban.value",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Account statuses",
                "default": "ACTIVE",
                "enum": [
                  "ACTIVE",
                  "BLOCKED",
                  "CLOSED",
                  "CLIENT_BLOCKED"
                ]
              }
            }
          },
          {
            "name": "minBalance",
            "in": "query",
            "description": "Accounts with balance equal or more than this amount",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "string",
              "description": "Accounts with balance equal or more than this amount"
            }
          },
          {
            "name": "maxBalance",
            "in": "query",
            "description": "Accounts with balance equal or less than this amount",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.01,
              "type": "string",
              "description": "Accounts with balance equal or less than this amount"
            }
          },
          {
            "name": "fromCreatedDate",
            "in": "query",
            "description": "Accounts created after and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Accounts created after and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
              "example": "2017-01-28T01:01:01+0000"
            },
            "example": "2017-01-28T01:01:01+0000"
          },
          {
            "name": "toCreatedDate",
            "in": "query",
            "description": "Accounts created before and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Accounts created before and on this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
              "example": "2017-01-28T01:01:01+0000"
            },
            "example": "2017-01-28T01:01:01+0000"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Page to fetch (0 indexed)"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of Page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "string",
              "description": "Size of Page to fetch"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(id|name|balance|externalReference|createdDate)",
              "type": "string",
              "description": "Sort by field"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sorting order",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(asc|desc)",
              "type": "string",
              "description": "Sorting order"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "The currency for getting account by currency. Expected ISO Standard currency name i.e. GBP, EUR etc",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "The currency for getting account by currency. Expected ISO Standard currency name i.e. GBP, EUR etc",
              "example": "GBP"
            },
            "example": "GBP"
          },
          {
            "name": "showAvailableBalance",
            "in": "query",
            "description": "Show available balance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Show available balance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "availableBalance",
                          "balance",
                          "createdDate",
                          "currency",
                          "customerId",
                          "id",
                          "identifiers",
                          "name",
                          "status"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the account",
                            "example": "A0000001"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name for the account"
                          },
                          "balance": {
                            "type": "string",
                            "description": "Balance of the account in format 'NN.NN'",
                            "example": "10000.0"
                          },
                          "availableBalance": {
                            "type": "string",
                            "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
                            "example": "10000.0"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Currency of the account in ISO 4217 format",
                            "example": "GBP"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
                            "example": "ACTIVE"
                          },
                          "identifiers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "accountNumber": {
                                  "type": "string",
                                  "description": "Bank account Sort Code",
                                  "example": "12345678"
                                },
                                "accountType": {
                                  "type": "string",
                                  "description": "Bank account type like PERSONAL/BUSINESS",
                                  "enum": [
                                    "PERSONAL",
                                    "BUSINESS"
                                  ]
                                },
                                "sortCode": {
                                  "type": "string",
                                  "description": "Bank account Sort Code",
                                  "example": "000000"
                                },
                                "iban": {
                                  "type": "string",
                                  "example": "GB20MODR04001401100000"
                                },
                                "bic": {
                                  "type": "string",
                                  "example": "MODRGB21"
                                },
                                "currency": {
                                  "type": "string",
                                  "example": "GBP"
                                },
                                "countrySpecificDetails": {
                                  "type": "object",
                                  "properties": {
                                    "bankName": {
                                      "type": "string",
                                      "description": "The name of the destination bank.",
                                      "example": "Apple Bank"
                                    },
                                    "bankAddress": {
                                      "type": "string",
                                      "description": "The address of the destination bank.",
                                      "example": "2100 Broadway"
                                    },
                                    "bankCity": {
                                      "type": "string",
                                      "description": "The city in which the destination bank resides.",
                                      "example": "New York City"
                                    },
                                    "bankBranchName": {
                                      "type": "string",
                                      "description": "The name of the destination bank's branch.",
                                      "example": "New York"
                                    },
                                    "bankBranchCode": {
                                      "type": "string",
                                      "description": "The code of the destination bank's branch.",
                                      "example": "44-04"
                                    },
                                    "bankCode": {
                                      "type": "string",
                                      "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                                    },
                                    "chineseId": {
                                      "type": "string",
                                      "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                      "example": "01101201901018889"
                                    },
                                    "province": {
                                      "type": "string",
                                      "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                      "example": "Zhejiang"
                                    },
                                    "business": {
                                      "type": "boolean",
                                      "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                      "example": true
                                    },
                                    "bankCodeType": {
                                      "type": "string",
                                      "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                      "example": "ABA",
                                      "enum": [
                                        "ABA",
                                        "CHIPS"
                                      ]
                                    },
                                    "bankCountry": {
                                      "type": "string",
                                      "description": "The country in which the destination bank resides.",
                                      "example": "US",
                                      "enum": [
                                        "AT",
                                        "BE",
                                        "BG",
                                        "CY",
                                        "CZ",
                                        "DK",
                                        "EE",
                                        "FI",
                                        "FR",
                                        "DE",
                                        "GR",
                                        "HR",
                                        "HU",
                                        "IS",
                                        "IE",
                                        "IT",
                                        "LV",
                                        "LI",
                                        "LT",
                                        "LU",
                                        "MT",
                                        "NL",
                                        "NO",
                                        "PL",
                                        "PT",
                                        "RO",
                                        "SK",
                                        "SI",
                                        "ES",
                                        "SE",
                                        "GB",
                                        "MQ",
                                        "YT",
                                        "GP",
                                        "GF",
                                        "RE",
                                        "MF",
                                        "GI",
                                        "GG",
                                        "IM",
                                        "JE",
                                        "MC",
                                        "CH",
                                        "AD",
                                        "SM",
                                        "VA",
                                        "AX",
                                        "PM",
                                        "BL",
                                        "AF",
                                        "AL",
                                        "DZ",
                                        "AS",
                                        "AO",
                                        "AI",
                                        "AQ",
                                        "AG",
                                        "AR",
                                        "AM",
                                        "AW",
                                        "AU",
                                        "AZ",
                                        "BS",
                                        "BH",
                                        "BD",
                                        "BB",
                                        "BY",
                                        "BZ",
                                        "BJ",
                                        "BM",
                                        "BT",
                                        "BO",
                                        "BQ",
                                        "BA",
                                        "BW",
                                        "BV",
                                        "BR",
                                        "IO",
                                        "VG",
                                        "BN",
                                        "BF",
                                        "BI",
                                        "KH",
                                        "CM",
                                        "CA",
                                        "CV",
                                        "KY",
                                        "CF",
                                        "TD",
                                        "CL",
                                        "CN",
                                        "CX",
                                        "CC",
                                        "CO",
                                        "KM",
                                        "CK",
                                        "CR",
                                        "CU",
                                        "CW",
                                        "CD",
                                        "DJ",
                                        "DM",
                                        "DO",
                                        "TL",
                                        "EC",
                                        "EG",
                                        "SV",
                                        "GQ",
                                        "ER",
                                        "SZ",
                                        "ET",
                                        "FK",
                                        "FO",
                                        "FJ",
                                        "PF",
                                        "TF",
                                        "GA",
                                        "GM",
                                        "GE",
                                        "GH",
                                        "GL",
                                        "GD",
                                        "GU",
                                        "GT",
                                        "GN",
                                        "GW",
                                        "GY",
                                        "HT",
                                        "HM",
                                        "HN",
                                        "HK",
                                        "IN",
                                        "ID",
                                        "IR",
                                        "IQ",
                                        "IL",
                                        "CI",
                                        "JM",
                                        "JP",
                                        "JO",
                                        "KZ",
                                        "KE",
                                        "KI",
                                        "XK",
                                        "KW",
                                        "KG",
                                        "LA",
                                        "LB",
                                        "LS",
                                        "LR",
                                        "LY",
                                        "MO",
                                        "MG",
                                        "MW",
                                        "MY",
                                        "MV",
                                        "ML",
                                        "MH",
                                        "MR",
                                        "MU",
                                        "MX",
                                        "FM",
                                        "MD",
                                        "MN",
                                        "ME",
                                        "MS",
                                        "MA",
                                        "MZ",
                                        "MM",
                                        "NA",
                                        "NR",
                                        "NP",
                                        "AN",
                                        "NC",
                                        "NZ",
                                        "NI",
                                        "NE",
                                        "NG",
                                        "NU",
                                        "NF",
                                        "KP",
                                        "MK",
                                        "MP",
                                        "OM",
                                        "PK",
                                        "PW",
                                        "PS",
                                        "PA",
                                        "PG",
                                        "PY",
                                        "PE",
                                        "PH",
                                        "PN",
                                        "PR",
                                        "QA",
                                        "CG",
                                        "RU",
                                        "RW",
                                        "SH",
                                        "KN",
                                        "LC",
                                        "VC",
                                        "WS",
                                        "ST",
                                        "SA",
                                        "SN",
                                        "RS",
                                        "SC",
                                        "SL",
                                        "SG",
                                        "SX",
                                        "SB",
                                        "SO",
                                        "ZA",
                                        "KR",
                                        "GS",
                                        "SS",
                                        "LK",
                                        "SD",
                                        "SR",
                                        "SY",
                                        "SJ",
                                        "TW",
                                        "TJ",
                                        "TZ",
                                        "TH",
                                        "TG",
                                        "TK",
                                        "TO",
                                        "TT",
                                        "TN",
                                        "TR",
                                        "TM",
                                        "TC",
                                        "TV",
                                        "UG",
                                        "UA",
                                        "AE",
                                        "UM",
                                        "US",
                                        "UY",
                                        "UZ",
                                        "VU",
                                        "VE",
                                        "VN",
                                        "VI",
                                        "WF",
                                        "EH",
                                        "YE",
                                        "ZM",
                                        "ZW"
                                      ]
                                    },
                                    "abaRoutingNumber": {
                                      "type": "string",
                                      "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                      "example": "123456789"
                                    }
                                  },
                                  "example": {
                                    "branchCode": "123456789"
                                  }
                                }
                              },
                              "description": "Account Identifier"
                            }
                          },
                          "customerId": {
                            "type": "string",
                            "description": "Unique id of the Customer",
                            "example": "C0000001"
                          },
                          "customerName": {
                            "type": "string",
                            "description": "Customer Name"
                          },
                          "externalReference": {
                            "type": "string",
                            "description": "Your reference for an account",
                            "example": "aReference_00001"
                          },
                          "accessGroups": {
                            "type": "array",
                            "description": "Ids of Access Groups this account belongs to",
                            "items": {
                              "type": "string",
                              "description": "Ids of Access Groups this account belongs to"
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "directDebit": {
                            "type": "boolean",
                            "description": "Direct Debit Enabled"
                          },
                          "securedFundingLimit": {
                            "type": "string",
                            "description": "Limit of funds available below a balance of zero"
                          }
                        },
                        "description": "Account"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{id}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transactions for a specific Account",
        "description": "Retrieves the last 6 months of transactions (successful payments in & out) of an account, specified by a unique account reference.",
        "operationId": "getTransactionsByAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to fetch transactions for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Partial description text to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Partial description text to search for"
            }
          },
          {
            "name": "minAmount",
            "in": "query",
            "description": "Transactions with amount equal or more than this amount",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "string",
              "description": "Transactions with amount equal or more than this amount"
            }
          },
          {
            "name": "maxAmount",
            "in": "query",
            "description": "Transactions with amount equal or less than this amount",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.01,
              "type": "string",
              "description": "Transactions with amount equal or less than this amount"
            }
          },
          {
            "name": "fromPostedDate",
            "in": "query",
            "description": "Transactions with posted date equal or after to this date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Transactions with posted date equal or after to this date"
            }
          },
          {
            "name": "toPostedDate",
            "in": "query",
            "description": "Transactions with posted date equal or before to this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Transactions with posted date equal or before to this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "description": "Transaction types",
              "items": {
                "type": "string",
                "description": "Transaction type",
                "enum": [
                  "PI_BACS",
                  "PI_BACS_CONTRA",
                  "PI_FAST",
                  "PI_CHAPS",
                  "PI_DD",
                  "PI_SECT",
                  "PI_SEPA_INST",
                  "PI_REV",
                  "PI_FAST_REV",
                  "PO_FAST",
                  "PO_CHAPS",
                  "PO_DD",
                  "PO_SECT",
                  "PO_SEPA_INST",
                  "PO_REV",
                  "INT_INTERC",
                  "INT_INTRAC",
                  "ADHOC",
                  "FE_TXN",
                  "FE_ACMNT",
                  "FE_ACOPN",
                  "FE_REV",
                  "PO_MASTER",
                  "PI_MASTER",
                  "PO_REV_MASTER",
                  "PO_VISA",
                  "PI_VISA",
                  "PI_SWIFT",
                  "PO_SWIFT"
                ]
              }
            }
          },
          {
            "name": "credit",
            "in": "query",
            "description": "If true only credit transactions will be returned, if false, only debit transactions will be returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "description": "If true only credit transactions will be returned, if false, only debit transactions will be returned"
            }
          },
          {
            "name": "sourceId",
            "in": "query",
            "description": "Transactions with this sourceId",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Transactions with this sourceId"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of Page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "string",
              "description": "Size of Page to fetch"
            }
          },
          {
            "name": "showAvailableBalance",
            "in": "query",
            "description": "Show available balance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Show available balance"
            }
          },
          {
            "name": "fromTransactionDate",
            "in": "query",
            "description": "Transactions with transaction date equal or after to this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Transactions with transaction date equal or after to this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000"
            }
          },
          {
            "name": "toTransactionDate",
            "in": "query",
            "description": "Transactions with transaction date equal or before to this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Transactions with transaction date equal or before to this date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Page to fetch (0 indexed)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "amount",
                          "credit",
                          "currency",
                          "id",
                          "postedDate",
                          "sourceId",
                          "transactionDate",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the Transaction",
                            "example": "T0000001"
                          },
                          "amount": {
                            "type": "number",
                            "description": "Amount of the transaction in Major Currency Units"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Currency of the account in ISO 4217 format",
                            "example": "GBP"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the transaction. Contains Payer/ Payee details and reference"
                          },
                          "transactionDate": {
                            "type": "string",
                            "description": "Datetime when the transaction took place. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "postedDate": {
                            "type": "string",
                            "description": "Datetime when the transaction was posted to the Modulr system. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "credit": {
                            "type": "boolean",
                            "description": "Indicates if the transaction was a Credit or a Debit"
                          },
                          "type": {
                            "type": "string",
                            "description": "Enumerated type indicating the type of the transaction"
                          },
                          "sourceId": {
                            "type": "string"
                          },
                          "sourceExternalReference": {
                            "type": "string"
                          },
                          "additionalInfo": {
                            "type": "object",
                            "description": "any extra information available on transaction."
                          },
                          "account": {
                            "required": [
                              "availableBalance",
                              "balance",
                              "createdDate",
                              "currency",
                              "customerId",
                              "id",
                              "identifiers",
                              "name",
                              "status"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique id for the account",
                                "example": "A0000001"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name for the account"
                              },
                              "balance": {
                                "type": "string",
                                "description": "Balance of the account in format 'NN.NN'",
                                "example": "10000.0"
                              },
                              "availableBalance": {
                                "type": "string",
                                "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
                                "example": "10000.0"
                              },
                              "currency": {
                                "type": "string",
                                "description": "Currency of the account in ISO 4217 format",
                                "example": "GBP"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
                                "example": "ACTIVE"
                              },
                              "identifiers": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "accountNumber": {
                                      "type": "string",
                                      "description": "Bank account Sort Code",
                                      "example": "12345678"
                                    },
                                    "accountType": {
                                      "type": "string",
                                      "description": "Bank account type like PERSONAL/BUSINESS",
                                      "enum": [
                                        "PERSONAL",
                                        "BUSINESS"
                                      ]
                                    },
                                    "sortCode": {
                                      "type": "string",
                                      "description": "Bank account Sort Code",
                                      "example": "000000"
                                    },
                                    "iban": {
                                      "type": "string",
                                      "example": "GB20MODR04001401100000"
                                    },
                                    "bic": {
                                      "type": "string",
                                      "example": "MODRGB21"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "example": "GBP"
                                    },
                                    "countrySpecificDetails": {
                                      "type": "object",
                                      "properties": {
                                        "bankName": {
                                          "type": "string",
                                          "description": "The name of the destination bank.",
                                          "example": "Apple Bank"
                                        },
                                        "bankAddress": {
                                          "type": "string",
                                          "description": "The address of the destination bank.",
                                          "example": "2100 Broadway"
                                        },
                                        "bankCity": {
                                          "type": "string",
                                          "description": "The city in which the destination bank resides.",
                                          "example": "New York City"
                                        },
                                        "bankBranchName": {
                                          "type": "string",
                                          "description": "The name of the destination bank's branch.",
                                          "example": "New York"
                                        },
                                        "bankBranchCode": {
                                          "type": "string",
                                          "description": "The code of the destination bank's branch.",
                                          "example": "44-04"
                                        },
                                        "bankCode": {
                                          "type": "string",
                                          "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                                        },
                                        "chineseId": {
                                          "type": "string",
                                          "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                          "example": "01101201901018889"
                                        },
                                        "province": {
                                          "type": "string",
                                          "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                          "example": "Zhejiang"
                                        },
                                        "business": {
                                          "type": "boolean",
                                          "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                          "example": true
                                        },
                                        "bankCodeType": {
                                          "type": "string",
                                          "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                          "example": "ABA",
                                          "enum": [
                                            "ABA",
                                            "CHIPS"
                                          ]
                                        },
                                        "bankCountry": {
                                          "type": "string",
                                          "description": "The country in which the destination bank resides.",
                                          "example": "US",
                                          "enum": [
                                            "AT",
                                            "BE",
                                            "BG",
                                            "CY",
                                            "CZ",
                                            "DK",
                                            "EE",
                                            "FI",
                                            "FR",
                                            "DE",
                                            "GR",
                                            "HR",
                                            "HU",
                                            "IS",
                                            "IE",
                                            "IT",
                                            "LV",
                                            "LI",
                                            "LT",
                                            "LU",
                                            "MT",
                                            "NL",
                                            "NO",
                                            "PL",
                                            "PT",
                                            "RO",
                                            "SK",
                                            "SI",
                                            "ES",
                                            "SE",
                                            "GB",
                                            "MQ",
                                            "YT",
                                            "GP",
                                            "GF",
                                            "RE",
                                            "MF",
                                            "GI",
                                            "GG",
                                            "IM",
                                            "JE",
                                            "MC",
                                            "CH",
                                            "AD",
                                            "SM",
                                            "VA",
                                            "AX",
                                            "PM",
                                            "BL",
                                            "AF",
                                            "AL",
                                            "DZ",
                                            "AS",
                                            "AO",
                                            "AI",
                                            "AQ",
                                            "AG",
                                            "AR",
                                            "AM",
                                            "AW",
                                            "AU",
                                            "AZ",
                                            "BS",
                                            "BH",
                                            "BD",
                                            "BB",
                                            "BY",
                                            "BZ",
                                            "BJ",
                                            "BM",
                                            "BT",
                                            "BO",
                                            "BQ",
                                            "BA",
                                            "BW",
                                            "BV",
                                            "BR",
                                            "IO",
                                            "VG",
                                            "BN",
                                            "BF",
                                            "BI",
                                            "KH",
                                            "CM",
                                            "CA",
                                            "CV",
                                            "KY",
                                            "CF",
                                            "TD",
                                            "CL",
                                            "CN",
                                            "CX",
                                            "CC",
                                            "CO",
                                            "KM",
                                            "CK",
                                            "CR",
                                            "CU",
                                            "CW",
                                            "CD",
                                            "DJ",
                                            "DM",
                                            "DO",
                                            "TL",
                                            "EC",
                                            "EG",
                                            "SV",
                                            "GQ",
                                            "ER",
                                            "SZ",
                                            "ET",
                                            "FK",
                                            "FO",
                                            "FJ",
                                            "PF",
                                            "TF",
                                            "GA",
                                            "GM",
                                            "GE",
                                            "GH",
                                            "GL",
                                            "GD",
                                            "GU",
                                            "GT",
                                            "GN",
                                            "GW",
                                            "GY",
                                            "HT",
                                            "HM",
                                            "HN",
                                            "HK",
                                            "IN",
                                            "ID",
                                            "IR",
                                            "IQ",
                                            "IL",
                                            "CI",
                                            "JM",
                                            "JP",
                                            "JO",
                                            "KZ",
                                            "KE",
                                            "KI",
                                            "XK",
                                            "KW",
                                            "KG",
                                            "LA",
                                            "LB",
                                            "LS",
                                            "LR",
                                            "LY",
                                            "MO",
                                            "MG",
                                            "MW",
                                            "MY",
                                            "MV",
                                            "ML",
                                            "MH",
                                            "MR",
                                            "MU",
                                            "MX",
                                            "FM",
                                            "MD",
                                            "MN",
                                            "ME",
                                            "MS",
                                            "MA",
                                            "MZ",
                                            "MM",
                                            "NA",
                                            "NR",
                                            "NP",
                                            "AN",
                                            "NC",
                                            "NZ",
                                            "NI",
                                            "NE",
                                            "NG",
                                            "NU",
                                            "NF",
                                            "KP",
                                            "MK",
                                            "MP",
                                            "OM",
                                            "PK",
                                            "PW",
                                            "PS",
                                            "PA",
                                            "PG",
                                            "PY",
                                            "PE",
                                            "PH",
                                            "PN",
                                            "PR",
                                            "QA",
                                            "CG",
                                            "RU",
                                            "RW",
                                            "SH",
                                            "KN",
                                            "LC",
                                            "VC",
                                            "WS",
                                            "ST",
                                            "SA",
                                            "SN",
                                            "RS",
                                            "SC",
                                            "SL",
                                            "SG",
                                            "SX",
                                            "SB",
                                            "SO",
                                            "ZA",
                                            "KR",
                                            "GS",
                                            "SS",
                                            "LK",
                                            "SD",
                                            "SR",
                                            "SY",
                                            "SJ",
                                            "TW",
                                            "TJ",
                                            "TZ",
                                            "TH",
                                            "TG",
                                            "TK",
                                            "TO",
                                            "TT",
                                            "TN",
                                            "TR",
                                            "TM",
                                            "TC",
                                            "TV",
                                            "UG",
                                            "UA",
                                            "AE",
                                            "UM",
                                            "US",
                                            "UY",
                                            "UZ",
                                            "VU",
                                            "VE",
                                            "VN",
                                            "VI",
                                            "WF",
                                            "EH",
                                            "YE",
                                            "ZM",
                                            "ZW"
                                          ]
                                        },
                                        "abaRoutingNumber": {
                                          "type": "string",
                                          "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                          "example": "123456789"
                                        }
                                      },
                                      "example": {
                                        "branchCode": "123456789"
                                      }
                                    }
                                  },
                                  "description": "Account Identifier"
                                }
                              },
                              "customerId": {
                                "type": "string",
                                "description": "Unique id of the Customer",
                                "example": "C0000001"
                              },
                              "customerName": {
                                "type": "string",
                                "description": "Customer Name"
                              },
                              "externalReference": {
                                "type": "string",
                                "description": "Your reference for an account",
                                "example": "aReference_00001"
                              },
                              "accessGroups": {
                                "type": "array",
                                "description": "Ids of Access Groups this account belongs to",
                                "items": {
                                  "type": "string",
                                  "description": "Ids of Access Groups this account belongs to"
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                                "format": "date-time"
                              },
                              "directDebit": {
                                "type": "boolean",
                                "description": "Direct Debit Enabled"
                              },
                              "securedFundingLimit": {
                                "type": "string",
                                "description": "Limit of funds available below a balance of zero"
                              }
                            },
                            "description": "Account"
                          }
                        },
                        "description": "Transaction"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    },
                    "pageStartBalance": {
                      "type": "number",
                      "description": "The sum of the transactions up to this page.\nThis is only present if there are no filters other than page and size defined",
                      "example": 250.3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/access-groups/{id}": {
      "get": {
        "tags": [
          "Access Group"
        ],
        "summary": "Get access group",
        "description": "The ability to retrieve an access group by ID",
        "operationId": "getAccessGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Access group ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "accountIds",
                    "beneficiaryIds",
                    "countOfAccounts",
                    "id",
                    "name",
                    "status",
                    "type",
                    "typeId"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique ID for the access group",
                      "example": "G0000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Access group name"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of access group",
                      "enum": [
                        "SERVICE_PARTNER",
                        "SERVICE_CUSTOMER",
                        "DELEGATE",
                        "USER_DEFINED"
                      ]
                    },
                    "typeId": {
                      "type": "string",
                      "description": "The identifier of the linked entity implied by the type, e.g. the partner ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the access group",
                      "enum": [
                        "ACTIVE",
                        "DELETED"
                      ]
                    },
                    "countOfAccounts": {
                      "type": "integer",
                      "description": "The number of accounts in this group",
                      "format": "int64",
                      "deprecated": true
                    },
                    "accountIds": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "BIDs of Accounts in the group",
                      "items": {
                        "type": "string",
                        "description": "BIDs of Accounts in the group"
                      }
                    },
                    "beneficiaryIds": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "BIDs of Beneficiaries in the group",
                      "items": {
                        "type": "string",
                        "description": "BIDs of Beneficiaries in the group"
                      }
                    }
                  },
                  "description": "AccessGroupWithDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Retrieve payments",
        "description": "The ability to get the details of payments using various pieces of information, e.g. using Account ID, retrieve all payments in that account. Can get details of one particular payment based on the unique payment reference number.",
        "operationId": "getPayments",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Payment ID. If specified then all other parameters are ignored",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Payment ID. If specified then all other parameters are ignored"
            }
          },
          {
            "name": "fromCreatedDate",
            "in": "query",
            "description": "Payments created date equal or after to this date. Mandatory Parameter(except when 'id' or 'modifiedSince' parameter is used)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Payments created date equal or after to this date. Mandatory Parameter(except when 'id' or 'modifiedSince' parameter is used)",
              "example": "2016-01-01T01:01:01+0000"
            },
            "example": "2016-01-01T01:01:01+0000"
          },
          {
            "name": "toCreatedDate",
            "in": "query",
            "description": "Payments created date equal or before to this date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Payments created date equal or before to this date"
            }
          },
          {
            "name": "modifiedSince",
            "in": "query",
            "description": "Payments modified date equal or before to this date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Payments modified date equal or before to this date"
            }
          },
          {
            "name": "sourceAccountId",
            "in": "query",
            "description": "The source account ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "The source account ID"
            }
          },
          {
            "name": "hasExternalReference",
            "in": "query",
            "description": "True if the API should return all items that have externalReference. False the API should return all items that don't have externalReference",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "description": "True if the API should return all items that have externalReference. False the API should return all items that don't have externalReference"
            }
          },
          {
            "name": "externalReference",
            "in": "query",
            "description": "External reference can only have alphanumeric characters plus underscore, hyphen and space",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "[\\w-\\s]*",
              "type": "string",
              "description": "External reference can only have alphanumeric characters plus underscore, hyphen and space"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Payment status, multiple statuses can be specified by repeating the parameter",
                "enum": [
                  "SUBMITTED",
                  "SCREENING_REQ",
                  "VALIDATED",
                  "PENDING_FOR_DATE",
                  "PENDING_FOR_FUNDS",
                  "EXT_PROC",
                  "PROCESSED",
                  "RECONCILED",
                  "ER_INVALID",
                  "ER_EXTCONN",
                  "ER_EXTSYS",
                  "ER_EXPIRED",
                  "ER_GENERAL",
                  "ER_BATCH",
                  "EXT_SENT",
                  "UNALLOCATED",
                  "HELD",
                  "RETURNED",
                  "CANCELLED",
                  "REPROCESSING",
                  "VOID",
                  "CLEARING"
                ]
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The payment type to search for.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "The payment type to search for.",
              "default": "PAYOUT"
            }
          },
          {
            "name": "excludeBatchPayments",
            "in": "query",
            "description": "Exclude payments which are part of a batch with submission type BATCH",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "description": "Exclude payments which are part of a batch with submission type BATCH",
              "default": false
            }
          },
          {
            "name": "batchPaymentId",
            "in": "query",
            "description": "Filter on batch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Filter on batch"
            }
          },
          {
            "name": "reversals",
            "in": "query",
            "description": "Filter on reversals",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Filter on reversals"
            }
          },
          {
            "name": "schemeId",
            "in": "query",
            "description": "Filter on scheme ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Filter on scheme ID"
            }
          },
          {
            "name": "approvalStatus",
            "in": "query",
            "description": "Payment approval status, multiple statuses can be specified by repeating the parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Payment approval status, multiple statuses can be specified by repeating the parameter"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Currency of the payment in ISO 4217 format, multiple currencies can be specified by repeating the parameter.",
                "enum": [
                  "GBP",
                  "EUR",
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BOV",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHE",
                  "CHF",
                  "CHW",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "COU",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "FJD",
                  "FKP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "SSP",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "SHP",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "USN",
                  "UYI",
                  "UYU",
                  "UYW",
                  "UZS",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XAG",
                  "XAU",
                  "XBA",
                  "XBB",
                  "XBC",
                  "XBD",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPD",
                  "XPF",
                  "XPT",
                  "XSU",
                  "XTS",
                  "XUA",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWL"
                ]
              }
            }
          },
          {
            "name": "minAmount",
            "in": "query",
            "description": "Payments amount equal or greater than this amount",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Payments amount equal or greater than this amount",
              "example": "5.5"
            },
            "example": 5.5
          },
          {
            "name": "maxAmount",
            "in": "query",
            "description": "Payments amount equal or less than this amount",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Payments amount equal or less than this amount",
              "example": "50.5"
            },
            "example": 50.5
          },
          {
            "name": "fromPaymentScheduledDate",
            "in": "query",
            "description": "Payments scheduled date equal or after to this date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Payments scheduled date equal or after to this date",
              "example": "2022-01-01T01:01:01+0000"
            },
            "example": "2022-01-01T01:01:01+0000"
          },
          {
            "name": "toPaymentScheduledDate",
            "in": "query",
            "description": "Payments scheduled date equal or before to this date and in absence of fromPaymentDate, payments executed prior to 180 days from this date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Payments scheduled date equal or before to this date and in absence of fromPaymentDate, payments executed prior to 180 days from this date",
              "example": "2023-01-01T01:01:01+0000"
            },
            "example": "2023-01-01T01:01:01+0000"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter on customer ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string",
              "description": "Filter on customer ID",
              "example": "C1234567"
            },
            "example": "C1234567"
          },
          {
            "name": "currentUserCanApprove",
            "in": "query",
            "description": "Only return payments the current user can approve.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Only return payments the current user can approve.",
              "example": "true"
            },
            "example": true
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by field. Sorted by createdDate if not present",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(amount|createdDate|paymentScheduledDate)",
              "type": "string",
              "description": "Sort by field. Sorted by createdDate if not present"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sorting order:\n1. asc -> ascending\n2. desc -> descending",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(asc|desc)",
              "type": "string",
              "description": "Sorting order:\n1. asc -> ascending\n2. desc -> descending"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to fetch. 0 indexed",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "string",
              "description": "The page to fetch. 0 indexed",
              "default": "0"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page(s)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 1,
              "type": "string",
              "description": "The size of the page(s)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "details",
                          "externalReference",
                          "id",
                          "status"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the Payment request. 10 characters long",
                            "example": "P000001ABC"
                          },
                          "status": {
                            "type": "string",
                            "description": "Current status of payment.",
                            "enum": [
                              "SUBMITTED",
                              "SCREENING_REQ",
                              "VALIDATED",
                              "PENDING_FOR_DATE",
                              "PENDING_FOR_FUNDS",
                              "EXT_PROC",
                              "PROCESSED",
                              "RECONCILED",
                              "ER_INVALID",
                              "ER_EXTCONN",
                              "ER_EXTSYS",
                              "ER_EXPIRED",
                              "ER_GENERAL",
                              "ER_BATCH",
                              "EXT_SENT",
                              "UNALLOCATED",
                              "HELD",
                              "RETURNED",
                              "CANCELLED",
                              "REPROCESSING",
                              "VOID",
                              "CLEARING"
                            ]
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "Datetime the request was created. Format is 'yyyy-MM-dd'T'HH:mm:ss.sssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01.010+0000'",
                            "format": "date-time"
                          },
                          "externalReference": {
                            "type": "string",
                            "description": "external reference if provided",
                            "example": "aReference_00001"
                          },
                          "details": {
                            "type": "object",
                            "description": "All the details of the payment from the original request"
                          },
                          "approvalStatus": {
                            "type": "string",
                            "description": "Current approval status of payment",
                            "enum": [
                              "NOTNEEDED",
                              "PENDING",
                              "APPROVED",
                              "REJECTED",
                              "DELETED"
                            ]
                          },
                          "message": {
                            "type": "string",
                            "description": "Information about payment (if available)"
                          },
                          "schemeInfo": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "responseCode": {
                                "type": "string"
                              }
                            },
                            "description": "Information with regards to the payment scheme"
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "ID of the user that created the payment"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "PAYIN",
                              "PAYOUT",
                              "RETURN"
                            ]
                          },
                          "paymentScheduledDate": {
                            "type": "string",
                            "description": "Datetime of the payment scheduled at. Format is 'yyyy-MM-dd'T'HH:mm:ss.sssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01.010+0000'",
                            "format": "date-time"
                          },
                          "currentUserCanApprove": {
                            "type": "boolean",
                            "description": "Indicates if current user can approve the payment"
                          },
                          "approvals": {
                            "type": "array",
                            "description": "List of approvals performed on the payment",
                            "items": {
                              "type": "object",
                              "properties": {
                                "approvedBy": {
                                  "type": "string",
                                  "description": "ID of user who approved this batch payment request",
                                  "example": "U2100021"
                                },
                                "approvedOn": {
                                  "type": "string",
                                  "description": "Date this approval was applied",
                                  "format": "date",
                                  "example": "2022-06-25"
                                }
                              },
                              "description": "A single approval against a batch payment request"
                            }
                          }
                        }
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create a payment",
        "description": "Supports both Payments to external bank accounts via Faster Payments and transfers to other Modulr accounts. Requests to Payments are asynchronous.",
        "operationId": "sendPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "sourceAccountId"
                ],
                "type": "object",
                "properties": {
                  "sourceAccountId": {
                    "type": "string",
                    "description": "Identifier for the sending Account."
                  },
                  "destination": {
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Indicates the type of destination. IBAN type is required for international payments.",
                        "example": "SCAN",
                        "enum": [
                          "BENEFICIARY",
                          "ACCOUNT",
                          "IBAN",
                          "SCAN",
                          "INTL",
                          "ANBRN",
                          "AN"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "description": "Identifier for the Payment destination if using ACCOUNT or BENEFICIARY type. Can be either: a) Beneficiary id for an external Payment, b) Account id for a transfer to another Account"
                      },
                      "iban": {
                        "pattern": "^[a-zA-Z]{2}[0-9]{2}([a-zA-Z0-9]){11,30}$",
                        "type": "string",
                        "description": "International Bank Account Number (IBAN). To be used as the destination identifier when sending âIBANâ type payments",
                        "example": "GB20MODR00000000000001"
                      },
                      "accountNumber": {
                        "type": "string",
                        "description": "Account Number of destination account if using SCAN type.",
                        "example": "12345678"
                      },
                      "sortCode": {
                        "pattern": "^[0-9]{6}$",
                        "type": "string",
                        "description": "Sort Code of destination account if using SCAN type.",
                        "example": "000000"
                      },
                      "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "Name to use if a new beneficiary is created, and for using as the payee name if SCAN or IBAN types are specified for the destination",
                        "example": "Test"
                      },
                      "address": {
                        "required": [
                          "addressLine1",
                          "postTown"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                          },
                          "addressLine2": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                          },
                          "postTown": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                          },
                          "postCode": {
                            "maxLength": 10,
                            "type": "string"
                          },
                          "country": {
                            "type": "string",
                            "description": "Mandatory for international payments."
                          },
                          "countrySubDivision": {
                            "maxLength": 35,
                            "minLength": 0,
                            "type": "string"
                          }
                        },
                        "description": "Optional address. Mandatory for international payments."
                      },
                      "birthdate": {
                        "type": "string",
                        "description": "The destination beneficiary's date of birth. Format: yyyy-MM-dd",
                        "format": "date",
                        "example": "2000-01-01"
                      },
                      "emailAddress": {
                        "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
                        "type": "string",
                        "description": "The destination beneficiary's email address"
                      },
                      "phoneNumber": {
                        "type": "string",
                        "description": "The destination beneficiary's phone number"
                      },
                      "bic": {
                        "type": "string",
                        "description": "The destination beneficiary's SWIFT BIC (Bank Identifier Code). Only to be used for international payments."
                      },
                      "countrySpecificDetails": {
                        "type": "object",
                        "properties": {
                          "bankName": {
                            "type": "string",
                            "description": "The name of the destination bank.",
                            "example": "Apple Bank"
                          },
                          "bankAddress": {
                            "type": "string",
                            "description": "The address of the destination bank.",
                            "example": "2100 Broadway"
                          },
                          "bankCity": {
                            "type": "string",
                            "description": "The city in which the destination bank resides.",
                            "example": "New York City"
                          },
                          "bankBranchName": {
                            "type": "string",
                            "description": "The name of the destination bank's branch.",
                            "example": "New York"
                          },
                          "bankBranchCode": {
                            "type": "string",
                            "description": "The code of the destination bank's branch.",
                            "example": "44-04"
                          },
                          "bankCode": {
                            "type": "string",
                            "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                          },
                          "chineseId": {
                            "type": "string",
                            "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                            "example": "01101201901018889"
                          },
                          "province": {
                            "type": "string",
                            "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                            "example": "Zhejiang"
                          },
                          "abaRoutingNumber": {
                            "pattern": "^\\d{9}$",
                            "type": "string",
                            "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                            "example": "123456789"
                          },
                          "business": {
                            "type": "boolean",
                            "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                            "example": true
                          },
                          "bankCodeType": {
                            "type": "string",
                            "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                            "example": "ABA",
                            "enum": [
                              "ABA",
                              "CHIPS"
                            ]
                          },
                          "bankCountry": {
                            "type": "string",
                            "description": "The country in which the destination bank resides. Mandatory for international payments.",
                            "example": "US",
                            "enum": [
                              "AT",
                              "BE",
                              "BG",
                              "CY",
                              "CZ",
                              "DK",
                              "EE",
                              "FI",
                              "FR",
                              "DE",
                              "GR",
                              "HR",
                              "HU",
                              "IS",
                              "IE",
                              "IT",
                              "LV",
                              "LI",
                              "LT",
                              "LU",
                              "MT",
                              "NL",
                              "NO",
                              "PL",
                              "PT",
                              "RO",
                              "SK",
                              "SI",
                              "ES",
                              "SE",
                              "GB",
                              "MQ",
                              "YT",
                              "GP",
                              "GF",
                              "RE",
                              "MF",
                              "GI",
                              "GG",
                              "IM",
                              "JE",
                              "MC",
                              "CH",
                              "AD",
                              "SM",
                              "VA",
                              "AX",
                              "PM",
                              "BL",
                              "AF",
                              "AL",
                              "DZ",
                              "AS",
                              "AO",
                              "AI",
                              "AQ",
                              "AG",
                              "AR",
                              "AM",
                              "AW",
                              "AU",
                              "AZ",
                              "BS",
                              "BH",
                              "BD",
                              "BB",
                              "BY",
                              "BZ",
                              "BJ",
                              "BM",
                              "BT",
                              "BO",
                              "BQ",
                              "BA",
                              "BW",
                              "BV",
                              "BR",
                              "IO",
                              "VG",
                              "BN",
                              "BF",
                              "BI",
                              "KH",
                              "CM",
                              "CA",
                              "CV",
                              "KY",
                              "CF",
                              "TD",
                              "CL",
                              "CN",
                              "CX",
                              "CC",
                              "CO",
                              "KM",
                              "CK",
                              "CR",
                              "CU",
                              "CW",
                              "CD",
                              "DJ",
                              "DM",
                              "DO",
                              "TL",
                              "EC",
                              "EG",
                              "SV",
                              "GQ",
                              "ER",
                              "SZ",
                              "ET",
                              "FK",
                              "FO",
                              "FJ",
                              "PF",
                              "TF",
                              "GA",
                              "GM",
                              "GE",
                              "GH",
                              "GL",
                              "GD",
                              "GU",
                              "GT",
                              "GN",
                              "GW",
                              "GY",
                              "HT",
                              "HM",
                              "HN",
                              "HK",
                              "IN",
                              "ID",
                              "IR",
                              "IQ",
                              "IL",
                              "CI",
                              "JM",
                              "JP",
                              "JO",
                              "KZ",
                              "KE",
                              "KI",
                              "XK",
                              "KW",
                              "KG",
                              "LA",
                              "LB",
                              "LS",
                              "LR",
                              "LY",
                              "MO",
                              "MG",
                              "MW",
                              "MY",
                              "MV",
                              "ML",
                              "MH",
                              "MR",
                              "MU",
                              "MX",
                              "FM",
                              "MD",
                              "MN",
                              "ME",
                              "MS",
                              "MA",
                              "MZ",
                              "MM",
                              "NA",
                              "NR",
                              "NP",
                              "AN",
                              "NC",
                              "NZ",
                              "NI",
                              "NE",
                              "NG",
                              "NU",
                              "NF",
                              "KP",
                              "MK",
                              "MP",
                              "OM",
                              "PK",
                              "PW",
                              "PS",
                              "PA",
                              "PG",
                              "PY",
                              "PE",
                              "PH",
                              "PN",
                              "PR",
                              "QA",
                              "CG",
                              "RU",
                              "RW",
                              "SH",
                              "KN",
                              "LC",
                              "VC",
                              "WS",
                              "ST",
                              "SA",
                              "SN",
                              "RS",
                              "SC",
                              "SL",
                              "SG",
                              "SX",
                              "SB",
                              "SO",
                              "ZA",
                              "KR",
                              "GS",
                              "SS",
                              "LK",
                              "SD",
                              "SR",
                              "SY",
                              "SJ",
                              "TW",
                              "TJ",
                              "TZ",
                              "TH",
                              "TG",
                              "TK",
                              "TO",
                              "TT",
                              "TN",
                              "TR",
                              "TM",
                              "TC",
                              "TV",
                              "UG",
                              "UA",
                              "AE",
                              "UM",
                              "US",
                              "UY",
                              "UZ",
                              "VU",
                              "VE",
                              "VN",
                              "VI",
                              "WF",
                              "EH",
                              "YE",
                              "ZM",
                              "ZW"
                            ]
                          }
                        },
                        "description": "Further details required, depending on the destination's country"
                      }
                    },
                    "description": "Destination of the Payment"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency of the account in ISO 4217 format. Default is GBP",
                    "enum": [
                      "GBP",
                      "EUR",
                      "AED",
                      "AFN",
                      "ALL",
                      "AMD",
                      "ANG",
                      "AOA",
                      "ARS",
                      "AUD",
                      "AWG",
                      "AZN",
                      "BAM",
                      "BBD",
                      "BDT",
                      "BGN",
                      "BHD",
                      "BIF",
                      "BMD",
                      "BND",
                      "BOB",
                      "BOV",
                      "BRL",
                      "BSD",
                      "BTN",
                      "BWP",
                      "BYN",
                      "BZD",
                      "CAD",
                      "CDF",
                      "CHE",
                      "CHF",
                      "CHW",
                      "CLF",
                      "CLP",
                      "CNY",
                      "COP",
                      "COU",
                      "CRC",
                      "CUC",
                      "CUP",
                      "CVE",
                      "CZK",
                      "DJF",
                      "DKK",
                      "DOP",
                      "DZD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "FJD",
                      "FKP",
                      "GEL",
                      "GHS",
                      "GIP",
                      "GMD",
                      "GNF",
                      "GTQ",
                      "GYD",
                      "HKD",
                      "HNL",
                      "HRK",
                      "HTG",
                      "HUF",
                      "IDR",
                      "ILS",
                      "INR",
                      "IQD",
                      "IRR",
                      "ISK",
                      "JMD",
                      "JOD",
                      "JPY",
                      "KES",
                      "KGS",
                      "KHR",
                      "KMF",
                      "KPW",
                      "KRW",
                      "KWD",
                      "KYD",
                      "KZT",
                      "LAK",
                      "LBP",
                      "LKR",
                      "LRD",
                      "LSL",
                      "LYD",
                      "MAD",
                      "MDL",
                      "MGA",
                      "MKD",
                      "MMK",
                      "MNT",
                      "MOP",
                      "MRU",
                      "MUR",
                      "MVR",
                      "MWK",
                      "MXN",
                      "MXV",
                      "MYR",
                      "MZN",
                      "NAD",
                      "NGN",
                      "NIO",
                      "NOK",
                      "NPR",
                      "NZD",
                      "OMR",
                      "PAB",
                      "PEN",
                      "PGK",
                      "PHP",
                      "PKR",
                      "PLN",
                      "PYG",
                      "QAR",
                      "RON",
                      "RSD",
                      "RUB",
                      "RWF",
                      "SAR",
                      "SBD",
                      "SCR",
                      "SDG",
                      "SEK",
                      "SGD",
                      "SLE",
                      "SLL",
                      "SOS",
                      "SRD",
                      "SSP",
                      "STN",
                      "SVC",
                      "SYP",
                      "SZL",
                      "SHP",
                      "THB",
                      "TJS",
                      "TMT",
                      "TND",
                      "TOP",
                      "TRY",
                      "TTD",
                      "TWD",
                      "TZS",
                      "UAH",
                      "UGX",
                      "USD",
                      "USN",
                      "UYI",
                      "UYU",
                      "UYW",
                      "UZS",
                      "VES",
                      "VND",
                      "VUV",
                      "WST",
                      "XAF",
                      "XAG",
                      "XAU",
                      "XBA",
                      "XBB",
                      "XBC",
                      "XBD",
                      "XCD",
                      "XDR",
                      "XOF",
                      "XPD",
                      "XPF",
                      "XPT",
                      "XSU",
                      "XTS",
                      "XUA",
                      "XXX",
                      "YER",
                      "ZAR",
                      "ZMW",
                      "ZWL"
                    ]
                  },
                  "amount": {
                    "maximum": 2147483647,
                    "minimum": 0.01,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
                    "example": 100
                  },
                  "reference": {
                    "type": "string",
                    "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters that are not all the same (up to 140 characters for currencies other than GBP). Can contain alphanumeric, '-', '.', '&', '/' and space.",
                    "example": "Salary"
                  },
                  "externalReference": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w-\\s]*",
                    "type": "string",
                    "description": "Your reference for this payment",
                    "example": "aReference_00001"
                  },
                  "endToEndReference": {
                    "type": "string",
                    "description": "Optional end to end reference. For international payments, Modulr payment ID will be used as end-to-end reference.",
                    "example": "aReference_00001"
                  },
                  "regulatoryReporting": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Regulatory Reporting Type",
                        "example": "CRED",
                        "enum": [
                          "CRED",
                          "DEBT",
                          "BOTH"
                        ]
                      },
                      "regulatoryAuthority": {
                        "type": "object",
                        "properties": {
                          "authorityName": {
                            "maxLength": 70,
                            "minLength": 0,
                            "type": "string",
                            "description": "Authority name. Maximum of 70 characters.",
                            "example": "Financial Conduct Authority"
                          },
                          "authorityCountry": {
                            "type": "string",
                            "description": "ISO 3166 country code of the ultimate payers address",
                            "example": "GB",
                            "enum": [
                              "AT",
                              "BE",
                              "BG",
                              "CY",
                              "CZ",
                              "DK",
                              "EE",
                              "FI",
                              "FR",
                              "DE",
                              "GR",
                              "HR",
                              "HU",
                              "IS",
                              "IE",
                              "IT",
                              "LV",
                              "LI",
                              "LT",
                              "LU",
                              "MT",
                              "NL",
                              "NO",
                              "PL",
                              "PT",
                              "RO",
                              "SK",
                              "SI",
                              "ES",
                              "SE",
                              "GB",
                              "MQ",
                              "YT",
                              "GP",
                              "GF",
                              "RE",
                              "MF",
                              "GI",
                              "GG",
                              "IM",
                              "JE",
                              "MC",
                              "CH",
                              "AD",
                              "SM",
                              "VA",
                              "AX",
                              "PM",
                              "BL",
                              "AF",
                              "AL",
                              "DZ",
                              "AS",
                              "AO",
                              "AI",
                              "AQ",
                              "AG",
                              "AR",
                              "AM",
                              "AW",
                              "AU",
                              "AZ",
                              "BS",
                              "BH",
                              "BD",
                              "BB",
                              "BY",
                              "BZ",
                              "BJ",
                              "BM",
                              "BT",
                              "BO",
                              "BQ",
                              "BA",
                              "BW",
                              "BV",
                              "BR",
                              "IO",
                              "VG",
                              "BN",
                              "BF",
                              "BI",
                              "KH",
                              "CM",
                              "CA",
                              "CV",
                              "KY",
                              "CF",
                              "TD",
                              "CL",
                              "CN",
                              "CX",
                              "CC",
                              "CO",
                              "KM",
                              "CK",
                              "CR",
                              "CU",
                              "CW",
                              "CD",
                              "DJ",
                              "DM",
                              "DO",
                              "TL",
                              "EC",
                              "EG",
                              "SV",
                              "GQ",
                              "ER",
                              "SZ",
                              "ET",
                              "FK",
                              "FO",
                              "FJ",
                              "PF",
                              "TF",
                              "GA",
                              "GM",
                              "GE",
                              "GH",
                              "GL",
                              "GD",
                              "GU",
                              "GT",
                              "GN",
                              "GW",
                              "GY",
                              "HT",
                              "HM",
                              "HN",
                              "HK",
                              "IN",
                              "ID",
                              "IR",
                              "IQ",
                              "IL",
                              "CI",
                              "JM",
                              "JP",
                              "JO",
                              "KZ",
                              "KE",
                              "KI",
                              "XK",
                              "KW",
                              "KG",
                              "LA",
                              "LB",
                              "LS",
                              "LR",
                              "LY",
                              "MO",
                              "MG",
                              "MW",
                              "MY",
                              "MV",
                              "ML",
                              "MH",
                              "MR",
                              "MU",
                              "MX",
                              "FM",
                              "MD",
                              "MN",
                              "ME",
                              "MS",
                              "MA",
                              "MZ",
                              "MM",
                              "NA",
                              "NR",
                              "NP",
                              "AN",
                              "NC",
                              "NZ",
                              "NI",
                              "NE",
                              "NG",
                              "NU",
                              "NF",
                              "KP",
                              "MK",
                              "MP",
                              "OM",
                              "PK",
                              "PW",
                              "PS",
                              "PA",
                              "PG",
                              "PY",
                              "PE",
                              "PH",
                              "PN",
                              "PR",
                              "QA",
                              "CG",
                              "RU",
                              "RW",
                              "SH",
                              "KN",
                              "LC",
                              "VC",
                              "WS",
                              "ST",
                              "SA",
                              "SN",
                              "RS",
                              "SC",
                              "SL",
                              "SG",
                              "SX",
                              "SB",
                              "SO",
                              "ZA",
                              "KR",
                              "GS",
                              "SS",
                              "LK",
                              "SD",
                              "SR",
                              "SY",
                              "SJ",
                              "TW",
                              "TJ",
                              "TZ",
                              "TH",
                              "TG",
                              "TK",
                              "TO",
                              "TT",
                              "TN",
                              "TR",
                              "TM",
                              "TC",
                              "TV",
                              "UG",
                              "UA",
                              "AE",
                              "UM",
                              "US",
                              "UY",
                              "UZ",
                              "VU",
                              "VE",
                              "VN",
                              "VI",
                              "WF",
                              "EH",
                              "YE",
                              "ZM",
                              "ZW"
                            ]
                          }
                        },
                        "description": "Regulatory authority"
                      },
                      "structuredRegulatoryReporting": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "maxLength": 3,
                            "minLength": 0,
                            "type": "string"
                          },
                          "amount": {
                            "maximum": 2147483647,
                            "minimum": 0.01,
                            "exclusiveMinimum": false,
                            "type": "number",
                            "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
                            "example": 100
                          },
                          "currencyCode": {
                            "type": "string",
                            "description": "Currency of the account in ISO 4217 format. Default is GBP",
                            "enum": [
                              "GBP",
                              "EUR",
                              "AED",
                              "AFN",
                              "ALL",
                              "AMD",
                              "ANG",
                              "AOA",
                              "ARS",
                              "AUD",
                              "AWG",
                              "AZN",
                              "BAM",
                              "BBD",
                              "BDT",
                              "BGN",
                              "BHD",
                              "BIF",
                              "BMD",
                              "BND",
                              "BOB",
                              "BOV",
                              "BRL",
                              "BSD",
                              "BTN",
                              "BWP",
                              "BYN",
                              "BZD",
                              "CAD",
                              "CDF",
                              "CHE",
                              "CHF",
                              "CHW",
                              "CLF",
                              "CLP",
                              "CNY",
                              "COP",
                              "COU",
                              "CRC",
                              "CUC",
                              "CUP",
                              "CVE",
                              "CZK",
                              "DJF",
                              "DKK",
                              "DOP",
                              "DZD",
                              "EGP",
                              "ERN",
                              "ETB",
                              "FJD",
                              "FKP",
                              "GEL",
                              "GHS",
                              "GIP",
                              "GMD",
                              "GNF",
                              "GTQ",
                              "GYD",
                              "HKD",
                              "HNL",
                              "HRK",
                              "HTG",
                              "HUF",
                              "IDR",
                              "ILS",
                              "INR",
                              "IQD",
                              "IRR",
                              "ISK",
                              "JMD",
                              "JOD",
                              "JPY",
                              "KES",
                              "KGS",
                              "KHR",
                              "KMF",
                              "KPW",
                              "KRW",
                              "KWD",
                              "KYD",
                              "KZT",
                              "LAK",
                              "LBP",
                              "LKR",
                              "LRD",
                              "LSL",
                              "LYD",
                              "MAD",
                              "MDL",
                              "MGA",
                              "MKD",
                              "MMK",
                              "MNT",
                              "MOP",
                              "MRU",
                              "MUR",
                              "MVR",
                              "MWK",
                              "MXN",
                              "MXV",
                              "MYR",
                              "MZN",
                              "NAD",
                              "NGN",
                              "NIO",
                              "NOK",
                              "NPR",
                              "NZD",
                              "OMR",
                              "PAB",
                              "PEN",
                              "PGK",
                              "PHP",
                              "PKR",
                              "PLN",
                              "PYG",
                              "QAR",
                              "RON",
                              "RSD",
                              "RUB",
                              "RWF",
                              "SAR",
                              "SBD",
                              "SCR",
                              "SDG",
                              "SEK",
                              "SGD",
                              "SLE",
                              "SLL",
                              "SOS",
                              "SRD",
                              "SSP",
                              "STN",
                              "SVC",
                              "SYP",
                              "SZL",
                              "SHP",
                              "THB",
                              "TJS",
                              "TMT",
                              "TND",
                              "TOP",
                              "TRY",
                              "TTD",
                              "TWD",
                              "TZS",
                              "UAH",
                              "UGX",
                              "USD",
                              "USN",
                              "UYI",
                              "UYU",
                              "UYW",
                              "UZS",
                              "VES",
                              "VND",
                              "VUV",
                              "WST",
                              "XAF",
                              "XAG",
                              "XAU",
                              "XBA",
                              "XBB",
                              "XBC",
                              "XBD",
                              "XCD",
                              "XDR",
                              "XOF",
                              "XPD",
                              "XPF",
                              "XPT",
                              "XSU",
                              "XTS",
                              "XUA",
                              "XXX",
                              "YER",
                              "ZAR",
                              "ZMW",
                              "ZWL"
                            ]
                          },
                          "information": {
                            "maxLength": 35,
                            "minLength": 0,
                            "type": "string"
                          }
                        },
                        "description": "Structured regulatory reporting"
                      }
                    },
                    "description": "Regulatory reporting"
                  },
                  "paymentDate": {
                    "type": "string",
                    "description": "The future date on which to make the payment. Date format 'yyyy-MM-dd'.\n\nNot applicable for international payments which will be submitted on date of submission or next working day, in line with cut-offs.",
                    "example": "2017-01-28"
                  },
                  "overseasPaymentDetail": {
                    "type": "object",
                    "properties": {
                      "ultimatePayer": {
                        "required": [
                          "address",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "maxLength": 70,
                            "minLength": 0,
                            "type": "string",
                            "description": "Name of the ultimate payer"
                          },
                          "address": {
                            "required": [
                              "country"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "maxLength": 70,
                                "minLength": 0,
                                "type": "string",
                                "description": "First line of the ultimate payers address",
                                "example": "2nd Floor"
                              },
                              "addressLine2": {
                                "maxLength": 70,
                                "minLength": 0,
                                "type": "string",
                                "description": "Second line of the ultimate payers address",
                                "example": "123 High Street"
                              },
                              "postTown": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Postal town of the ultimate payers address",
                                "example": "Edinburgh"
                              },
                              "postCode": {
                                "maxLength": 16,
                                "minLength": 0,
                                "type": "string",
                                "description": "Post code of the ultimate payers address",
                                "example": "AB12 3XX"
                              },
                              "country": {
                                "type": "string",
                                "description": "ISO 3166 country code of the ultimate payers address",
                                "example": "GB"
                              }
                            }
                          },
                          "birthDetails": {
                            "type": "object",
                            "properties": {
                              "dateOfBirth": {
                                "pattern": "^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$",
                                "type": "string",
                                "description": "Date of birth in ISO 8601 format of the ultimate payer",
                                "example": "1978-01-01"
                              },
                              "cityOfBirth": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "City of birth of the ultimate payer",
                                "example": "Edinburgh"
                              },
                              "countryOfBirth": {
                                "type": "string",
                                "description": "ISO 3166 country code of the ultimate payers country of birth",
                                "example": "GB"
                              }
                            },
                            "description": "Birth details of a person. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                          },
                          "officialIdentification": {
                            "type": "object",
                            "properties": {
                              "drivingLicenceNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Driving licence number",
                                "example": "JONES849339TS8AD"
                              },
                              "customerNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Customer number",
                                "example": "23547326547632"
                              },
                              "socialSecurityNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Social security number or equivalent",
                                "example": "1110000000022AB"
                              },
                              "passportNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Passport number",
                                "example": "123456789"
                              },
                              "idCardNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "National ID card number",
                                "example": "123456789"
                              },
                              "otherIdNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Other ID number",
                                "example": "123456789"
                              }
                            },
                            "description": "Official identification for a person. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                          },
                          "officialIdDetailOrgs": {
                            "type": "object",
                            "properties": {
                              "bankPartyIdentification": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Bank party identification",
                                "example": "12345"
                              },
                              "centralBankIdNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Central bank identification number",
                                "example": "678910"
                              },
                              "clearingIdNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Clearing identification Number",
                                "example": "xx15402"
                              },
                              "certificateOfIncorporationNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Certification of the incorporation number",
                                "example": "1100010"
                              },
                              "countryIdCode": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Country identification code",
                                "example": "111111"
                              },
                              "customerNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Customer number",
                                "example": "00221133"
                              },
                              "dataUniversalNumberingSystem": {
                                "pattern": "^[0-9]{9,9}?$",
                                "type": "string",
                                "description": "Data universal numbering system",
                                "example": "002211330"
                              },
                              "employerIdNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Employer identification number",
                                "example": "00221133"
                              },
                              "gs1glnIdentifier": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "GS1GLN identifier",
                                "example": "00221133"
                              },
                              "sirenCode": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "SIREN code",
                                "example": "00221133"
                              },
                              "siretCode": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "SIRET code",
                                "example": "00221133"
                              },
                              "taxIdNumber": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Tax identification number",
                                "example": "00221133"
                              },
                              "bicIdentifier": {
                                "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                                "type": "string",
                                "description": "BICI identification",
                                "example": "MGALODJAO7A"
                              },
                              "ibeiIdentifier": {
                                "pattern": "^[A-Z]{2,2}[B-DF-HJ-NP-TV-XZ0-9]{7,7}[0-9]{1,1}?$",
                                "type": "string",
                                "description": "IBEI identification",
                                "example": "HIZFTMTT59"
                              },
                              "beiIdentifier": {
                                "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                                "type": "string",
                                "description": "BEI identification",
                                "example": "MHIHISVZUMH"
                              },
                              "eanglnIdentifier": {
                                "pattern": "^[0-9]{13,13}?$",
                                "type": "string",
                                "description": "EANGLN identification",
                                "example": "7516164953429"
                              },
                              "chipsUniversalIdentifier": {
                                "pattern": "^CH[0-9]{6,6}?$",
                                "type": "string",
                                "description": "CHIPS universal identification",
                                "example": "CH157373"
                              },
                              "genericIdentification3": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Generic identification 3",
                                "example": "123456788"
                              },
                              "genericIdentificationIssr": {
                                "maxLength": 35,
                                "minLength": 0,
                                "type": "string",
                                "description": "Generic identification issr",
                                "example": "13143225"
                              }
                            },
                            "description": "Organisation's official identification. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                          },
                          "overseasAccountIdentifier": {
                            "type": "object",
                            "properties": {
                              "iban": {
                                "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}$",
                                "type": "string",
                                "description": "International Bank Account Number (IBAN)",
                                "example": "GB20MODR00000000000001"
                              },
                              "bban": {
                                "pattern": "^[a-zA-Z0-9]{1,30}$",
                                "type": "string",
                                "description": "Basic Bank Account Number (BBAN)",
                                "example": "NWBK60161331926819"
                              },
                              "upic": {
                                "pattern": "^\\d{8,17}$",
                                "type": "string",
                                "description": "Universal Payment Identification Code (UPIC)",
                                "example": "987654321"
                              },
                              "otherAccountNumber": {
                                "pattern": "^[a-zA-Z0-9]{1,34}$",
                                "type": "string",
                                "description": "Other Account ID",
                                "example": "987654321"
                              }
                            }
                          },
                          "bic": {
                            "pattern": "^[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?$",
                            "type": "string",
                            "description": "Destination beneficiary's BIC/Swift Code.",
                            "example": "MODRDEFF123"
                          }
                        }
                      },
                      "originalPaymentDetails": {
                        "required": [
                          "amount",
                          "currency",
                          "exchangeRate"
                        ],
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "Amount of currency that the payment is in",
                            "example": 1000.45
                          },
                          "exchangeRate": {
                            "type": "number",
                            "description": "Exchange rate",
                            "example": 1.45
                          },
                          "currency": {
                            "type": "string",
                            "description": "ISO 4217 currency code that the amount is in",
                            "enum": [
                              "GBP",
                              "EUR",
                              "AED",
                              "AFN",
                              "ALL",
                              "AMD",
                              "ANG",
                              "AOA",
                              "ARS",
                              "AUD",
                              "AWG",
                              "AZN",
                              "BAM",
                              "BBD",
                              "BDT",
                              "BGN",
                              "BHD",
                              "BIF",
                              "BMD",
                              "BND",
                              "BOB",
                              "BOV",
                              "BRL",
                              "BSD",
                              "BTN",
                              "BWP",
                              "BYN",
                              "BZD",
                              "CAD",
                              "CDF",
                              "CHE",
                              "CHF",
                              "CHW",
                              "CLF",
                              "CLP",
                              "CNY",
                              "COP",
                              "COU",
                              "CRC",
                              "CUC",
                              "CUP",
                              "CVE",
                              "CZK",
                              "DJF",
                              "DKK",
                              "DOP",
                              "DZD",
                              "EGP",
                              "ERN",
                              "ETB",
                              "FJD",
                              "FKP",
                              "GEL",
                              "GHS",
                              "GIP",
                              "GMD",
                              "GNF",
                              "GTQ",
                              "GYD",
                              "HKD",
                              "HNL",
                              "HRK",
                              "HTG",
                              "HUF",
                              "IDR",
                              "ILS",
                              "INR",
                              "IQD",
                              "IRR",
                              "ISK",
                              "JMD",
                              "JOD",
                              "JPY",
                              "KES",
                              "KGS",
                              "KHR",
                              "KMF",
                              "KPW",
                              "KRW",
                              "KWD",
                              "KYD",
                              "KZT",
                              "LAK",
                              "LBP",
                              "LKR",
                              "LRD",
                              "LSL",
                              "LYD",
                              "MAD",
                              "MDL",
                              "MGA",
                              "MKD",
                              "MMK",
                              "MNT",
                              "MOP",
                              "MRU",
                              "MUR",
                              "MVR",
                              "MWK",
                              "MXN",
                              "MXV",
                              "MYR",
                              "MZN",
                              "NAD",
                              "NGN",
                              "NIO",
                              "NOK",
                              "NPR",
                              "NZD",
                              "OMR",
                              "PAB",
                              "PEN",
                              "PGK",
                              "PHP",
                              "PKR",
                              "PLN",
                              "PYG",
                              "QAR",
                              "RON",
                              "RSD",
                              "RUB",
                              "RWF",
                              "SAR",
                              "SBD",
                              "SCR",
                              "SDG",
                              "SEK",
                              "SGD",
                              "SLE",
                              "SLL",
                              "SOS",
                              "SRD",
                              "SSP",
                              "STN",
                              "SVC",
                              "SYP",
                              "SZL",
                              "SHP",
                              "THB",
                              "TJS",
                              "TMT",
                              "TND",
                              "TOP",
                              "TRY",
                              "TTD",
                              "TWD",
                              "TZS",
                              "UAH",
                              "UGX",
                              "USD",
                              "USN",
                              "UYI",
                              "UYU",
                              "UYW",
                              "UZS",
                              "VES",
                              "VND",
                              "VUV",
                              "WST",
                              "XAF",
                              "XAG",
                              "XAU",
                              "XBA",
                              "XBB",
                              "XBC",
                              "XBD",
                              "XCD",
                              "XDR",
                              "XOF",
                              "XPD",
                              "XPF",
                              "XPT",
                              "XSU",
                              "XTS",
                              "XUA",
                              "XXX",
                              "YER",
                              "ZAR",
                              "ZMW",
                              "ZWL"
                            ]
                          }
                        }
                      },
                      "chargeDetails": {
                        "required": [
                          "amount",
                          "bearer",
                          "currency"
                        ],
                        "type": "object",
                        "properties": {
                          "bearer": {
                            "type": "string",
                            "description": "Information about bearer of the charges. Its can be Creditor, Debtor or shared between both",
                            "example": "CRED",
                            "enum": [
                              "CRED",
                              "DEBT",
                              "SHAR"
                            ]
                          },
                          "amount": {
                            "type": "number",
                            "description": "Amount of the charges. Max allowed is 999999999999.99",
                            "example": 100
                          },
                          "currency": {
                            "type": "string",
                            "description": "Currency of charge. Should be ISO Standard currency",
                            "example": "GBP",
                            "enum": [
                              "GBP",
                              "EUR",
                              "AED",
                              "AFN",
                              "ALL",
                              "AMD",
                              "ANG",
                              "AOA",
                              "ARS",
                              "AUD",
                              "AWG",
                              "AZN",
                              "BAM",
                              "BBD",
                              "BDT",
                              "BGN",
                              "BHD",
                              "BIF",
                              "BMD",
                              "BND",
                              "BOB",
                              "BOV",
                              "BRL",
                              "BSD",
                              "BTN",
                              "BWP",
                              "BYN",
                              "BZD",
                              "CAD",
                              "CDF",
                              "CHE",
                              "CHF",
                              "CHW",
                              "CLF",
                              "CLP",
                              "CNY",
                              "COP",
                              "COU",
                              "CRC",
                              "CUC",
                              "CUP",
                              "CVE",
                              "CZK",
                              "DJF",
                              "DKK",
                              "DOP",
                              "DZD",
                              "EGP",
                              "ERN",
                              "ETB",
                              "FJD",
                              "FKP",
                              "GEL",
                              "GHS",
                              "GIP",
                              "GMD",
                              "GNF",
                              "GTQ",
                              "GYD",
                              "HKD",
                              "HNL",
                              "HRK",
                              "HTG",
                              "HUF",
                              "IDR",
                              "ILS",
                              "INR",
                              "IQD",
                              "IRR",
                              "ISK",
                              "JMD",
                              "JOD",
                              "JPY",
                              "KES",
                              "KGS",
                              "KHR",
                              "KMF",
                              "KPW",
                              "KRW",
                              "KWD",
                              "KYD",
                              "KZT",
                              "LAK",
                              "LBP",
                              "LKR",
                              "LRD",
                              "LSL",
                              "LYD",
                              "MAD",
                              "MDL",
                              "MGA",
                              "MKD",
                              "MMK",
                              "MNT",
                              "MOP",
                              "MRU",
                              "MUR",
                              "MVR",
                              "MWK",
                              "MXN",
                              "MXV",
                              "MYR",
                              "MZN",
                              "NAD",
                              "NGN",
                              "NIO",
                              "NOK",
                              "NPR",
                              "NZD",
                              "OMR",
                              "PAB",
                              "PEN",
                              "PGK",
                              "PHP",
                              "PKR",
                              "PLN",
                              "PYG",
                              "QAR",
                              "RON",
                              "RSD",
                              "RUB",
                              "RWF",
                              "SAR",
                              "SBD",
                              "SCR",
                              "SDG",
                              "SEK",
                              "SGD",
                              "SLE",
                              "SLL",
                              "SOS",
                              "SRD",
                              "SSP",
                              "STN",
                              "SVC",
                              "SYP",
                              "SZL",
                              "SHP",
                              "THB",
                              "TJS",
                              "TMT",
                              "TND",
                              "TOP",
                              "TRY",
                              "TTD",
                              "TWD",
                              "TZS",
                              "UAH",
                              "UGX",
                              "USD",
                              "USN",
                              "UYI",
                              "UYU",
                              "UYW",
                              "UZS",
                              "VES",
                              "VND",
                              "VUV",
                              "WST",
                              "XAF",
                              "XAG",
                              "XAU",
                              "XBA",
                              "XBB",
                              "XBC",
                              "XBD",
                              "XCD",
                              "XDR",
                              "XOF",
                              "XPD",
                              "XPF",
                              "XPT",
                              "XSU",
                              "XTS",
                              "XUA",
                              "XXX",
                              "YER",
                              "ZAR",
                              "ZMW",
                              "ZWL"
                            ]
                          }
                        }
                      },
                      "additionalRemittanceInformation": {
                        "maxLength": 140,
                        "minLength": 0,
                        "type": "string"
                      }
                    },
                    "description": "Details relating to payment originated overseas.\n\nNot applicable for international payments - all international transactions must originate from the Modulr account creating the payment request."
                  },
                  "fxQuoteId": {
                    "type": "string",
                    "description": "FX quote ID related to this payment. If supplied, neither 'amount' nor 'currency' should be supplied.",
                    "example": "Q0000001",
                    "deprecated": true
                  },
                  "destinationId": {
                    "type": "string",
                    "writeOnly": true
                  },
                  "destinationType": {
                    "type": "string",
                    "writeOnly": true,
                    "enum": [
                      "BENEFICIARY",
                      "ACCOUNT",
                      "IBAN",
                      "SCAN",
                      "INTL",
                      "ANBRN",
                      "AN"
                    ]
                  }
                },
                "description": "Details of Payment request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PaymentReference",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "details",
                    "externalReference",
                    "id",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for the Payment request. 10 characters long",
                      "example": "P000001ABC"
                    },
                    "status": {
                      "type": "string",
                      "description": "Current status of payment.",
                      "enum": [
                        "SUBMITTED",
                        "SCREENING_REQ",
                        "VALIDATED",
                        "PENDING_FOR_DATE",
                        "PENDING_FOR_FUNDS",
                        "EXT_PROC",
                        "PROCESSED",
                        "RECONCILED",
                        "ER_INVALID",
                        "ER_EXTCONN",
                        "ER_EXTSYS",
                        "ER_EXPIRED",
                        "ER_GENERAL",
                        "ER_BATCH",
                        "EXT_SENT",
                        "UNALLOCATED",
                        "HELD",
                        "RETURNED",
                        "CANCELLED",
                        "REPROCESSING",
                        "VOID",
                        "CLEARING"
                      ]
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime the request was created. Format is 'yyyy-MM-dd'T'HH:mm:ss.sssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01.010+0000'",
                      "format": "date-time"
                    },
                    "externalReference": {
                      "type": "string",
                      "description": "external reference if provided",
                      "example": "aReference_00001"
                    },
                    "details": {
                      "type": "object",
                      "description": "All the details of the payment from the original request"
                    },
                    "approvalStatus": {
                      "type": "string",
                      "description": "Current approval status of payment",
                      "enum": [
                        "NOTNEEDED",
                        "PENDING",
                        "APPROVED",
                        "REJECTED",
                        "DELETED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Information about payment (if available)"
                    },
                    "schemeInfo": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "responseCode": {
                          "type": "string"
                        }
                      },
                      "description": "Information with regards to the payment scheme"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "ID of the user that created the payment"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "RETURN"
                      ]
                    },
                    "paymentScheduledDate": {
                      "type": "string",
                      "description": "Datetime of the payment scheduled at. Format is 'yyyy-MM-dd'T'HH:mm:ss.sssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01.010+0000'",
                      "format": "date-time"
                    },
                    "currentUserCanApprove": {
                      "type": "boolean",
                      "description": "Indicates if current user can approve the payment"
                    },
                    "approvals": {
                      "type": "array",
                      "description": "List of approvals performed on the payment",
                      "items": {
                        "type": "object",
                        "properties": {
                          "approvedBy": {
                            "type": "string",
                            "description": "ID of user who approved this batch payment request",
                            "example": "U2100021"
                          },
                          "approvedOn": {
                            "type": "string",
                            "description": "Date this approval was applied",
                            "format": "date",
                            "example": "2022-06-25"
                          }
                        },
                        "description": "A single approval against a batch payment request"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/batchpayments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get batch payments by a given set of parameters",
        "description": "This endpoint allows for a user who has submitted multiple batch to use some criteria to get the batch payments.",
        "operationId": "getBatchPayments",
        "parameters": [
          {
            "name": "externalReference",
            "in": "query",
            "description": "Batch payments External Reference contains this text.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "pattern": "[\\w-\\s]*",
              "type": "string",
              "description": "Batch payments External Reference contains this text.",
              "example": "aReference_00001"
            },
            "example": "aReference_00001"
          },
          {
            "name": "fromCreatedDate",
            "in": "query",
            "description": "Batch payments created date equal or after to this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Batch payments created date equal or after to this date.",
              "example": "2022-05-16"
            },
            "example": "2022-05-16"
          },
          {
            "name": "batchPaymentStatuses",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Current status of batch. Multiple statuses can be specified by repeating the parameter.",
                "enum": [
                  "ACCEPTED",
                  "REJECTED",
                  "SUBMITTED",
                  "CANCELLED"
                ]
              }
            }
          },
          {
            "name": "paymentStatuses",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Current status of payment. Multiple statuses can be specified by repeating the parameter.",
                "enum": [
                  "SUBMITTED",
                  "SCREENING_REQ",
                  "VALIDATED",
                  "PENDING_FOR_DATE",
                  "PENDING_FOR_FUNDS",
                  "EXT_PROC",
                  "PROCESSED",
                  "RECONCILED",
                  "ER_INVALID",
                  "ER_EXTCONN",
                  "ER_EXTSYS",
                  "ER_EXPIRED",
                  "ER_GENERAL",
                  "ER_BATCH",
                  "EXT_SENT",
                  "UNALLOCATED",
                  "HELD",
                  "RETURNED",
                  "CANCELLED",
                  "REPROCESSING",
                  "VOID",
                  "CLEARING"
                ]
              }
            }
          },
          {
            "name": "approvalStatus",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Filter batch payments which contain payments with the specified approval statuses",
                "enum": [
                  "NOTNEEDED",
                  "PENDING",
                  "APPROVED",
                  "REJECTED",
                  "DELETED"
                ]
              }
            }
          },
          {
            "name": "currentUserCanApprove",
            "in": "query",
            "description": "Only return batch payments the current user can approve.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Only return batch payments the current user can approve.",
              "example": "true"
            },
            "example": true
          },
          {
            "name": "createdByCustomerId",
            "in": "query",
            "description": "Limit results by the customer which created the batch payment request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Limit results by the customer which created the batch payment request"
            }
          },
          {
            "name": "submissionType",
            "in": "query",
            "description": "Limit results to batches with submission type specified",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Limit results to batches with submission type specified"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Page to fetch (0 indexed)",
              "default": "0"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of Page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "string",
              "description": "Size of Page to fetch",
              "default": "20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for the Batch Payment. 10 characters long",
                            "example": "D920000001"
                          },
                          "externalReference": {
                            "type": "string",
                            "description": "External reference, if provided",
                            "example": "aReference_00001"
                          },
                          "status": {
                            "type": "string",
                            "description": "Current status of batch.",
                            "example": "ACCEPTED",
                            "enum": [
                              "ACCEPTED",
                              "REJECTED",
                              "SUBMITTED",
                              "CANCELLED"
                            ]
                          },
                          "totalPayments": {
                            "type": "integer",
                            "description": "Total count of payments in this batch",
                            "format": "int32",
                            "example": 9123
                          },
                          "currentUserCanApprove": {
                            "type": "boolean",
                            "description": "Whether the user is allowed to approve this batch, based on their approval limits, and applicable configuration",
                            "example": true
                          },
                          "paymentDetails": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "totalPaymentCount": {
                                  "type": "integer",
                                  "description": "Total count of payments",
                                  "format": "int32",
                                  "example": 10
                                },
                                "totalAmount": {
                                  "type": "number",
                                  "description": "Sum total of payment amounts",
                                  "example": 100
                                },
                                "pendingApprovalCount": {
                                  "type": "integer",
                                  "description": "Count of payments currently pending approval",
                                  "format": "int32",
                                  "example": 5
                                },
                                "pendingApprovalAmount": {
                                  "type": "number",
                                  "description": "Sum total of payment amounts currently pending approval",
                                  "example": 50
                                }
                              },
                              "description": "Summary of payments and approvals"
                            },
                            "description": "Summary of payments and approvals, per currency (as a 3-alpha currency code)"
                          },
                          "approvals": {
                            "type": "array",
                            "description": "List of batch-level approvals",
                            "items": {
                              "type": "object",
                              "properties": {
                                "approvedBy": {
                                  "type": "string",
                                  "description": "ID of user who approved this batch payment request",
                                  "example": "U2100021"
                                },
                                "approvedOn": {
                                  "type": "string",
                                  "description": "Date this approval was applied",
                                  "format": "date",
                                  "example": "2022-06-25"
                                }
                              },
                              "description": "A single approval against a batch payment request"
                            }
                          },
                          "currentUserCanCancel": {
                            "type": "boolean",
                            "description": "Whether the user is allowed and currently able to cancel at least one of the payments in this batch"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "Datetime when the batch payment was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "processingDateFrom": {
                            "type": "string",
                            "description": "Earliest processing date in the batch file or the batch creation date if the file does not have any dates. Date format 'yyyy-MM-dd'",
                            "format": "date",
                            "example": "2017-01-28"
                          },
                          "processingDateTo": {
                            "type": "string",
                            "description": "Last processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
                            "format": "date",
                            "example": "2017-01-28"
                          },
                          "earliestScheduledPaymentDate": {
                            "type": "string",
                            "description": "Earliest processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
                            "format": "date",
                            "example": "2017-01-28"
                          },
                          "requiredApprovalCount": {
                            "type": "integer",
                            "description": "The number of required approvals for the batch.  Applicable to batch payments of submissionType BATCH",
                            "format": "int32"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Make a batch payment",
        "description": "As well as supporting individual payment requests, the Modulr payment platform can also handle multiple payment objects in the same request. This endpoint allows you to make a new batch payment.",
        "operationId": "submitBatchPayments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "payments"
                ],
                "type": "object",
                "properties": {
                  "externalReference": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w-\\s]*",
                    "type": "string",
                    "description": "Your reference for this Batch of payments",
                    "example": "aReference_00001"
                  },
                  "strictProcessing": {
                    "type": "boolean",
                    "description": "Flag to control if the entire batch fails for any individual payment validation failure"
                  },
                  "submissionType": {
                    "type": "string",
                    "description": "BATCH restricts operations to batch level.  BULK (default) allows payment level operations such as approval",
                    "enum": [
                      "BATCH",
                      "BULK"
                    ]
                  },
                  "payments": {
                    "maxItems": 2147483647,
                    "minItems": 1,
                    "type": "array",
                    "description": "List of payments. Need at least 1 and maximum of 10000",
                    "items": {
                      "required": [
                        "sourceAccountId"
                      ],
                      "type": "object",
                      "properties": {
                        "sourceAccountId": {
                          "type": "string",
                          "description": "Identifier for the sending Account."
                        },
                        "destination": {
                          "required": [
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Indicates the type of destination. IBAN type is required for international payments.",
                              "example": "SCAN",
                              "enum": [
                                "BENEFICIARY",
                                "ACCOUNT",
                                "IBAN",
                                "SCAN",
                                "INTL",
                                "ANBRN",
                                "AN"
                              ]
                            },
                            "id": {
                              "type": "string",
                              "description": "Identifier for the Payment destination if using ACCOUNT or BENEFICIARY type. Can be either: a) Beneficiary id for an external Payment, b) Account id for a transfer to another Account"
                            },
                            "iban": {
                              "pattern": "^[a-zA-Z]{2}[0-9]{2}([a-zA-Z0-9]){11,30}$",
                              "type": "string",
                              "description": "International Bank Account Number (IBAN). To be used as the destination identifier when sending âIBANâ type payments",
                              "example": "GB20MODR00000000000001"
                            },
                            "accountNumber": {
                              "type": "string",
                              "description": "Account Number of destination account if using SCAN type.",
                              "example": "12345678"
                            },
                            "sortCode": {
                              "pattern": "^[0-9]{6}$",
                              "type": "string",
                              "description": "Sort Code of destination account if using SCAN type.",
                              "example": "000000"
                            },
                            "name": {
                              "maxLength": 100,
                              "minLength": 0,
                              "type": "string",
                              "description": "Name to use if a new beneficiary is created, and for using as the payee name if SCAN or IBAN types are specified for the destination",
                              "example": "Test"
                            },
                            "address": {
                              "required": [
                                "addressLine1",
                                "postTown"
                              ],
                              "type": "object",
                              "properties": {
                                "addressLine1": {
                                  "maxLength": 50,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "addressLine2": {
                                  "maxLength": 50,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "postTown": {
                                  "maxLength": 50,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "postCode": {
                                  "maxLength": 10,
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "Mandatory for international payments."
                                },
                                "countrySubDivision": {
                                  "maxLength": 35,
                                  "minLength": 0,
                                  "type": "string"
                                }
                              },
                              "description": "Optional address. Mandatory for international payments."
                            },
                            "birthdate": {
                              "type": "string",
                              "description": "The destination beneficiary's date of birth. Format: yyyy-MM-dd",
                              "format": "date",
                              "example": "2000-01-01"
                            },
                            "emailAddress": {
                              "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
                              "type": "string",
                              "description": "The destination beneficiary's email address"
                            },
                            "phoneNumber": {
                              "type": "string",
                              "description": "The destination beneficiary's phone number"
                            },
                            "bic": {
                              "type": "string",
                              "description": "The destination beneficiary's SWIFT BIC (Bank Identifier Code). Only to be used for international payments."
                            },
                            "countrySpecificDetails": {
                              "type": "object",
                              "properties": {
                                "bankName": {
                                  "type": "string",
                                  "description": "The name of the destination bank.",
                                  "example": "Apple Bank"
                                },
                                "bankAddress": {
                                  "type": "string",
                                  "description": "The address of the destination bank.",
                                  "example": "2100 Broadway"
                                },
                                "bankCity": {
                                  "type": "string",
                                  "description": "The city in which the destination bank resides.",
                                  "example": "New York City"
                                },
                                "bankBranchName": {
                                  "type": "string",
                                  "description": "The name of the destination bank's branch.",
                                  "example": "New York"
                                },
                                "bankBranchCode": {
                                  "type": "string",
                                  "description": "The code of the destination bank's branch.",
                                  "example": "44-04"
                                },
                                "bankCode": {
                                  "type": "string",
                                  "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                                },
                                "chineseId": {
                                  "type": "string",
                                  "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                  "example": "01101201901018889"
                                },
                                "province": {
                                  "type": "string",
                                  "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                  "example": "Zhejiang"
                                },
                                "abaRoutingNumber": {
                                  "pattern": "^\\d{9}$",
                                  "type": "string",
                                  "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                  "example": "123456789"
                                },
                                "business": {
                                  "type": "boolean",
                                  "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                  "example": true
                                },
                                "bankCodeType": {
                                  "type": "string",
                                  "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                  "example": "ABA",
                                  "enum": [
                                    "ABA",
                                    "CHIPS"
                                  ]
                                },
                                "bankCountry": {
                                  "type": "string",
                                  "description": "The country in which the destination bank resides. Mandatory for international payments.",
                                  "example": "US",
                                  "enum": [
                                    "AT",
                                    "BE",
                                    "BG",
                                    "CY",
                                    "CZ",
                                    "DK",
                                    "EE",
                                    "FI",
                                    "FR",
                                    "DE",
                                    "GR",
                                    "HR",
                                    "HU",
                                    "IS",
                                    "IE",
                                    "IT",
                                    "LV",
                                    "LI",
                                    "LT",
                                    "LU",
                                    "MT",
                                    "NL",
                                    "NO",
                                    "PL",
                                    "PT",
                                    "RO",
                                    "SK",
                                    "SI",
                                    "ES",
                                    "SE",
                                    "GB",
                                    "MQ",
                                    "YT",
                                    "GP",
                                    "GF",
                                    "RE",
                                    "MF",
                                    "GI",
                                    "GG",
                                    "IM",
                                    "JE",
                                    "MC",
                                    "CH",
                                    "AD",
                                    "SM",
                                    "VA",
                                    "AX",
                                    "PM",
                                    "BL",
                                    "AF",
                                    "AL",
                                    "DZ",
                                    "AS",
                                    "AO",
                                    "AI",
                                    "AQ",
                                    "AG",
                                    "AR",
                                    "AM",
                                    "AW",
                                    "AU",
                                    "AZ",
                                    "BS",
                                    "BH",
                                    "BD",
                                    "BB",
                                    "BY",
                                    "BZ",
                                    "BJ",
                                    "BM",
                                    "BT",
                                    "BO",
                                    "BQ",
                                    "BA",
                                    "BW",
                                    "BV",
                                    "BR",
                                    "IO",
                                    "VG",
                                    "BN",
                                    "BF",
                                    "BI",
                                    "KH",
                                    "CM",
                                    "CA",
                                    "CV",
                                    "KY",
                                    "CF",
                                    "TD",
                                    "CL",
                                    "CN",
                                    "CX",
                                    "CC",
                                    "CO",
                                    "KM",
                                    "CK",
                                    "CR",
                                    "CU",
                                    "CW",
                                    "CD",
                                    "DJ",
                                    "DM",
                                    "DO",
                                    "TL",
                                    "EC",
                                    "EG",
                                    "SV",
                                    "GQ",
                                    "ER",
                                    "SZ",
                                    "ET",
                                    "FK",
                                    "FO",
                                    "FJ",
                                    "PF",
                                    "TF",
                                    "GA",
                                    "GM",
                                    "GE",
                                    "GH",
                                    "GL",
                                    "GD",
                                    "GU",
                                    "GT",
                                    "GN",
                                    "GW",
                                    "GY",
                                    "HT",
                                    "HM",
                                    "HN",
                                    "HK",
                                    "IN",
                                    "ID",
                                    "IR",
                                    "IQ",
                                    "IL",
                                    "CI",
                                    "JM",
                                    "JP",
                                    "JO",
                                    "KZ",
                                    "KE",
                                    "KI",
                                    "XK",
                                    "KW",
                                    "KG",
                                    "LA",
                                    "LB",
                                    "LS",
                                    "LR",
                                    "LY",
                                    "MO",
                                    "MG",
                                    "MW",
                                    "MY",
                                    "MV",
                                    "ML",
                                    "MH",
                                    "MR",
                                    "MU",
                                    "MX",
                                    "FM",
                                    "MD",
                                    "MN",
                                    "ME",
                                    "MS",
                                    "MA",
                                    "MZ",
                                    "MM",
                                    "NA",
                                    "NR",
                                    "NP",
                                    "AN",
                                    "NC",
                                    "NZ",
                                    "NI",
                                    "NE",
                                    "NG",
                                    "NU",
                                    "NF",
                                    "KP",
                                    "MK",
                                    "MP",
                                    "OM",
                                    "PK",
                                    "PW",
                                    "PS",
                                    "PA",
                                    "PG",
                                    "PY",
                                    "PE",
                                    "PH",
                                    "PN",
                                    "PR",
                                    "QA",
                                    "CG",
                                    "RU",
                                    "RW",
                                    "SH",
                                    "KN",
                                    "LC",
                                    "VC",
                                    "WS",
                                    "ST",
                                    "SA",
                                    "SN",
                                    "RS",
                                    "SC",
                                    "SL",
                                    "SG",
                                    "SX",
                                    "SB",
                                    "SO",
                                    "ZA",
                                    "KR",
                                    "GS",
                                    "SS",
                                    "LK",
                                    "SD",
                                    "SR",
                                    "SY",
                                    "SJ",
                                    "TW",
                                    "TJ",
                                    "TZ",
                                    "TH",
                                    "TG",
                                    "TK",
                                    "TO",
                                    "TT",
                                    "TN",
                                    "TR",
                                    "TM",
                                    "TC",
                                    "TV",
                                    "UG",
                                    "UA",
                                    "AE",
                                    "UM",
                                    "US",
                                    "UY",
                                    "UZ",
                                    "VU",
                                    "VE",
                                    "VN",
                                    "VI",
                                    "WF",
                                    "EH",
                                    "YE",
                                    "ZM",
                                    "ZW"
                                  ]
                                }
                              },
                              "description": "Further details required, depending on the destination's country"
                            }
                          },
                          "description": "Destination of the Payment"
                        },
                        "currency": {
                          "type": "string",
                          "description": "Currency of the account in ISO 4217 format. Default is GBP",
                          "enum": [
                            "GBP",
                            "EUR",
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BOV",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHE",
                            "CHF",
                            "CHW",
                            "CLF",
                            "CLP",
                            "CNY",
                            "COP",
                            "COU",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "FJD",
                            "FKP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MXV",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SLE",
                            "SLL",
                            "SOS",
                            "SRD",
                            "SSP",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "SHP",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "USN",
                            "UYI",
                            "UYU",
                            "UYW",
                            "UZS",
                            "VES",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XAG",
                            "XAU",
                            "XBA",
                            "XBB",
                            "XBC",
                            "XBD",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPD",
                            "XPF",
                            "XPT",
                            "XSU",
                            "XTS",
                            "XUA",
                            "XXX",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWL"
                          ]
                        },
                        "amount": {
                          "maximum": 2147483647,
                          "minimum": 0.01,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
                          "example": 100
                        },
                        "reference": {
                          "type": "string",
                          "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters that are not all the same (up to 140 characters for currencies other than GBP). Can contain alphanumeric, '-', '.', '&', '/' and space.",
                          "example": "Salary"
                        },
                        "externalReference": {
                          "maxLength": 50,
                          "minLength": 0,
                          "pattern": "[\\w-\\s]*",
                          "type": "string",
                          "description": "Your reference for this payment",
                          "example": "aReference_00001"
                        },
                        "endToEndReference": {
                          "type": "string",
                          "description": "Optional end to end reference. For international payments, Modulr payment ID will be used as end-to-end reference.",
                          "example": "aReference_00001"
                        },
                        "regulatoryReporting": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Regulatory Reporting Type",
                              "example": "CRED",
                              "enum": [
                                "CRED",
                                "DEBT",
                                "BOTH"
                              ]
                            },
                            "regulatoryAuthority": {
                              "type": "object",
                              "properties": {
                                "authorityName": {
                                  "maxLength": 70,
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Authority name. Maximum of 70 characters.",
                                  "example": "Financial Conduct Authority"
                                },
                                "authorityCountry": {
                                  "type": "string",
                                  "description": "ISO 3166 country code of the ultimate payers address",
                                  "example": "GB",
                                  "enum": [
                                    "AT",
                                    "BE",
                                    "BG",
                                    "CY",
                                    "CZ",
                                    "DK",
                                    "EE",
                                    "FI",
                                    "FR",
                                    "DE",
                                    "GR",
                                    "HR",
                                    "HU",
                                    "IS",
                                    "IE",
                                    "IT",
                                    "LV",
                                    "LI",
                                    "LT",
                                    "LU",
                                    "MT",
                                    "NL",
                                    "NO",
                                    "PL",
                                    "PT",
                                    "RO",
                                    "SK",
                                    "SI",
                                    "ES",
                                    "SE",
                                    "GB",
                                    "MQ",
                                    "YT",
                                    "GP",
                                    "GF",
                                    "RE",
                                    "MF",
                                    "GI",
                                    "GG",
                                    "IM",
                                    "JE",
                                    "MC",
                                    "CH",
                                    "AD",
                                    "SM",
                                    "VA",
                                    "AX",
                                    "PM",
                                    "BL",
                                    "AF",
                                    "AL",
                                    "DZ",
                                    "AS",
                                    "AO",
                                    "AI",
                                    "AQ",
                                    "AG",
                                    "AR",
                                    "AM",
                                    "AW",
                                    "AU",
                                    "AZ",
                                    "BS",
                                    "BH",
                                    "BD",
                                    "BB",
                                    "BY",
                                    "BZ",
                                    "BJ",
                                    "BM",
                                    "BT",
                                    "BO",
                                    "BQ",
                                    "BA",
                                    "BW",
                                    "BV",
                                    "BR",
                                    "IO",
                                    "VG",
                                    "BN",
                                    "BF",
                                    "BI",
                                    "KH",
                                    "CM",
                                    "CA",
                                    "CV",
                                    "KY",
                                    "CF",
                                    "TD",
                                    "CL",
                                    "CN",
                                    "CX",
                                    "CC",
                                    "CO",
                                    "KM",
                                    "CK",
                                    "CR",
                                    "CU",
                                    "CW",
                                    "CD",
                                    "DJ",
                                    "DM",
                                    "DO",
                                    "TL",
                                    "EC",
                                    "EG",
                                    "SV",
                                    "GQ",
                                    "ER",
                                    "SZ",
                                    "ET",
                                    "FK",
                                    "FO",
                                    "FJ",
                                    "PF",
                                    "TF",
                                    "GA",
                                    "GM",
                                    "GE",
                                    "GH",
                                    "GL",
                                    "GD",
                                    "GU",
                                    "GT",
                                    "GN",
                                    "GW",
                                    "GY",
                                    "HT",
                                    "HM",
                                    "HN",
                                    "HK",
                                    "IN",
                                    "ID",
                                    "IR",
                                    "IQ",
                                    "IL",
                                    "CI",
                                    "JM",
                                    "JP",
                                    "JO",
                                    "KZ",
                                    "KE",
                                    "KI",
                                    "XK",
                                    "KW",
                                    "KG",
                                    "LA",
                                    "LB",
                                    "LS",
                                    "LR",
                                    "LY",
                                    "MO",
                                    "MG",
                                    "MW",
                                    "MY",
                                    "MV",
                                    "ML",
                                    "MH",
                                    "MR",
                                    "MU",
                                    "MX",
                                    "FM",
                                    "MD",
                                    "MN",
                                    "ME",
                                    "MS",
                                    "MA",
                                    "MZ",
                                    "MM",
                                    "NA",
                                    "NR",
                                    "NP",
                                    "AN",
                                    "NC",
                                    "NZ",
                                    "NI",
                                    "NE",
                                    "NG",
                                    "NU",
                                    "NF",
                                    "KP",
                                    "MK",
                                    "MP",
                                    "OM",
                                    "PK",
                                    "PW",
                                    "PS",
                                    "PA",
                                    "PG",
                                    "PY",
                                    "PE",
                                    "PH",
                                    "PN",
                                    "PR",
                                    "QA",
                                    "CG",
                                    "RU",
                                    "RW",
                                    "SH",
                                    "KN",
                                    "LC",
                                    "VC",
                                    "WS",
                                    "ST",
                                    "SA",
                                    "SN",
                                    "RS",
                                    "SC",
                                    "SL",
                                    "SG",
                                    "SX",
                                    "SB",
                                    "SO",
                                    "ZA",
                                    "KR",
                                    "GS",
                                    "SS",
                                    "LK",
                                    "SD",
                                    "SR",
                                    "SY",
                                    "SJ",
                                    "TW",
                                    "TJ",
                                    "TZ",
                                    "TH",
                                    "TG",
                                    "TK",
                                    "TO",
                                    "TT",
                                    "TN",
                                    "TR",
                                    "TM",
                                    "TC",
                                    "TV",
                                    "UG",
                                    "UA",
                                    "AE",
                                    "UM",
                                    "US",
                                    "UY",
                                    "UZ",
                                    "VU",
                                    "VE",
                                    "VN",
                                    "VI",
                                    "WF",
                                    "EH",
                                    "YE",
                                    "ZM",
                                    "ZW"
                                  ]
                                }
                              },
                              "description": "Regulatory authority"
                            },
                            "structuredRegulatoryReporting": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "maxLength": 3,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "amount": {
                                  "maximum": 2147483647,
                                  "minimum": 0.01,
                                  "exclusiveMinimum": false,
                                  "type": "number",
                                  "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
                                  "example": 100
                                },
                                "currencyCode": {
                                  "type": "string",
                                  "description": "Currency of the account in ISO 4217 format. Default is GBP",
                                  "enum": [
                                    "GBP",
                                    "EUR",
                                    "AED",
                                    "AFN",
                                    "ALL",
                                    "AMD",
                                    "ANG",
                                    "AOA",
                                    "ARS",
                                    "AUD",
                                    "AWG",
                                    "AZN",
                                    "BAM",
                                    "BBD",
                                    "BDT",
                                    "BGN",
                                    "BHD",
                                    "BIF",
                                    "BMD",
                                    "BND",
                                    "BOB",
                                    "BOV",
                                    "BRL",
                                    "BSD",
                                    "BTN",
                                    "BWP",
                                    "BYN",
                                    "BZD",
                                    "CAD",
                                    "CDF",
                                    "CHE",
                                    "CHF",
                                    "CHW",
                                    "CLF",
                                    "CLP",
                                    "CNY",
                                    "COP",
                                    "COU",
                                    "CRC",
                                    "CUC",
                                    "CUP",
                                    "CVE",
                                    "CZK",
                                    "DJF",
                                    "DKK",
                                    "DOP",
                                    "DZD",
                                    "EGP",
                                    "ERN",
                                    "ETB",
                                    "FJD",
                                    "FKP",
                                    "GEL",
                                    "GHS",
                                    "GIP",
                                    "GMD",
                                    "GNF",
                                    "GTQ",
                                    "GYD",
                                    "HKD",
                                    "HNL",
                                    "HRK",
                                    "HTG",
                                    "HUF",
                                    "IDR",
                                    "ILS",
                                    "INR",
                                    "IQD",
                                    "IRR",
                                    "ISK",
                                    "JMD",
                                    "JOD",
                                    "JPY",
                                    "KES",
                                    "KGS",
                                    "KHR",
                                    "KMF",
                                    "KPW",
                                    "KRW",
                                    "KWD",
                                    "KYD",
                                    "KZT",
                                    "LAK",
                                    "LBP",
                                    "LKR",
                                    "LRD",
                                    "LSL",
                                    "LYD",
                                    "MAD",
                                    "MDL",
                                    "MGA",
                                    "MKD",
                                    "MMK",
                                    "MNT",
                                    "MOP",
                                    "MRU",
                                    "MUR",
                                    "MVR",
                                    "MWK",
                                    "MXN",
                                    "MXV",
                                    "MYR",
                                    "MZN",
                                    "NAD",
                                    "NGN",
                                    "NIO",
                                    "NOK",
                                    "NPR",
                                    "NZD",
                                    "OMR",
                                    "PAB",
                                    "PEN",
                                    "PGK",
                                    "PHP",
                                    "PKR",
                                    "PLN",
                                    "PYG",
                                    "QAR",
                                    "RON",
                                    "RSD",
                                    "RUB",
                                    "RWF",
                                    "SAR",
                                    "SBD",
                                    "SCR",
                                    "SDG",
                                    "SEK",
                                    "SGD",
                                    "SLE",
                                    "SLL",
                                    "SOS",
                                    "SRD",
                                    "SSP",
                                    "STN",
                                    "SVC",
                                    "SYP",
                                    "SZL",
                                    "SHP",
                                    "THB",
                                    "TJS",
                                    "TMT",
                                    "TND",
                                    "TOP",
                                    "TRY",
                                    "TTD",
                                    "TWD",
                                    "TZS",
                                    "UAH",
                                    "UGX",
                                    "USD",
                                    "USN",
                                    "UYI",
                                    "UYU",
                                    "UYW",
                                    "UZS",
                                    "VES",
                                    "VND",
                                    "VUV",
                                    "WST",
                                    "XAF",
                                    "XAG",
                                    "XAU",
                                    "XBA",
                                    "XBB",
                                    "XBC",
                                    "XBD",
                                    "XCD",
                                    "XDR",
                                    "XOF",
                                    "XPD",
                                    "XPF",
                                    "XPT",
                                    "XSU",
                                    "XTS",
                                    "XUA",
                                    "XXX",
                                    "YER",
                                    "ZAR",
                                    "ZMW",
                                    "ZWL"
                                  ]
                                },
                                "information": {
                                  "maxLength": 35,
                                  "minLength": 0,
                                  "type": "string"
                                }
                              },
                              "description": "Structured regulatory reporting"
                            }
                          },
                          "description": "Regulatory reporting"
                        },
                        "paymentDate": {
                          "type": "string",
                          "description": "The future date on which to make the payment. Date format 'yyyy-MM-dd'.\n\nNot applicable for international payments which will be submitted on date of submission or next working day, in line with cut-offs.",
                          "example": "2017-01-28"
                        },
                        "overseasPaymentDetail": {
                          "type": "object",
                          "properties": {
                            "ultimatePayer": {
                              "required": [
                                "address",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "name": {
                                  "maxLength": 70,
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Name of the ultimate payer"
                                },
                                "address": {
                                  "required": [
                                    "country"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "addressLine1": {
                                      "maxLength": 70,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "First line of the ultimate payers address",
                                      "example": "2nd Floor"
                                    },
                                    "addressLine2": {
                                      "maxLength": 70,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Second line of the ultimate payers address",
                                      "example": "123 High Street"
                                    },
                                    "postTown": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Postal town of the ultimate payers address",
                                      "example": "Edinburgh"
                                    },
                                    "postCode": {
                                      "maxLength": 16,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Post code of the ultimate payers address",
                                      "example": "AB12 3XX"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "ISO 3166 country code of the ultimate payers address",
                                      "example": "GB"
                                    }
                                  }
                                },
                                "birthDetails": {
                                  "type": "object",
                                  "properties": {
                                    "dateOfBirth": {
                                      "pattern": "^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$",
                                      "type": "string",
                                      "description": "Date of birth in ISO 8601 format of the ultimate payer",
                                      "example": "1978-01-01"
                                    },
                                    "cityOfBirth": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "City of birth of the ultimate payer",
                                      "example": "Edinburgh"
                                    },
                                    "countryOfBirth": {
                                      "type": "string",
                                      "description": "ISO 3166 country code of the ultimate payers country of birth",
                                      "example": "GB"
                                    }
                                  },
                                  "description": "Birth details of a person. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                                },
                                "officialIdentification": {
                                  "type": "object",
                                  "properties": {
                                    "drivingLicenceNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Driving licence number",
                                      "example": "JONES849339TS8AD"
                                    },
                                    "customerNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Customer number",
                                      "example": "23547326547632"
                                    },
                                    "socialSecurityNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Social security number or equivalent",
                                      "example": "1110000000022AB"
                                    },
                                    "passportNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Passport number",
                                      "example": "123456789"
                                    },
                                    "idCardNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "National ID card number",
                                      "example": "123456789"
                                    },
                                    "otherIdNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Other ID number",
                                      "example": "123456789"
                                    }
                                  },
                                  "description": "Official identification for a person. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                                },
                                "officialIdDetailOrgs": {
                                  "type": "object",
                                  "properties": {
                                    "bankPartyIdentification": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Bank party identification",
                                      "example": "12345"
                                    },
                                    "centralBankIdNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Central bank identification number",
                                      "example": "678910"
                                    },
                                    "clearingIdNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Clearing identification Number",
                                      "example": "xx15402"
                                    },
                                    "certificateOfIncorporationNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Certification of the incorporation number",
                                      "example": "1100010"
                                    },
                                    "countryIdCode": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Country identification code",
                                      "example": "111111"
                                    },
                                    "customerNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Customer number",
                                      "example": "00221133"
                                    },
                                    "dataUniversalNumberingSystem": {
                                      "pattern": "^[0-9]{9,9}?$",
                                      "type": "string",
                                      "description": "Data universal numbering system",
                                      "example": "002211330"
                                    },
                                    "employerIdNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Employer identification number",
                                      "example": "00221133"
                                    },
                                    "gs1glnIdentifier": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "GS1GLN identifier",
                                      "example": "00221133"
                                    },
                                    "sirenCode": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "SIREN code",
                                      "example": "00221133"
                                    },
                                    "siretCode": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "SIRET code",
                                      "example": "00221133"
                                    },
                                    "taxIdNumber": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Tax identification number",
                                      "example": "00221133"
                                    },
                                    "bicIdentifier": {
                                      "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                                      "type": "string",
                                      "description": "BICI identification",
                                      "example": "MGALODJAO7A"
                                    },
                                    "ibeiIdentifier": {
                                      "pattern": "^[A-Z]{2,2}[B-DF-HJ-NP-TV-XZ0-9]{7,7}[0-9]{1,1}?$",
                                      "type": "string",
                                      "description": "IBEI identification",
                                      "example": "HIZFTMTT59"
                                    },
                                    "beiIdentifier": {
                                      "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                                      "type": "string",
                                      "description": "BEI identification",
                                      "example": "MHIHISVZUMH"
                                    },
                                    "eanglnIdentifier": {
                                      "pattern": "^[0-9]{13,13}?$",
                                      "type": "string",
                                      "description": "EANGLN identification",
                                      "example": "7516164953429"
                                    },
                                    "chipsUniversalIdentifier": {
                                      "pattern": "^CH[0-9]{6,6}?$",
                                      "type": "string",
                                      "description": "CHIPS universal identification",
                                      "example": "CH157373"
                                    },
                                    "genericIdentification3": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Generic identification 3",
                                      "example": "123456788"
                                    },
                                    "genericIdentificationIssr": {
                                      "maxLength": 35,
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Generic identification issr",
                                      "example": "13143225"
                                    }
                                  },
                                  "description": "Organisation's official identification. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                                },
                                "overseasAccountIdentifier": {
                                  "type": "object",
                                  "properties": {
                                    "iban": {
                                      "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}$",
                                      "type": "string",
                                      "description": "International Bank Account Number (IBAN)",
                                      "example": "GB20MODR00000000000001"
                                    },
                                    "bban": {
                                      "pattern": "^[a-zA-Z0-9]{1,30}$",
                                      "type": "string",
                                      "description": "Basic Bank Account Number (BBAN)",
                                      "example": "NWBK60161331926819"
                                    },
                                    "upic": {
                                      "pattern": "^\\d{8,17}$",
                                      "type": "string",
                                      "description": "Universal Payment Identification Code (UPIC)",
                                      "example": "987654321"
                                    },
                                    "otherAccountNumber": {
                                      "pattern": "^[a-zA-Z0-9]{1,34}$",
                                      "type": "string",
                                      "description": "Other Account ID",
                                      "example": "987654321"
                                    }
                                  }
                                },
                                "bic": {
                                  "pattern": "^[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?$",
                                  "type": "string",
                                  "description": "Destination beneficiary's BIC/Swift Code.",
                                  "example": "MODRDEFF123"
                                }
                              }
                            },
                            "originalPaymentDetails": {
                              "required": [
                                "amount",
                                "currency",
                                "exchangeRate"
                              ],
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "number",
                                  "description": "Amount of currency that the payment is in",
                                  "example": 1000.45
                                },
                                "exchangeRate": {
                                  "type": "number",
                                  "description": "Exchange rate",
                                  "example": 1.45
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "ISO 4217 currency code that the amount is in",
                                  "enum": [
                                    "GBP",
                                    "EUR",
                                    "AED",
                                    "AFN",
                                    "ALL",
                                    "AMD",
                                    "ANG",
                                    "AOA",
                                    "ARS",
                                    "AUD",
                                    "AWG",
                                    "AZN",
                                    "BAM",
                                    "BBD",
                                    "BDT",
                                    "BGN",
                                    "BHD",
                                    "BIF",
                                    "BMD",
                                    "BND",
                                    "BOB",
                                    "BOV",
                                    "BRL",
                                    "BSD",
                                    "BTN",
                                    "BWP",
                                    "BYN",
                                    "BZD",
                                    "CAD",
                                    "CDF",
                                    "CHE",
                                    "CHF",
                                    "CHW",
                                    "CLF",
                                    "CLP",
                                    "CNY",
                                    "COP",
                                    "COU",
                                    "CRC",
                                    "CUC",
                                    "CUP",
                                    "CVE",
                                    "CZK",
                                    "DJF",
                                    "DKK",
                                    "DOP",
                                    "DZD",
                                    "EGP",
                                    "ERN",
                                    "ETB",
                                    "FJD",
                                    "FKP",
                                    "GEL",
                                    "GHS",
                                    "GIP",
                                    "GMD",
                                    "GNF",
                                    "GTQ",
                                    "GYD",
                                    "HKD",
                                    "HNL",
                                    "HRK",
                                    "HTG",
                                    "HUF",
                                    "IDR",
                                    "ILS",
                                    "INR",
                                    "IQD",
                                    "IRR",
                                    "ISK",
                                    "JMD",
                                    "JOD",
                                    "JPY",
                                    "KES",
                                    "KGS",
                                    "KHR",
                                    "KMF",
                                    "KPW",
                                    "KRW",
                                    "KWD",
                                    "KYD",
                                    "KZT",
                                    "LAK",
                                    "LBP",
                                    "LKR",
                                    "LRD",
                                    "LSL",
                                    "LYD",
                                    "MAD",
                                    "MDL",
                                    "MGA",
                                    "MKD",
                                    "MMK",
                                    "MNT",
                                    "MOP",
                                    "MRU",
                                    "MUR",
                                    "MVR",
                                    "MWK",
                                    "MXN",
                                    "MXV",
                                    "MYR",
                                    "MZN",
                                    "NAD",
                                    "NGN",
                                    "NIO",
                                    "NOK",
                                    "NPR",
                                    "NZD",
                                    "OMR",
                                    "PAB",
                                    "PEN",
                                    "PGK",
                                    "PHP",
                                    "PKR",
                                    "PLN",
                                    "PYG",
                                    "QAR",
                                    "RON",
                                    "RSD",
                                    "RUB",
                                    "RWF",
                                    "SAR",
                                    "SBD",
                                    "SCR",
                                    "SDG",
                                    "SEK",
                                    "SGD",
                                    "SLE",
                                    "SLL",
                                    "SOS",
                                    "SRD",
                                    "SSP",
                                    "STN",
                                    "SVC",
                                    "SYP",
                                    "SZL",
                                    "SHP",
                                    "THB",
                                    "TJS",
                                    "TMT",
                                    "TND",
                                    "TOP",
                                    "TRY",
                                    "TTD",
                                    "TWD",
                                    "TZS",
                                    "UAH",
                                    "UGX",
                                    "USD",
                                    "USN",
                                    "UYI",
                                    "UYU",
                                    "UYW",
                                    "UZS",
                                    "VES",
                                    "VND",
                                    "VUV",
                                    "WST",
                                    "XAF",
                                    "XAG",
                                    "XAU",
                                    "XBA",
                                    "XBB",
                                    "XBC",
                                    "XBD",
                                    "XCD",
                                    "XDR",
                                    "XOF",
                                    "XPD",
                                    "XPF",
                                    "XPT",
                                    "XSU",
                                    "XTS",
                                    "XUA",
                                    "XXX",
                                    "YER",
                                    "ZAR",
                                    "ZMW",
                                    "ZWL"
                                  ]
                                }
                              }
                            },
                            "chargeDetails": {
                              "required": [
                                "amount",
                                "bearer",
                                "currency"
                              ],
                              "type": "object",
                              "properties": {
                                "bearer": {
                                  "type": "string",
                                  "description": "Information about bearer of the charges. Its can be Creditor, Debtor or shared between both",
                                  "example": "CRED",
                                  "enum": [
                                    "CRED",
                                    "DEBT",
                                    "SHAR"
                                  ]
                                },
                                "amount": {
                                  "type": "number",
                                  "description": "Amount of the charges. Max allowed is 999999999999.99",
                                  "example": 100
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "Currency of charge. Should be ISO Standard currency",
                                  "example": "GBP",
                                  "enum": [
                                    "GBP",
                                    "EUR",
                                    "AED",
                                    "AFN",
                                    "ALL",
                                    "AMD",
                                    "ANG",
                                    "AOA",
                                    "ARS",
                                    "AUD",
                                    "AWG",
                                    "AZN",
                                    "BAM",
                                    "BBD",
                                    "BDT",
                                    "BGN",
                                    "BHD",
                                    "BIF",
                                    "BMD",
                                    "BND",
                                    "BOB",
                                    "BOV",
                                    "BRL",
                                    "BSD",
                                    "BTN",
                                    "BWP",
                                    "BYN",
                                    "BZD",
                                    "CAD",
                                    "CDF",
                                    "CHE",
                                    "CHF",
                                    "CHW",
                                    "CLF",
                                    "CLP",
                                    "CNY",
                                    "COP",
                                    "COU",
                                    "CRC",
                                    "CUC",
                                    "CUP",
                                    "CVE",
                                    "CZK",
                                    "DJF",
                                    "DKK",
                                    "DOP",
                                    "DZD",
                                    "EGP",
                                    "ERN",
                                    "ETB",
                                    "FJD",
                                    "FKP",
                                    "GEL",
                                    "GHS",
                                    "GIP",
                                    "GMD",
                                    "GNF",
                                    "GTQ",
                                    "GYD",
                                    "HKD",
                                    "HNL",
                                    "HRK",
                                    "HTG",
                                    "HUF",
                                    "IDR",
                                    "ILS",
                                    "INR",
                                    "IQD",
                                    "IRR",
                                    "ISK",
                                    "JMD",
                                    "JOD",
                                    "JPY",
                                    "KES",
                                    "KGS",
                                    "KHR",
                                    "KMF",
                                    "KPW",
                                    "KRW",
                                    "KWD",
                                    "KYD",
                                    "KZT",
                                    "LAK",
                                    "LBP",
                                    "LKR",
                                    "LRD",
                                    "LSL",
                                    "LYD",
                                    "MAD",
                                    "MDL",
                                    "MGA",
                                    "MKD",
                                    "MMK",
                                    "MNT",
                                    "MOP",
                                    "MRU",
                                    "MUR",
                                    "MVR",
                                    "MWK",
                                    "MXN",
                                    "MXV",
                                    "MYR",
                                    "MZN",
                                    "NAD",
                                    "NGN",
                                    "NIO",
                                    "NOK",
                                    "NPR",
                                    "NZD",
                                    "OMR",
                                    "PAB",
                                    "PEN",
                                    "PGK",
                                    "PHP",
                                    "PKR",
                                    "PLN",
                                    "PYG",
                                    "QAR",
                                    "RON",
                                    "RSD",
                                    "RUB",
                                    "RWF",
                                    "SAR",
                                    "SBD",
                                    "SCR",
                                    "SDG",
                                    "SEK",
                                    "SGD",
                                    "SLE",
                                    "SLL",
                                    "SOS",
                                    "SRD",
                                    "SSP",
                                    "STN",
                                    "SVC",
                                    "SYP",
                                    "SZL",
                                    "SHP",
                                    "THB",
                                    "TJS",
                                    "TMT",
                                    "TND",
                                    "TOP",
                                    "TRY",
                                    "TTD",
                                    "TWD",
                                    "TZS",
                                    "UAH",
                                    "UGX",
                                    "USD",
                                    "USN",
                                    "UYI",
                                    "UYU",
                                    "UYW",
                                    "UZS",
                                    "VES",
                                    "VND",
                                    "VUV",
                                    "WST",
                                    "XAF",
                                    "XAG",
                                    "XAU",
                                    "XBA",
                                    "XBB",
                                    "XBC",
                                    "XBD",
                                    "XCD",
                                    "XDR",
                                    "XOF",
                                    "XPD",
                                    "XPF",
                                    "XPT",
                                    "XSU",
                                    "XTS",
                                    "XUA",
                                    "XXX",
                                    "YER",
                                    "ZAR",
                                    "ZMW",
                                    "ZWL"
                                  ]
                                }
                              }
                            },
                            "additionalRemittanceInformation": {
                              "maxLength": 140,
                              "minLength": 0,
                              "type": "string"
                            }
                          },
                          "description": "Details relating to payment originated overseas.\n\nNot applicable for international payments - all international transactions must originate from the Modulr account creating the payment request."
                        },
                        "fxQuoteId": {
                          "type": "string",
                          "description": "FX quote ID related to this payment. If supplied, neither 'amount' nor 'currency' should be supplied.",
                          "example": "Q0000001",
                          "deprecated": true
                        },
                        "destinationId": {
                          "type": "string",
                          "writeOnly": true
                        },
                        "destinationType": {
                          "type": "string",
                          "writeOnly": true,
                          "enum": [
                            "BENEFICIARY",
                            "ACCOUNT",
                            "IBAN",
                            "SCAN",
                            "INTL",
                            "ANBRN",
                            "AN"
                          ]
                        }
                      },
                      "description": "Details of Payment request"
                    }
                  }
                },
                "description": "Details of Batch request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "BatchPaymentReference",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for the Batch Payment. 10 characters long",
                      "example": "D920000001"
                    },
                    "externalReference": {
                      "type": "string",
                      "description": "External reference, if provided",
                      "example": "aReference_00001"
                    },
                    "status": {
                      "type": "string",
                      "description": "Current status of batch.",
                      "example": "ACCEPTED",
                      "enum": [
                        "ACCEPTED",
                        "REJECTED",
                        "SUBMITTED",
                        "CANCELLED"
                      ]
                    },
                    "totalPayments": {
                      "type": "integer",
                      "description": "Total count of payments in this batch",
                      "format": "int32",
                      "example": 9123
                    },
                    "currentUserCanApprove": {
                      "type": "boolean",
                      "description": "Whether the user is allowed to approve this batch, based on their approval limits, and applicable configuration",
                      "example": true
                    },
                    "paymentDetails": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "totalPaymentCount": {
                            "type": "integer",
                            "description": "Total count of payments",
                            "format": "int32",
                            "example": 10
                          },
                          "totalAmount": {
                            "type": "number",
                            "description": "Sum total of payment amounts",
                            "example": 100
                          },
                          "pendingApprovalCount": {
                            "type": "integer",
                            "description": "Count of payments currently pending approval",
                            "format": "int32",
                            "example": 5
                          },
                          "pendingApprovalAmount": {
                            "type": "number",
                            "description": "Sum total of payment amounts currently pending approval",
                            "example": 50
                          }
                        },
                        "description": "Summary of payments and approvals"
                      },
                      "description": "Summary of payments and approvals, per currency (as a 3-alpha currency code)"
                    },
                    "approvals": {
                      "type": "array",
                      "description": "List of batch-level approvals",
                      "items": {
                        "type": "object",
                        "properties": {
                          "approvedBy": {
                            "type": "string",
                            "description": "ID of user who approved this batch payment request",
                            "example": "U2100021"
                          },
                          "approvedOn": {
                            "type": "string",
                            "description": "Date this approval was applied",
                            "format": "date",
                            "example": "2022-06-25"
                          }
                        },
                        "description": "A single approval against a batch payment request"
                      }
                    },
                    "currentUserCanCancel": {
                      "type": "boolean",
                      "description": "Whether the user is allowed and currently able to cancel at least one of the payments in this batch"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when the batch payment was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "processingDateFrom": {
                      "type": "string",
                      "description": "Earliest processing date in the batch file or the batch creation date if the file does not have any dates. Date format 'yyyy-MM-dd'",
                      "format": "date",
                      "example": "2017-01-28"
                    },
                    "processingDateTo": {
                      "type": "string",
                      "description": "Last processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
                      "format": "date",
                      "example": "2017-01-28"
                    },
                    "earliestScheduledPaymentDate": {
                      "type": "string",
                      "description": "Earliest processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
                      "format": "date",
                      "example": "2017-01-28"
                    },
                    "requiredApprovalCount": {
                      "type": "integer",
                      "description": "The number of required approvals for the batch.  Applicable to batch payments of submissionType BATCH",
                      "format": "int32"
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total count of payment requests in this batch",
                          "format": "int32"
                        },
                        "invalid": {
                          "type": "integer",
                          "description": "Count of invalid payment requests",
                          "format": "int32"
                        },
                        "inprogress": {
                          "type": "integer",
                          "description": "Count of payment requests in progress",
                          "format": "int32"
                        },
                        "completed": {
                          "type": "integer",
                          "description": "Count of completed payments",
                          "format": "int32"
                        },
                        "errors": {
                          "type": "integer",
                          "description": "Count of failed payment requests",
                          "format": "int32"
                        },
                        "info": {
                          "type": "string",
                          "description": "Additional information or error message regarding this batch payment request"
                        },
                        "strict": {
                          "type": "boolean"
                        }
                      },
                      "description": "Summary of the state of payment requests in this batch"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/batchpayments/{batchPaymentId}/cancel": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Cancel the batch payment",
        "description": "Cancels a batch payment request if it is not already processed",
        "operationId": "cancelBatchPayments",
        "parameters": [
          {
            "name": "batchPaymentId",
            "in": "path",
            "description": "Batch payment request id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/rules/{ruleId}": {
      "put": {
        "tags": [
          "Rules"
        ],
        "summary": "Edit a specific Rule",
        "description": "The ability to modify the details of a specific rule based on the rule's unique reference.",
        "operationId": "modifyRule",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Id of Rule to be edited",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountId",
                  "data",
                  "name",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of Rule. Can be one of the following {SWEEP, SPLIT, FUNDING}",
                    "enum": [
                      "SPLIT",
                      "SWEEP",
                      "FUNDING"
                    ]
                  },
                  "name": {
                    "maxLength": 25,
                    "minLength": 0,
                    "type": "string",
                    "description": "Rule's name",
                    "example": "My new rule"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "The Account which the Rule is created on.",
                    "example": "A1000001"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "daysToRun": {
                        "type": "array",
                        "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                        "items": {
                          "type": "string",
                          "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                          "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                          ]
                        }
                      },
                      "frequency": {
                        "type": "string",
                        "description": "Frequency of the rule. Sweep Rule Only",
                        "enum": [
                          "Daily"
                        ]
                      },
                      "destinationId": {
                        "type": "string",
                        "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
                      },
                      "balanceToLeave": {
                        "type": "number",
                        "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
                      },
                      "triggerBalance": {
                        "type": "number",
                        "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
                      },
                      "splits": {
                        "type": "array",
                        "items": {
                          "required": [
                            "destinationId",
                            "percent"
                          ],
                          "type": "object",
                          "properties": {
                            "destinationId": {
                              "type": "string",
                              "description": "Id of destination beneficiary. e.g. B1000001."
                            },
                            "percent": {
                              "type": "string",
                              "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                            }
                          },
                          "description": "Configuration for a Split Rule"
                        }
                      },
                      "conditionalSplits": {
                        "type": "array",
                        "items": {
                          "required": [
                            "destinationId",
                            "percent"
                          ],
                          "type": "object",
                          "properties": {
                            "destinationId": {
                              "type": "string",
                              "description": "Id of destination beneficiary. e.g. B1000001."
                            },
                            "percent": {
                              "type": "string",
                              "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                            }
                          },
                          "description": "Configuration for a Split Rule"
                        }
                      },
                      "conditionalSplitConfig": {
                        "required": [
                          "conditionAmount",
                          "destinationId",
                          "percent"
                        ],
                        "type": "object",
                        "properties": {
                          "destinationId": {
                            "type": "string",
                            "description": "Id of destination beneficiary. e.g. B1000001."
                          },
                          "percent": {
                            "type": "string",
                            "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                          },
                          "conditionAmount": {
                            "maximum": 2147483647,
                            "minimum": 0.01,
                            "exclusiveMinimum": false,
                            "type": "number",
                            "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
                          },
                          "conditionDone": {
                            "type": "boolean",
                            "description": "Whether the condition amount has been met. e.g. true or false"
                          }
                        },
                        "description": "Configuration for a Conditional Split Rule"
                      },
                      "sourceId": {
                        "type": "string",
                        "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
                      }
                    },
                    "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
                  }
                },
                "description": "create rule request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "accountCurrency",
                    "accountId",
                    "data",
                    "id",
                    "masterId",
                    "name",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for a Rule",
                      "example": "R1000001"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Rule. Can be one of the following {SWEEP, SPLIT, FUNDING}",
                      "enum": [
                        "SPLIT",
                        "SWEEP",
                        "FUNDING"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Rule's name",
                      "example": "My new rule"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "The Account which the Rule is created on.",
                      "example": "A1000001"
                    },
                    "accountCurrency": {
                      "type": "string",
                      "enum": [
                        "GBP",
                        "EUR",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHE",
                        "CHF",
                        "CHW",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "FJD",
                        "FKP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SLE",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "SHP",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "USN",
                        "UYI",
                        "UYU",
                        "UYW",
                        "UZS",
                        "VES",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XAG",
                        "XAU",
                        "XBA",
                        "XBB",
                        "XBC",
                        "XBD",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPD",
                        "XPF",
                        "XPT",
                        "XSU",
                        "XTS",
                        "XUA",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWL"
                      ]
                    },
                    "masterId": {
                      "type": "string",
                      "description": "The master rule ID. When a rule is changed, the original is marked as inactive, and a new one created. The master ID enables us to identify those rules which are updates",
                      "example": "M1000001"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "daysToRun": {
                          "type": "array",
                          "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                          "items": {
                            "type": "string",
                            "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "frequency": {
                          "type": "string",
                          "description": "Frequency of the rule. Sweep Rule Only",
                          "enum": [
                            "Daily"
                          ]
                        },
                        "destinationId": {
                          "type": "string",
                          "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
                        },
                        "balanceToLeave": {
                          "type": "number",
                          "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
                        },
                        "triggerBalance": {
                          "type": "number",
                          "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
                        },
                        "splits": {
                          "type": "array",
                          "items": {
                            "required": [
                              "destinationId",
                              "percent"
                            ],
                            "type": "object",
                            "properties": {
                              "destinationId": {
                                "type": "string",
                                "description": "Id of destination beneficiary. e.g. B1000001."
                              },
                              "percent": {
                                "type": "string",
                                "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                              }
                            },
                            "description": "Configuration for a Split Rule"
                          }
                        },
                        "conditionalSplits": {
                          "type": "array",
                          "items": {
                            "required": [
                              "destinationId",
                              "percent"
                            ],
                            "type": "object",
                            "properties": {
                              "destinationId": {
                                "type": "string",
                                "description": "Id of destination beneficiary. e.g. B1000001."
                              },
                              "percent": {
                                "type": "string",
                                "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                              }
                            },
                            "description": "Configuration for a Split Rule"
                          }
                        },
                        "conditionalSplitConfig": {
                          "required": [
                            "conditionAmount",
                            "destinationId",
                            "percent"
                          ],
                          "type": "object",
                          "properties": {
                            "destinationId": {
                              "type": "string",
                              "description": "Id of destination beneficiary. e.g. B1000001."
                            },
                            "percent": {
                              "type": "string",
                              "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                            },
                            "conditionAmount": {
                              "maximum": 2147483647,
                              "minimum": 0.01,
                              "exclusiveMinimum": false,
                              "type": "number",
                              "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
                            },
                            "conditionDone": {
                              "type": "boolean",
                              "description": "Whether the condition amount has been met. e.g. true or false"
                            }
                          },
                          "description": "Configuration for a Conditional Split Rule"
                        },
                        "sourceId": {
                          "type": "string",
                          "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
                        }
                      },
                      "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/rules": {
      "post": {
        "tags": [
          "Rules"
        ],
        "summary": "Create a Rule",
        "description": "When you want a new rule on an account you can create one with this endpoint. Note that Rules are linked to an Account and each Account can only have one instance of a Rule type",
        "operationId": "createRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountId",
                  "data",
                  "name",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of Rule. Can be one of the following {SWEEP, SPLIT, FUNDING}",
                    "enum": [
                      "SPLIT",
                      "SWEEP",
                      "FUNDING"
                    ]
                  },
                  "name": {
                    "maxLength": 25,
                    "minLength": 0,
                    "type": "string",
                    "description": "Rule's name",
                    "example": "My new rule"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "The Account which the Rule is created on.",
                    "example": "A1000001"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "daysToRun": {
                        "type": "array",
                        "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                        "items": {
                          "type": "string",
                          "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                          "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                          ]
                        }
                      },
                      "frequency": {
                        "type": "string",
                        "description": "Frequency of the rule. Sweep Rule Only",
                        "enum": [
                          "Daily"
                        ]
                      },
                      "destinationId": {
                        "type": "string",
                        "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
                      },
                      "balanceToLeave": {
                        "type": "number",
                        "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
                      },
                      "triggerBalance": {
                        "type": "number",
                        "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
                      },
                      "splits": {
                        "type": "array",
                        "items": {
                          "required": [
                            "destinationId",
                            "percent"
                          ],
                          "type": "object",
                          "properties": {
                            "destinationId": {
                              "type": "string",
                              "description": "Id of destination beneficiary. e.g. B1000001."
                            },
                            "percent": {
                              "type": "string",
                              "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                            }
                          },
                          "description": "Configuration for a Split Rule"
                        }
                      },
                      "conditionalSplits": {
                        "type": "array",
                        "items": {
                          "required": [
                            "destinationId",
                            "percent"
                          ],
                          "type": "object",
                          "properties": {
                            "destinationId": {
                              "type": "string",
                              "description": "Id of destination beneficiary. e.g. B1000001."
                            },
                            "percent": {
                              "type": "string",
                              "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                            }
                          },
                          "description": "Configuration for a Split Rule"
                        }
                      },
                      "conditionalSplitConfig": {
                        "required": [
                          "conditionAmount",
                          "destinationId",
                          "percent"
                        ],
                        "type": "object",
                        "properties": {
                          "destinationId": {
                            "type": "string",
                            "description": "Id of destination beneficiary. e.g. B1000001."
                          },
                          "percent": {
                            "type": "string",
                            "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                          },
                          "conditionAmount": {
                            "maximum": 2147483647,
                            "minimum": 0.01,
                            "exclusiveMinimum": false,
                            "type": "number",
                            "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
                          },
                          "conditionDone": {
                            "type": "boolean",
                            "description": "Whether the condition amount has been met. e.g. true or false"
                          }
                        },
                        "description": "Configuration for a Conditional Split Rule"
                      },
                      "sourceId": {
                        "type": "string",
                        "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
                      }
                    },
                    "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
                  }
                },
                "description": "create rule request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "accountCurrency",
                    "accountId",
                    "data",
                    "id",
                    "masterId",
                    "name",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for a Rule",
                      "example": "R1000001"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Rule. Can be one of the following {SWEEP, SPLIT, FUNDING}",
                      "enum": [
                        "SPLIT",
                        "SWEEP",
                        "FUNDING"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Rule's name",
                      "example": "My new rule"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "The Account which the Rule is created on.",
                      "example": "A1000001"
                    },
                    "accountCurrency": {
                      "type": "string",
                      "enum": [
                        "GBP",
                        "EUR",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHE",
                        "CHF",
                        "CHW",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "FJD",
                        "FKP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SLE",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "SHP",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "USN",
                        "UYI",
                        "UYU",
                        "UYW",
                        "UZS",
                        "VES",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XAG",
                        "XAU",
                        "XBA",
                        "XBB",
                        "XBC",
                        "XBD",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPD",
                        "XPF",
                        "XPT",
                        "XSU",
                        "XTS",
                        "XUA",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWL"
                      ]
                    },
                    "masterId": {
                      "type": "string",
                      "description": "The master rule ID. When a rule is changed, the original is marked as inactive, and a new one created. The master ID enables us to identify those rules which are updates",
                      "example": "M1000001"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "daysToRun": {
                          "type": "array",
                          "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                          "items": {
                            "type": "string",
                            "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "frequency": {
                          "type": "string",
                          "description": "Frequency of the rule. Sweep Rule Only",
                          "enum": [
                            "Daily"
                          ]
                        },
                        "destinationId": {
                          "type": "string",
                          "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
                        },
                        "balanceToLeave": {
                          "type": "number",
                          "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
                        },
                        "triggerBalance": {
                          "type": "number",
                          "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
                        },
                        "splits": {
                          "type": "array",
                          "items": {
                            "required": [
                              "destinationId",
                              "percent"
                            ],
                            "type": "object",
                            "properties": {
                              "destinationId": {
                                "type": "string",
                                "description": "Id of destination beneficiary. e.g. B1000001."
                              },
                              "percent": {
                                "type": "string",
                                "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                              }
                            },
                            "description": "Configuration for a Split Rule"
                          }
                        },
                        "conditionalSplits": {
                          "type": "array",
                          "items": {
                            "required": [
                              "destinationId",
                              "percent"
                            ],
                            "type": "object",
                            "properties": {
                              "destinationId": {
                                "type": "string",
                                "description": "Id of destination beneficiary. e.g. B1000001."
                              },
                              "percent": {
                                "type": "string",
                                "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                              }
                            },
                            "description": "Configuration for a Split Rule"
                          }
                        },
                        "conditionalSplitConfig": {
                          "required": [
                            "conditionAmount",
                            "destinationId",
                            "percent"
                          ],
                          "type": "object",
                          "properties": {
                            "destinationId": {
                              "type": "string",
                              "description": "Id of destination beneficiary. e.g. B1000001."
                            },
                            "percent": {
                              "type": "string",
                              "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                            },
                            "conditionAmount": {
                              "maximum": 2147483647,
                              "minimum": 0.01,
                              "exclusiveMinimum": false,
                              "type": "number",
                              "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
                            },
                            "conditionDone": {
                              "type": "boolean",
                              "description": "Whether the condition amount has been met. e.g. true or false"
                            }
                          },
                          "description": "Configuration for a Conditional Split Rule"
                        },
                        "sourceId": {
                          "type": "string",
                          "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
                        }
                      },
                      "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Rules"
        ],
        "summary": "Delete a Rule",
        "description": "When you no longer want a rule on an account you can do it with this endpoint. You can delete more than one rule in the same request.",
        "operationId": "removeRules",
        "parameters": [
          {
            "name": "rIds",
            "in": "query",
            "description": "Id(s) of Rules to delete",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted single resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "207": {
            "description": "Map of multiple responses for multi-request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{id}/rules": {
      "get": {
        "tags": [
          "Rules"
        ],
        "summary": "Get all Rules for a specific Account",
        "description": "The ability to get the details of all rules associated with the specified account using the Account ID as a reference. Can filter by a specific type using the type parameter.",
        "operationId": "getRules",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID of the rules",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of Page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "rtype",
            "in": "query",
            "description": "Filter to a specific RuleType",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "SPLIT, SWEEP, FUNDING"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "accountCurrency",
                          "accountId",
                          "data",
                          "id",
                          "masterId",
                          "name",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for a Rule",
                            "example": "R1000001"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of Rule. Can be one of the following {SWEEP, SPLIT, FUNDING}",
                            "enum": [
                              "SPLIT",
                              "SWEEP",
                              "FUNDING"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Rule's name",
                            "example": "My new rule"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "The Account which the Rule is created on.",
                            "example": "A1000001"
                          },
                          "accountCurrency": {
                            "type": "string",
                            "enum": [
                              "GBP",
                              "EUR",
                              "AED",
                              "AFN",
                              "ALL",
                              "AMD",
                              "ANG",
                              "AOA",
                              "ARS",
                              "AUD",
                              "AWG",
                              "AZN",
                              "BAM",
                              "BBD",
                              "BDT",
                              "BGN",
                              "BHD",
                              "BIF",
                              "BMD",
                              "BND",
                              "BOB",
                              "BOV",
                              "BRL",
                              "BSD",
                              "BTN",
                              "BWP",
                              "BYN",
                              "BZD",
                              "CAD",
                              "CDF",
                              "CHE",
                              "CHF",
                              "CHW",
                              "CLF",
                              "CLP",
                              "CNY",
                              "COP",
                              "COU",
                              "CRC",
                              "CUC",
                              "CUP",
                              "CVE",
                              "CZK",
                              "DJF",
                              "DKK",
                              "DOP",
                              "DZD",
                              "EGP",
                              "ERN",
                              "ETB",
                              "FJD",
                              "FKP",
                              "GEL",
                              "GHS",
                              "GIP",
                              "GMD",
                              "GNF",
                              "GTQ",
                              "GYD",
                              "HKD",
                              "HNL",
                              "HRK",
                              "HTG",
                              "HUF",
                              "IDR",
                              "ILS",
                              "INR",
                              "IQD",
                              "IRR",
                              "ISK",
                              "JMD",
                              "JOD",
                              "JPY",
                              "KES",
                              "KGS",
                              "KHR",
                              "KMF",
                              "KPW",
                              "KRW",
                              "KWD",
                              "KYD",
                              "KZT",
                              "LAK",
                              "LBP",
                              "LKR",
                              "LRD",
                              "LSL",
                              "LYD",
                              "MAD",
                              "MDL",
                              "MGA",
                              "MKD",
                              "MMK",
                              "MNT",
                              "MOP",
                              "MRU",
                              "MUR",
                              "MVR",
                              "MWK",
                              "MXN",
                              "MXV",
                              "MYR",
                              "MZN",
                              "NAD",
                              "NGN",
                              "NIO",
                              "NOK",
                              "NPR",
                              "NZD",
                              "OMR",
                              "PAB",
                              "PEN",
                              "PGK",
                              "PHP",
                              "PKR",
                              "PLN",
                              "PYG",
                              "QAR",
                              "RON",
                              "RSD",
                              "RUB",
                              "RWF",
                              "SAR",
                              "SBD",
                              "SCR",
                              "SDG",
                              "SEK",
                              "SGD",
                              "SLE",
                              "SLL",
                              "SOS",
                              "SRD",
                              "SSP",
                              "STN",
                              "SVC",
                              "SYP",
                              "SZL",
                              "SHP",
                              "THB",
                              "TJS",
                              "TMT",
                              "TND",
                              "TOP",
                              "TRY",
                              "TTD",
                              "TWD",
                              "TZS",
                              "UAH",
                              "UGX",
                              "USD",
                              "USN",
                              "UYI",
                              "UYU",
                              "UYW",
                              "UZS",
                              "VES",
                              "VND",
                              "VUV",
                              "WST",
                              "XAF",
                              "XAG",
                              "XAU",
                              "XBA",
                              "XBB",
                              "XBC",
                              "XBD",
                              "XCD",
                              "XDR",
                              "XOF",
                              "XPD",
                              "XPF",
                              "XPT",
                              "XSU",
                              "XTS",
                              "XUA",
                              "XXX",
                              "YER",
                              "ZAR",
                              "ZMW",
                              "ZWL"
                            ]
                          },
                          "masterId": {
                            "type": "string",
                            "description": "The master rule ID. When a rule is changed, the original is marked as inactive, and a new one created. The master ID enables us to identify those rules which are updates",
                            "example": "M1000001"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "daysToRun": {
                                "type": "array",
                                "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                                "items": {
                                  "type": "string",
                                  "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                                  "enum": [
                                    "MONDAY",
                                    "TUESDAY",
                                    "WEDNESDAY",
                                    "THURSDAY",
                                    "FRIDAY",
                                    "SATURDAY",
                                    "SUNDAY"
                                  ]
                                }
                              },
                              "frequency": {
                                "type": "string",
                                "description": "Frequency of the rule. Sweep Rule Only",
                                "enum": [
                                  "Daily"
                                ]
                              },
                              "destinationId": {
                                "type": "string",
                                "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
                              },
                              "balanceToLeave": {
                                "type": "number",
                                "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
                              },
                              "triggerBalance": {
                                "type": "number",
                                "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
                              },
                              "splits": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "destinationId",
                                    "percent"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "destinationId": {
                                      "type": "string",
                                      "description": "Id of destination beneficiary. e.g. B1000001."
                                    },
                                    "percent": {
                                      "type": "string",
                                      "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                                    }
                                  },
                                  "description": "Configuration for a Split Rule"
                                }
                              },
                              "conditionalSplits": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "destinationId",
                                    "percent"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "destinationId": {
                                      "type": "string",
                                      "description": "Id of destination beneficiary. e.g. B1000001."
                                    },
                                    "percent": {
                                      "type": "string",
                                      "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                                    }
                                  },
                                  "description": "Configuration for a Split Rule"
                                }
                              },
                              "conditionalSplitConfig": {
                                "required": [
                                  "conditionAmount",
                                  "destinationId",
                                  "percent"
                                ],
                                "type": "object",
                                "properties": {
                                  "destinationId": {
                                    "type": "string",
                                    "description": "Id of destination beneficiary. e.g. B1000001."
                                  },
                                  "percent": {
                                    "type": "string",
                                    "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                                  },
                                  "conditionAmount": {
                                    "maximum": 2147483647,
                                    "minimum": 0.01,
                                    "exclusiveMinimum": false,
                                    "type": "number",
                                    "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
                                  },
                                  "conditionDone": {
                                    "type": "boolean",
                                    "description": "Whether the condition amount has been met. e.g. true or false"
                                  }
                                },
                                "description": "Configuration for a Conditional Split Rule"
                              },
                              "sourceId": {
                                "type": "string",
                                "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
                              }
                            },
                            "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
                          }
                        }
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{id}/rules/{rtype}": {
      "get": {
        "tags": [
          "Rules"
        ],
        "summary": "Retrieve a Rule by rule type on a specific account",
        "description": "You need to know the unique reference of the account and the rule type you want to get to information on.",
        "operationId": "getRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID of the rule",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rtype",
            "in": "path",
            "description": "The type of Rule.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "SPLIT, SWEEP, FUNDING"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "accountCurrency",
                    "accountId",
                    "data",
                    "id",
                    "masterId",
                    "name",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for a Rule",
                      "example": "R1000001"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Rule. Can be one of the following {SWEEP, SPLIT, FUNDING}",
                      "enum": [
                        "SPLIT",
                        "SWEEP",
                        "FUNDING"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Rule's name",
                      "example": "My new rule"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "The Account which the Rule is created on.",
                      "example": "A1000001"
                    },
                    "accountCurrency": {
                      "type": "string",
                      "enum": [
                        "GBP",
                        "EUR",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHE",
                        "CHF",
                        "CHW",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "FJD",
                        "FKP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SLE",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "SHP",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "USN",
                        "UYI",
                        "UYU",
                        "UYW",
                        "UZS",
                        "VES",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XAG",
                        "XAU",
                        "XBA",
                        "XBB",
                        "XBC",
                        "XBD",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPD",
                        "XPF",
                        "XPT",
                        "XSU",
                        "XTS",
                        "XUA",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWL"
                      ]
                    },
                    "masterId": {
                      "type": "string",
                      "description": "The master rule ID. When a rule is changed, the original is marked as inactive, and a new one created. The master ID enables us to identify those rules which are updates",
                      "example": "M1000001"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "daysToRun": {
                          "type": "array",
                          "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                          "items": {
                            "type": "string",
                            "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "frequency": {
                          "type": "string",
                          "description": "Frequency of the rule. Sweep Rule Only",
                          "enum": [
                            "Daily"
                          ]
                        },
                        "destinationId": {
                          "type": "string",
                          "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
                        },
                        "balanceToLeave": {
                          "type": "number",
                          "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
                        },
                        "triggerBalance": {
                          "type": "number",
                          "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
                        },
                        "splits": {
                          "type": "array",
                          "items": {
                            "required": [
                              "destinationId",
                              "percent"
                            ],
                            "type": "object",
                            "properties": {
                              "destinationId": {
                                "type": "string",
                                "description": "Id of destination beneficiary. e.g. B1000001."
                              },
                              "percent": {
                                "type": "string",
                                "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                              }
                            },
                            "description": "Configuration for a Split Rule"
                          }
                        },
                        "conditionalSplits": {
                          "type": "array",
                          "items": {
                            "required": [
                              "destinationId",
                              "percent"
                            ],
                            "type": "object",
                            "properties": {
                              "destinationId": {
                                "type": "string",
                                "description": "Id of destination beneficiary. e.g. B1000001."
                              },
                              "percent": {
                                "type": "string",
                                "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                              }
                            },
                            "description": "Configuration for a Split Rule"
                          }
                        },
                        "conditionalSplitConfig": {
                          "required": [
                            "conditionAmount",
                            "destinationId",
                            "percent"
                          ],
                          "type": "object",
                          "properties": {
                            "destinationId": {
                              "type": "string",
                              "description": "Id of destination beneficiary. e.g. B1000001."
                            },
                            "percent": {
                              "type": "string",
                              "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                            },
                            "conditionAmount": {
                              "maximum": 2147483647,
                              "minimum": 0.01,
                              "exclusiveMinimum": false,
                              "type": "number",
                              "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
                            },
                            "conditionDone": {
                              "type": "boolean",
                              "description": "Whether the condition amount has been met. e.g. true or false"
                            }
                          },
                          "description": "Configuration for a Conditional Split Rule"
                        },
                        "sourceId": {
                          "type": "string",
                          "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
                        }
                      },
                      "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/partners/{partnerId}/notifications/{notificationId}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Retrieve a specific notification by unique reference for a specific partner",
        "description": "This allows you to see the settings for a particular notification that has been set up, for example if you want to check if it is active or the emails the notification is being sent to. It would be best practice to call this before updating a notification.",
        "operationId": "getPartnerNotification",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Update a specific notification by unique reference for a specific partner",
        "description": "If you need to change anything about a particular notification, for example add an email address or make it inactive, then this is the endpoint to use. You need to put all of the information into this request for the notification even if it isn't changing, so either you will need to record this somewhere when you create the notification, or call the 'GET' request first.",
        "operationId": "editPartnerNotification",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "config",
                  "destinations",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status of the notification.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ]
                  },
                  "destinations": {
                    "type": "array",
                    "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL.",
                    "items": {
                      "type": "string",
                      "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL."
                    }
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "threshold": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                      },
                      "timesToRun": {
                        "type": "array",
                        "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                        "items": {
                          "type": "string",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "enum": [
                            "AM",
                            "PM"
                          ]
                        }
                      },
                      "daysToRun": {
                        "type": "array",
                        "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                        "items": {
                          "type": "string",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                          ]
                        }
                      },
                      "retry": {
                        "type": "boolean",
                        "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                      },
                      "secret": {
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                      },
                      "hmacAlgorithm": {
                        "type": "string",
                        "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                        "enum": [
                          "hmac-sha1",
                          "hmac-sha256",
                          "hmac-sha384",
                          "hmac-sha512"
                        ]
                      }
                    },
                    "description": "Configuration information for this Notification entity."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customers/{customerId}/notifications/{notificationId}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Retrieve a specific notification by unique reference for a specific customer",
        "description": "This allows you to see the settings for a particular notification that has been set up, for example if you want to check if it is active or the emails the notification is being sent to. It would be best practice to call this before updating a notification.",
        "operationId": "getCustomerNotification",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Update a specific notification by unique reference for a specific customer",
        "description": "If you need to change anything about a particular notification, for example add an email address or make it inactive, then this is the endpoint to use. You need to put all of the information into this request for the notification even if it isn't changing, so either you will need to record this somewhere when you create the notification, or call the 'GET' request first.",
        "operationId": "editCustomerNotification",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "config",
                  "destinations",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status of the notification.",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ]
                  },
                  "destinations": {
                    "type": "array",
                    "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL.",
                    "items": {
                      "type": "string",
                      "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL."
                    }
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "threshold": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                      },
                      "timesToRun": {
                        "type": "array",
                        "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                        "items": {
                          "type": "string",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "enum": [
                            "AM",
                            "PM"
                          ]
                        }
                      },
                      "daysToRun": {
                        "type": "array",
                        "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                        "items": {
                          "type": "string",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                          ]
                        }
                      },
                      "retry": {
                        "type": "boolean",
                        "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                      },
                      "secret": {
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                      },
                      "hmacAlgorithm": {
                        "type": "string",
                        "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                        "enum": [
                          "hmac-sha1",
                          "hmac-sha256",
                          "hmac-sha384",
                          "hmac-sha512"
                        ]
                      }
                    },
                    "description": "Configuration information for this Notification entity."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/partners/{partnerId}/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get all Notifications linked directly to a Partner",
        "description": "Retrieve details of all notifications set up for a partner using the partner's ID as a reference",
        "operationId": "getAllPartnerNotifications",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "channel",
                      "config",
                      "customerId",
                      "destinations",
                      "id",
                      "status",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier for the notification."
                      },
                      "customerId": {
                        "type": "string",
                        "description": "Unique Identifier for the customer of this notification."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of notification",
                        "enum": [
                          "PAYIN",
                          "PAYOUT",
                          "BALANCE_LOW",
                          "BALANCE_HIGH",
                          "BALANCE",
                          "DDMANDATE",
                          "CUSTVSTAT",
                          "ACCOUNT_STATEMENT",
                          "PENDING_PAYMENTS",
                          "DD_INCOMING_DEBIT",
                          "DD_FAILED_CLAIM",
                          "DD_FUNDS_RETURNED",
                          "CARD_AUTH",
                          "CARD_CREATION",
                          "UPCOMING_CREDIT",
                          "UPCOMING_COLLECTION_CREDIT",
                          "UPCOMING_COLLECTION_DEBIT",
                          "CARD_STATUS_UPDATE",
                          "CARD_TOKEN_PROVISIONING",
                          "PAYMENT_COMPLIANCE_STATUS",
                          "DD_COLLECTION_STATUS",
                          "ACCOUNT_SWITCH_UPDATE",
                          "PAYMENT_FILE_UPLOAD",
                          "ACCOUNT_STATUS_CHANGE"
                        ]
                      },
                      "channel": {
                        "type": "string",
                        "description": "Channel used to send the notification.",
                        "enum": [
                          "EMAIL",
                          "WEBHOOK"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of notification.",
                        "enum": [
                          "ACTIVE",
                          "INACTIVE"
                        ]
                      },
                      "destinations": {
                        "type": "array",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                        "items": {
                          "type": "string",
                          "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                        }
                      },
                      "config": {
                        "type": "object",
                        "properties": {
                          "threshold": {
                            "minimum": 0,
                            "exclusiveMinimum": false,
                            "type": "number",
                            "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                          },
                          "timesToRun": {
                            "type": "array",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "items": {
                              "type": "string",
                              "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                              "enum": [
                                "AM",
                                "PM"
                              ]
                            }
                          },
                          "daysToRun": {
                            "type": "array",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "items": {
                              "type": "string",
                              "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                              "enum": [
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY",
                                "SUNDAY"
                              ]
                            }
                          },
                          "retry": {
                            "type": "boolean",
                            "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                          },
                          "secret": {
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                          },
                          "hmacAlgorithm": {
                            "type": "string",
                            "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                            "enum": [
                              "hmac-sha1",
                              "hmac-sha256",
                              "hmac-sha384",
                              "hmac-sha512"
                            ]
                          }
                        },
                        "description": "Configuration information for this Notification entity."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "channel",
                      "config",
                      "customerId",
                      "destinations",
                      "id",
                      "status",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier for the notification."
                      },
                      "customerId": {
                        "type": "string",
                        "description": "Unique Identifier for the customer of this notification."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of notification",
                        "enum": [
                          "PAYIN",
                          "PAYOUT",
                          "BALANCE_LOW",
                          "BALANCE_HIGH",
                          "BALANCE",
                          "DDMANDATE",
                          "CUSTVSTAT",
                          "ACCOUNT_STATEMENT",
                          "PENDING_PAYMENTS",
                          "DD_INCOMING_DEBIT",
                          "DD_FAILED_CLAIM",
                          "DD_FUNDS_RETURNED",
                          "CARD_AUTH",
                          "CARD_CREATION",
                          "UPCOMING_CREDIT",
                          "UPCOMING_COLLECTION_CREDIT",
                          "UPCOMING_COLLECTION_DEBIT",
                          "CARD_STATUS_UPDATE",
                          "CARD_TOKEN_PROVISIONING",
                          "PAYMENT_COMPLIANCE_STATUS",
                          "DD_COLLECTION_STATUS",
                          "ACCOUNT_SWITCH_UPDATE",
                          "PAYMENT_FILE_UPLOAD",
                          "ACCOUNT_STATUS_CHANGE"
                        ]
                      },
                      "channel": {
                        "type": "string",
                        "description": "Channel used to send the notification.",
                        "enum": [
                          "EMAIL",
                          "WEBHOOK"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of notification.",
                        "enum": [
                          "ACTIVE",
                          "INACTIVE"
                        ]
                      },
                      "destinations": {
                        "type": "array",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                        "items": {
                          "type": "string",
                          "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                        }
                      },
                      "config": {
                        "type": "object",
                        "properties": {
                          "threshold": {
                            "minimum": 0,
                            "exclusiveMinimum": false,
                            "type": "number",
                            "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                          },
                          "timesToRun": {
                            "type": "array",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "items": {
                              "type": "string",
                              "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                              "enum": [
                                "AM",
                                "PM"
                              ]
                            }
                          },
                          "daysToRun": {
                            "type": "array",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "items": {
                              "type": "string",
                              "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                              "enum": [
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY",
                                "SUNDAY"
                              ]
                            }
                          },
                          "retry": {
                            "type": "boolean",
                            "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                          },
                          "secret": {
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                          },
                          "hmacAlgorithm": {
                            "type": "string",
                            "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                            "enum": [
                              "hmac-sha1",
                              "hmac-sha256",
                              "hmac-sha384",
                              "hmac-sha512"
                            ]
                          }
                        },
                        "description": "Configuration information for this Notification entity."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Set up a Notification for a Partner",
        "description": "Sets up a new notification for a partner using the partner's ID as a reference. Returns a notification ID that should be saved if the notification needs to be amended in the future",
        "operationId": "addPartnerNotification",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "channel",
                  "config",
                  "destinations",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the notification.",
                    "enum": [
                      "PAYIN",
                      "PAYOUT",
                      "BALANCE_LOW",
                      "BALANCE_HIGH",
                      "BALANCE",
                      "DDMANDATE",
                      "CUSTVSTAT",
                      "ACCOUNT_STATEMENT",
                      "PENDING_PAYMENTS",
                      "DD_INCOMING_DEBIT",
                      "DD_FAILED_CLAIM",
                      "DD_FUNDS_RETURNED",
                      "CARD_AUTH",
                      "CARD_CREATION",
                      "UPCOMING_CREDIT",
                      "UPCOMING_COLLECTION_CREDIT",
                      "UPCOMING_COLLECTION_DEBIT",
                      "CARD_STATUS_UPDATE",
                      "CARD_TOKEN_PROVISIONING",
                      "PAYMENT_COMPLIANCE_STATUS",
                      "DD_COLLECTION_STATUS",
                      "ACCOUNT_SWITCH_UPDATE",
                      "PAYMENT_FILE_UPLOAD",
                      "ACCOUNT_STATUS_CHANGE"
                    ]
                  },
                  "channel": {
                    "type": "string",
                    "description": "Channel used for sending the notification",
                    "enum": [
                      "EMAIL",
                      "WEBHOOK"
                    ]
                  },
                  "destinations": {
                    "type": "array",
                    "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL.",
                    "items": {
                      "type": "string",
                      "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL."
                    }
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "threshold": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                      },
                      "timesToRun": {
                        "type": "array",
                        "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                        "items": {
                          "type": "string",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "enum": [
                            "AM",
                            "PM"
                          ]
                        }
                      },
                      "daysToRun": {
                        "type": "array",
                        "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                        "items": {
                          "type": "string",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                          ]
                        }
                      },
                      "retry": {
                        "type": "boolean",
                        "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                      },
                      "secret": {
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                      },
                      "hmacAlgorithm": {
                        "type": "string",
                        "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                        "enum": [
                          "hmac-sha1",
                          "hmac-sha256",
                          "hmac-sha384",
                          "hmac-sha512"
                        ]
                      }
                    },
                    "description": "Configuration information for this Notification entity."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customers/{customerId}/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get all Notifications for a Customer",
        "description": "Retrieve details of all notifications set up for a customer using the customer's ID as a reference",
        "operationId": "getAllCustomerNotifications",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "channel",
                      "config",
                      "customerId",
                      "destinations",
                      "id",
                      "status",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier for the notification."
                      },
                      "customerId": {
                        "type": "string",
                        "description": "Unique Identifier for the customer of this notification."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of notification",
                        "enum": [
                          "PAYIN",
                          "PAYOUT",
                          "BALANCE_LOW",
                          "BALANCE_HIGH",
                          "BALANCE",
                          "DDMANDATE",
                          "CUSTVSTAT",
                          "ACCOUNT_STATEMENT",
                          "PENDING_PAYMENTS",
                          "DD_INCOMING_DEBIT",
                          "DD_FAILED_CLAIM",
                          "DD_FUNDS_RETURNED",
                          "CARD_AUTH",
                          "CARD_CREATION",
                          "UPCOMING_CREDIT",
                          "UPCOMING_COLLECTION_CREDIT",
                          "UPCOMING_COLLECTION_DEBIT",
                          "CARD_STATUS_UPDATE",
                          "CARD_TOKEN_PROVISIONING",
                          "PAYMENT_COMPLIANCE_STATUS",
                          "DD_COLLECTION_STATUS",
                          "ACCOUNT_SWITCH_UPDATE",
                          "PAYMENT_FILE_UPLOAD",
                          "ACCOUNT_STATUS_CHANGE"
                        ]
                      },
                      "channel": {
                        "type": "string",
                        "description": "Channel used to send the notification.",
                        "enum": [
                          "EMAIL",
                          "WEBHOOK"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of notification.",
                        "enum": [
                          "ACTIVE",
                          "INACTIVE"
                        ]
                      },
                      "destinations": {
                        "type": "array",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                        "items": {
                          "type": "string",
                          "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                        }
                      },
                      "config": {
                        "type": "object",
                        "properties": {
                          "threshold": {
                            "minimum": 0,
                            "exclusiveMinimum": false,
                            "type": "number",
                            "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                          },
                          "timesToRun": {
                            "type": "array",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "items": {
                              "type": "string",
                              "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                              "enum": [
                                "AM",
                                "PM"
                              ]
                            }
                          },
                          "daysToRun": {
                            "type": "array",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "items": {
                              "type": "string",
                              "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                              "enum": [
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY",
                                "SUNDAY"
                              ]
                            }
                          },
                          "retry": {
                            "type": "boolean",
                            "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                          },
                          "secret": {
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                          },
                          "hmacAlgorithm": {
                            "type": "string",
                            "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                            "enum": [
                              "hmac-sha1",
                              "hmac-sha256",
                              "hmac-sha384",
                              "hmac-sha512"
                            ]
                          }
                        },
                        "description": "Configuration information for this Notification entity."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "channel",
                      "config",
                      "customerId",
                      "destinations",
                      "id",
                      "status",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier for the notification."
                      },
                      "customerId": {
                        "type": "string",
                        "description": "Unique Identifier for the customer of this notification."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of notification",
                        "enum": [
                          "PAYIN",
                          "PAYOUT",
                          "BALANCE_LOW",
                          "BALANCE_HIGH",
                          "BALANCE",
                          "DDMANDATE",
                          "CUSTVSTAT",
                          "ACCOUNT_STATEMENT",
                          "PENDING_PAYMENTS",
                          "DD_INCOMING_DEBIT",
                          "DD_FAILED_CLAIM",
                          "DD_FUNDS_RETURNED",
                          "CARD_AUTH",
                          "CARD_CREATION",
                          "UPCOMING_CREDIT",
                          "UPCOMING_COLLECTION_CREDIT",
                          "UPCOMING_COLLECTION_DEBIT",
                          "CARD_STATUS_UPDATE",
                          "CARD_TOKEN_PROVISIONING",
                          "PAYMENT_COMPLIANCE_STATUS",
                          "DD_COLLECTION_STATUS",
                          "ACCOUNT_SWITCH_UPDATE",
                          "PAYMENT_FILE_UPLOAD",
                          "ACCOUNT_STATUS_CHANGE"
                        ]
                      },
                      "channel": {
                        "type": "string",
                        "description": "Channel used to send the notification.",
                        "enum": [
                          "EMAIL",
                          "WEBHOOK"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of notification.",
                        "enum": [
                          "ACTIVE",
                          "INACTIVE"
                        ]
                      },
                      "destinations": {
                        "type": "array",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                        "items": {
                          "type": "string",
                          "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                        }
                      },
                      "config": {
                        "type": "object",
                        "properties": {
                          "threshold": {
                            "minimum": 0,
                            "exclusiveMinimum": false,
                            "type": "number",
                            "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                          },
                          "timesToRun": {
                            "type": "array",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "items": {
                              "type": "string",
                              "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                              "enum": [
                                "AM",
                                "PM"
                              ]
                            }
                          },
                          "daysToRun": {
                            "type": "array",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "items": {
                              "type": "string",
                              "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                              "enum": [
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY",
                                "SUNDAY"
                              ]
                            }
                          },
                          "retry": {
                            "type": "boolean",
                            "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                          },
                          "secret": {
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                          },
                          "hmacAlgorithm": {
                            "type": "string",
                            "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                            "enum": [
                              "hmac-sha1",
                              "hmac-sha256",
                              "hmac-sha384",
                              "hmac-sha512"
                            ]
                          }
                        },
                        "description": "Configuration information for this Notification entity."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Set up a Notification for a Customer",
        "description": "Sets up a new notification for a customer using the customer's ID as a reference. Returns a notification ID that should be saved if the notification needs to be amended in the future",
        "operationId": "addCustomerNotification",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "channel",
                  "config",
                  "destinations",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the notification.",
                    "enum": [
                      "PAYIN",
                      "PAYOUT",
                      "BALANCE_LOW",
                      "BALANCE_HIGH",
                      "BALANCE",
                      "DDMANDATE",
                      "CUSTVSTAT",
                      "ACCOUNT_STATEMENT",
                      "PENDING_PAYMENTS",
                      "DD_INCOMING_DEBIT",
                      "DD_FAILED_CLAIM",
                      "DD_FUNDS_RETURNED",
                      "CARD_AUTH",
                      "CARD_CREATION",
                      "UPCOMING_CREDIT",
                      "UPCOMING_COLLECTION_CREDIT",
                      "UPCOMING_COLLECTION_DEBIT",
                      "CARD_STATUS_UPDATE",
                      "CARD_TOKEN_PROVISIONING",
                      "PAYMENT_COMPLIANCE_STATUS",
                      "DD_COLLECTION_STATUS",
                      "ACCOUNT_SWITCH_UPDATE",
                      "PAYMENT_FILE_UPLOAD",
                      "ACCOUNT_STATUS_CHANGE"
                    ]
                  },
                  "channel": {
                    "type": "string",
                    "description": "Channel used for sending the notification",
                    "enum": [
                      "EMAIL",
                      "WEBHOOK"
                    ]
                  },
                  "destinations": {
                    "type": "array",
                    "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL.",
                    "items": {
                      "type": "string",
                      "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL."
                    }
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "threshold": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                      },
                      "timesToRun": {
                        "type": "array",
                        "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                        "items": {
                          "type": "string",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "enum": [
                            "AM",
                            "PM"
                          ]
                        }
                      },
                      "daysToRun": {
                        "type": "array",
                        "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                        "items": {
                          "type": "string",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                          ]
                        }
                      },
                      "retry": {
                        "type": "boolean",
                        "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                      },
                      "secret": {
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                      },
                      "hmacAlgorithm": {
                        "type": "string",
                        "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                        "enum": [
                          "hmac-sha1",
                          "hmac-sha256",
                          "hmac-sha384",
                          "hmac-sha512"
                        ]
                      }
                    },
                    "description": "Configuration information for this Notification entity."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "channel",
                    "config",
                    "customerId",
                    "destinations",
                    "id",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the notification."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique Identifier for the customer of this notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of notification",
                      "enum": [
                        "PAYIN",
                        "PAYOUT",
                        "BALANCE_LOW",
                        "BALANCE_HIGH",
                        "BALANCE",
                        "DDMANDATE",
                        "CUSTVSTAT",
                        "ACCOUNT_STATEMENT",
                        "PENDING_PAYMENTS",
                        "DD_INCOMING_DEBIT",
                        "DD_FAILED_CLAIM",
                        "DD_FUNDS_RETURNED",
                        "CARD_AUTH",
                        "CARD_CREATION",
                        "UPCOMING_CREDIT",
                        "UPCOMING_COLLECTION_CREDIT",
                        "UPCOMING_COLLECTION_DEBIT",
                        "CARD_STATUS_UPDATE",
                        "CARD_TOKEN_PROVISIONING",
                        "PAYMENT_COMPLIANCE_STATUS",
                        "DD_COLLECTION_STATUS",
                        "ACCOUNT_SWITCH_UPDATE",
                        "PAYMENT_FILE_UPLOAD",
                        "ACCOUNT_STATUS_CHANGE"
                      ]
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel used to send the notification.",
                      "enum": [
                        "EMAIL",
                        "WEBHOOK"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of notification.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ]
                    },
                    "destinations": {
                      "type": "array",
                      "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
                      "items": {
                        "type": "string",
                        "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
                      }
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "threshold": {
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
                        },
                        "timesToRun": {
                          "type": "array",
                          "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "AM",
                              "PM"
                            ]
                          }
                        },
                        "daysToRun": {
                          "type": "array",
                          "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                          "items": {
                            "type": "string",
                            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                            "enum": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY",
                              "SATURDAY",
                              "SUNDAY"
                            ]
                          }
                        },
                        "retry": {
                          "type": "boolean",
                          "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "secret": {
                          "maxLength": 32,
                          "minLength": 32,
                          "type": "string",
                          "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
                        },
                        "hmacAlgorithm": {
                          "type": "string",
                          "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                          "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha384",
                            "hmac-sha512"
                          ]
                        }
                      },
                      "description": "Configuration information for this Notification entity."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/webhooks/{webhookId}/failures": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Check if a particular webhook has failed",
        "description": "Only supports webhook notifications and as such uses the webhook endpoint. Request a specific notification ID and specify you want to see failures. (Max 50)",
        "operationId": "getFailedWebHooks",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "Id of Webhook ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Failed since Date. Needs to be urlEncoded value",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "customerBid",
                      "eventName",
                      "lastFailedTime",
                      "retry",
                      "url"
                    ],
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "Endpoint URL for receiving webhook data"
                      },
                      "eventName": {
                        "type": "string",
                        "description": "Event which would trigger the webhook",
                        "enum": [
                          "PAYIN",
                          "PAYOUT",
                          "BALANCE_LOW",
                          "BALANCE_HIGH",
                          "BALANCE",
                          "DDMANDATE",
                          "CUSTVSTAT",
                          "ACCOUNT_STATEMENT",
                          "PENDING_PAYMENTS",
                          "DD_INCOMING_DEBIT",
                          "DD_FAILED_CLAIM",
                          "DD_FUNDS_RETURNED",
                          "CARD_AUTH",
                          "CARD_CREATION",
                          "UPCOMING_CREDIT",
                          "UPCOMING_COLLECTION_CREDIT",
                          "UPCOMING_COLLECTION_DEBIT",
                          "CARD_STATUS_UPDATE",
                          "CARD_TOKEN_PROVISIONING",
                          "PAYMENT_COMPLIANCE_STATUS",
                          "DD_COLLECTION_STATUS",
                          "ACCOUNT_SWITCH_UPDATE",
                          "PAYMENT_FILE_UPLOAD",
                          "ACCOUNT_STATUS_CHANGE"
                        ]
                      },
                      "customerBid": {
                        "type": "string",
                        "description": "Unique Identifier for the customer of this webhook."
                      },
                      "retry": {
                        "type": "boolean",
                        "description": "Turn webhook retry mechanism on/off"
                      },
                      "lastFailedTime": {
                        "type": "string",
                        "description": "Last failure time. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01+0000'",
                        "format": "date-time"
                      },
                      "data": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/credit": {
      "post": {
        "tags": [
          "Inbound Payments"
        ],
        "summary": "Endpoint to mock the credit of an account",
        "description": "Inbound payments - mock (Sandbox only)",
        "operationId": "createPayments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountId",
                  "amount",
                  "description",
                  "payerDetail",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The account to be credited"
                  },
                  "payerDetail": {
                    "required": [
                      "identifier",
                      "name"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Party name"
                      },
                      "identifier": {
                        "required": [
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Account identifier type",
                            "enum": [
                              "SCAN",
                              "IBAN",
                              "DD",
                              "INTL",
                              "ANBRN",
                              "AN"
                            ]
                          },
                          "accountNumber": {
                            "type": "string",
                            "description": "Account number"
                          },
                          "sortCode": {
                            "type": "string",
                            "description": "Sortcode"
                          },
                          "iban": {
                            "type": "string",
                            "description": "IBAN"
                          },
                          "bic": {
                            "type": "string",
                            "description": "BIC"
                          }
                        },
                        "description": "Account identifier"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "type": "string"
                          },
                          "addressLine2": {
                            "type": "string"
                          },
                          "postTown": {
                            "type": "string"
                          },
                          "postCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        },
                        "description": "Party address"
                      }
                    },
                    "description": "Payee details"
                  },
                  "payeeDetail": {
                    "required": [
                      "identifier",
                      "name"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Party name"
                      },
                      "identifier": {
                        "required": [
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Account identifier type",
                            "enum": [
                              "SCAN",
                              "IBAN",
                              "DD",
                              "INTL",
                              "ANBRN",
                              "AN"
                            ]
                          },
                          "accountNumber": {
                            "type": "string",
                            "description": "Account number"
                          },
                          "sortCode": {
                            "type": "string",
                            "description": "Sortcode"
                          },
                          "iban": {
                            "type": "string",
                            "description": "IBAN"
                          },
                          "bic": {
                            "type": "string",
                            "description": "BIC"
                          }
                        },
                        "description": "Account identifier"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "type": "string"
                          },
                          "addressLine2": {
                            "type": "string"
                          },
                          "postTown": {
                            "type": "string"
                          },
                          "postCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        },
                        "description": "Party address"
                      }
                    },
                    "description": "Payee details"
                  },
                  "description": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "Description of the credit"
                  },
                  "amount": {
                    "maximum": 2147483647,
                    "minimum": 0.01,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Amount of the payment in major current Units - '1' = 1.00 GBP"
                  },
                  "type": {
                    "type": "string",
                    "description": " Type of credit, values: ",
                    "enum": [
                      "PI_BACS",
                      "PI_DD",
                      "PI_FAST",
                      "PI_SECT",
                      "PI_SEPA_INST",
                      "PI_SWIFT"
                    ]
                  },
                  "transactionDate": {
                    "type": "string",
                    "description": "Date of credit in yyyy-MM-ddTHH:mm:ssZ format"
                  },
                  "numberOfTransactions": {
                    "maximum": 50,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Number of credit transactions to create, defaults to 1",
                    "format": "int32"
                  },
                  "schemeInformation": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "unique id that identifies a payment end-to-end within a scheme. If used ensure that its unique"
                      }
                    },
                    "description": "Optional scheme details"
                  }
                },
                "description": "Details of credit to the account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/mandates/{id}/suspend": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Suspend Mandate for given mandate-id. ",
        "description": "You can suspend a mandate, which means nothing can be done to it (added or amended). There is also the option to cancel all scheduled payments at the same time. There is a call to re-instate the mandate if needed. Suspend is only supported for L&Z mandates.",
        "operationId": "suspendMandate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Mandate to suspend.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "cancelAllScheduledPayments": {
                    "type": "boolean",
                    "description": "Should cancel all collections schedules for the mandate"
                  },
                  "reason": {
                    "maxLength": 300,
                    "minLength": 0,
                    "type": "string",
                    "description": "Reason to suspend the mandate"
                  }
                },
                "description": "Details of Mandate suspension."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mandate suspended."
          },
          "400": {
            "description": "Validation errors.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/mandates/{id}/reinstate": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Reinstate Mandate for given mandate-id.",
        "description": "Reinstate Mandate for given mandate-id. Reinstate is only supported for L&Z mandates.",
        "operationId": "reinstateMandate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Mandate to reinstate.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "reason": {
                    "maxLength": 300,
                    "minLength": 0,
                    "type": "string",
                    "description": "Reason to re-instate the mandate"
                  }
                },
                "description": "Details of Mandate reinstatement."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mandate reinstated."
          },
          "400": {
            "description": "Validation errors.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/mandates/{id}/collectionschedules": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Create the collection schedule for the given mandate-id.",
        "description": "Creates a Direct Debit collection schedule; the agreed to framework for the collections for the given mandate-id. This could be a single collection or multiple and includes the frequency and amounts of the planned payments.",
        "operationId": "createCollectionSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of mandate to create collection for.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "currency",
                  "frequency",
                  "numberOfPayments"
                ],
                "type": "object",
                "properties": {
                  "frequency": {
                    "type": "string",
                    "description": "Frequency for direct-debit collection. Can be one of: ONCE, WEEKLY, EVERY_TWO_WEEKS, EVERY_FOUR_WEEKS, MONTHLY, QUARTERLY, SEMI_ANNUALLY, ANNUALLY.",
                    "enum": [
                      "ONCE",
                      "MONTHLY",
                      "QUARTERLY",
                      "SEMI_ANNUALLY",
                      "ANNUALLY",
                      "WEEKLY",
                      "EVERY_TWO_WEEKS",
                      "EVERY_FOUR_WEEKS"
                    ]
                  },
                  "numberOfPayments": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "Number of payments for direct-debit collection, must be '1' where frequency is 'ONCE'.",
                    "format": "int32"
                  },
                  "firstPaymentAmount": {
                    "maximum": 20000000,
                    "minimum": 0.01,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Amount of the first collection payment.<br>\nNote: your item limit is set during onboarding will be lower than field maximum and Bacs scheme item limit of Â£20m.",
                    "example": 100
                  },
                  "firstPaymentDate": {
                    "type": "string",
                    "description": "Date of the first collection payment, format must be: yyyy-MM-dd",
                    "example": "2018-01-10"
                  },
                  "regularPaymentAmount": {
                    "maximum": 20000000,
                    "minimum": 0.01,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Amount of the regular collection payments following first collection amount. Does not apply where the frequency is 'ONCE'.<br>\nNote: your item limit is set during onboarding will be lower than field maximum and Bacs scheme item limit of Â£20m",
                    "example": 100
                  },
                  "regularPaymentStartDate": {
                    "type": "string",
                    "description": "Start date of the regular collection payment, format: yyyy-MM-dd<br> Note: Does not apply where the frequency is 'ONCE'.",
                    "example": "2018-01-10"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency in which payment should be made. Must be 'GBP' currently."
                  },
                  "externalReference": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w-\\s]*",
                    "type": "string",
                    "description": "External Reference for collection schedule, should contain only alphanumeric characters, underscore, hyphen and space.<br> For your internal reconciliation only, not sent to Bacs scheme.",
                    "example": "REFERENCE - 12"
                  },
                  "collectionReference": {
                    "maxLength": 12,
                    "minLength": 0,
                    "pattern": "[\\w-\\s]*",
                    "type": "string",
                    "description": "An optional additional collection specific reference to be appended to the reference of the mandate.<br>\nThis is concatenated after the  core reference of the mandate, and will be truncated if combined reference is >18 characters.<br>\nShould only contain alphanumeric characters, dot, ampersand, forward-slash and hyphen only.",
                    "example": "ABCD - EFGH"
                  },
                  "collectionCorrelationName": {
                    "maxLength": 18,
                    "minLength": 0,
                    "pattern": "^[a-zA-Z 0-9\\.\\&\\/-]+$",
                    "type": "string",
                    "description": "(If enabled by Modulr) an optional collection specific reference appended to abbreviated SU name for the given collection schedule. If feature not enabled, any parameter supplied will be ignored.<br>\nWhen is enabled, this value is concatenated to a Service User Name abbreviation (set by Modulr) to form a Service User name containing extra information that can be used by payer to correlate (identify) transaction easily.<br>\nCharacters restricted to: alphanumeric characters, numbers, space, dot, ampersand, forward-slash and hyphen only.",
                    "example": "TEST/NAME-1.2"
                  }
                },
                "description": "Details of collection to create."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "createdDate",
                    "frequency",
                    "id",
                    "numberOfPayments",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for direct-debit collection.",
                      "example": "Q0000001"
                    },
                    "frequency": {
                      "type": "string",
                      "description": "Frequency for direct-debit collection",
                      "example": "MONTHLY"
                    },
                    "numberOfPayments": {
                      "type": "integer",
                      "description": "Number of payments for direct-debit collection",
                      "format": "int32",
                      "example": 12
                    },
                    "firstPaymentAmount": {
                      "type": "number",
                      "description": "Amount of the first collection payment",
                      "example": 100
                    },
                    "firstPaymentDate": {
                      "type": "string",
                      "description": "Date of the first collection payment. Format is yyyy-MM-dd.",
                      "example": "2018-01-10"
                    },
                    "regularPaymentAmount": {
                      "type": "number",
                      "description": "Amount of the regular collection payments",
                      "example": 100
                    },
                    "regularPaymentStartDate": {
                      "type": "string",
                      "description": "Start date of the regular collection payment. Format is yyyy-MM-dd.",
                      "example": "2018-01-10"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when direct-debit collection was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the direct-debit collection. Can be one of ",
                      "example": "PROCESSING"
                    },
                    "externalReference": {
                      "type": "string"
                    },
                    "collectionReference": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/mandates/{id}/cancel": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Cancel Mandate for given mandate-id.",
        "description": "Cancel Mandate for given mandate-id.",
        "operationId": "cancelMandate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Mandate to cancel.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "Reason to cancel the mandate"
                  }
                },
                "description": "Details of Mandate cancellation."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mandate cancelled."
          },
          "400": {
            "description": "Validation errors.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/mandates/bulk-create": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Bulk request of Direct Debit mandates for the given account-id.",
        "operationId": "createBulkMandate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountId",
                  "createMandateRequests",
                  "migrationType"
                ],
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The unique identifier for the account for which the mandates are to be created."
                  },
                  "migrationType": {
                    "type": "string",
                    "description": "The type of migration process that is being initiated.",
                    "enum": [
                      "SCHEDULE_AUDDIS_MIGRATION",
                      "TRANSFER_OF_SUN"
                    ]
                  },
                  "auddisSubmissionDate": {
                    "type": "string",
                    "description": "The scheduled date for the AUDDIS (Automated Direct Debit Instruction Service) submission. This is the date when the mandates will be submitted to the AUDDIS system for processing.",
                    "format": "date"
                  },
                  "createMandateRequests": {
                    "type": "array",
                    "description": "The number of mandate creation requests. Each item in the array represents a request to create an individual mandate with its own set of parameters.",
                    "items": {
                      "required": [
                        "accountName",
                        "accountNumber",
                        "address",
                        "externalReference",
                        "name",
                        "phone",
                        "reference",
                        "sortCode"
                      ],
                      "type": "object",
                      "properties": {
                        "name": {
                          "maxLength": 40,
                          "minLength": 0,
                          "type": "string",
                          "description": "Name for mandate"
                        },
                        "reference": {
                          "maxLength": 18,
                          "minLength": 6,
                          "pattern": "^[a-zA-Z 0-9\\.\\&\\/-]+$",
                          "type": "string",
                          "description": "Mandate reference, should contain only letters, numbers, space, dot, ampersand, forward-slash and hyphen",
                          "example": "REFER-1.2"
                        },
                        "externalReference": {
                          "maxLength": 50,
                          "minLength": 0,
                          "pattern": "[\\w-\\s]*",
                          "type": "string",
                          "description": "External reference for mandate"
                        },
                        "accountName": {
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string",
                          "description": "Payee's account name"
                        },
                        "sortCode": {
                          "pattern": "\\p{Digit}{6}",
                          "type": "string",
                          "description": "Payee's sort code of account for which direct-debit-mandate has to be created.",
                          "example": "000000"
                        },
                        "accountNumber": {
                          "pattern": "\\p{Digit}{8}",
                          "type": "string",
                          "description": "Payee's account number for which direct-debit-mandate has to be created.",
                          "example": "12345678"
                        },
                        "address": {
                          "required": [
                            "addressLine1",
                            "country",
                            "postCode",
                            "postTown"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            },
                            "addressLine2": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            },
                            "postTown": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string"
                            },
                            "postCode": {
                              "maxLength": 8,
                              "minLength": 0,
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        },
                        "phone": {
                          "maxLength": 14,
                          "minLength": 0,
                          "pattern": "\\p{Digit}+",
                          "type": "string",
                          "description": "Payee's phone number"
                        },
                        "email": {
                          "maxLength": 100,
                          "minLength": 0,
                          "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
                          "type": "string",
                          "description": "Payee's email address"
                        },
                        "payeeAccountBid": {
                          "type": "string",
                          "description": "Payee's accountBid"
                        }
                      },
                      "description": "Details of the Direct Debit mandate."
                    }
                  }
                },
                "description": "List of Details of the Direct Debit mandates."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "accountId",
                    "auddisSubmissionDate",
                    "id",
                    "migrationType",
                    "status",
                    "totalMandatesRequested"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for this bulk request.",
                      "example": "R210000001"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique id for account for this bulk request.",
                      "example": "A0000001"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status for this bulk request."
                    },
                    "migrationType": {
                      "type": "string",
                      "description": "Migration type for this bulk request.",
                      "enum": [
                        "SCHEDULE_AUDDIS_MIGRATION",
                        "TRANSFER_OF_SUN"
                      ]
                    },
                    "totalMandatesRequested": {
                      "type": "integer",
                      "description": "Total mandates requested for this bulk request.",
                      "format": "int64"
                    },
                    "auddisSubmissionDate": {
                      "type": "string",
                      "description": "auddis submission date for this bulk request.",
                      "format": "date"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/mandates/bulk-cancel": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Bulk mandate cancellation request for the given account-id.",
        "operationId": "cancelBulkMandate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountId",
                  "mandateIds",
                  "migrationType"
                ],
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The unique identifier for the account for which the mandates are to be cancelled."
                  },
                  "migrationType": {
                    "type": "string",
                    "description": "The type of migration process that is being initiated.",
                    "enum": [
                      "SCHEDULE_AUDDIS_MIGRATION",
                      "TRANSFER_OF_SUN"
                    ]
                  },
                  "auddisCancellationDate": {
                    "type": "string",
                    "description": "The date for the AUDDIS (Automated Direct Debit Instruction Service) cancellation.",
                    "format": "date"
                  },
                  "mandateIds": {
                    "type": "array",
                    "description": "List of mandate ids to be cancelled.",
                    "items": {
                      "type": "string",
                      "description": "List of mandate ids to be cancelled."
                    }
                  }
                },
                "description": "List of the Direct Debit mandates to cancel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "accountId",
                    "auddisCancellationDate",
                    "id",
                    "migrationType",
                    "status",
                    "totalMandatesRequested"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for this bulk request.",
                      "example": "R210000001"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique id for account for this bulk request.",
                      "example": "A0000001"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status for this bulk request."
                    },
                    "migrationType": {
                      "type": "string",
                      "description": "Migration type for this bulk request.",
                      "enum": [
                        "SCHEDULE_AUDDIS_MIGRATION",
                        "TRANSFER_OF_SUN"
                      ]
                    },
                    "totalMandatesRequested": {
                      "type": "integer",
                      "description": "Total mandates requested for this bulk request.",
                      "format": "int64"
                    },
                    "auddisCancellationDate": {
                      "type": "string",
                      "description": "auddis cancellation date for this bulk request.",
                      "format": "date"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/collectionschedules/{id}/cancel": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Cancel a Direct Debit collection schedule for the given collection-id.",
        "operationId": "cancelCollectionSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the collectionSchedule to cancel",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CollectionSchedule cancelled"
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/collections/{id}/cancel": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Cancel a Direct Debit collection for the given collection-id.",
        "operationId": "cancelCollection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the collection to cancel",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection cancelled"
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/collection/{id}/represent": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Represent collection for given collection id",
        "description": "Represent collection for given collection id",
        "operationId": "representCollection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of collection to represent",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection represented"
          },
          "400": {
            "description": "Validation errors.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{id}/mandates": {
      "post": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Create a Direct Debit mandate for the given account-id.",
        "description": "Setting up a Mandate is the first step in creating a Direct Debit. You can only set up scheduled payments ('collections') after there is a Mandate created with the details of the payee.",
        "operationId": "createMandate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of account to create Direct Debit for.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountName",
                  "accountNumber",
                  "address",
                  "externalReference",
                  "name",
                  "phone",
                  "reference",
                  "sortCode"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 40,
                    "minLength": 0,
                    "type": "string",
                    "description": "Name for mandate"
                  },
                  "reference": {
                    "maxLength": 18,
                    "minLength": 6,
                    "pattern": "^[a-zA-Z 0-9\\.\\&\\/-]+$",
                    "type": "string",
                    "description": "Mandate reference, should contain only letters, numbers, space, dot, ampersand, forward-slash and hyphen",
                    "example": "REFER-1.2"
                  },
                  "externalReference": {
                    "maxLength": 50,
                    "minLength": 0,
                    "pattern": "[\\w-\\s]*",
                    "type": "string",
                    "description": "External reference for mandate"
                  },
                  "accountName": {
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string",
                    "description": "Payee's account name"
                  },
                  "sortCode": {
                    "pattern": "\\p{Digit}{6}",
                    "type": "string",
                    "description": "Payee's sort code of account for which direct-debit-mandate has to be created.",
                    "example": "000000"
                  },
                  "accountNumber": {
                    "pattern": "\\p{Digit}{8}",
                    "type": "string",
                    "description": "Payee's account number for which direct-debit-mandate has to be created.",
                    "example": "12345678"
                  },
                  "address": {
                    "required": [
                      "addressLine1",
                      "country",
                      "postCode",
                      "postTown"
                    ],
                    "type": "object",
                    "properties": {
                      "addressLine1": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "addressLine2": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postTown": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                      },
                      "postCode": {
                        "maxLength": 8,
                        "minLength": 0,
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "phone": {
                    "maxLength": 14,
                    "minLength": 0,
                    "pattern": "\\p{Digit}+",
                    "type": "string",
                    "description": "Payee's phone number"
                  },
                  "email": {
                    "maxLength": 100,
                    "minLength": 0,
                    "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
                    "type": "string",
                    "description": "Payee's email address"
                  },
                  "payeeAccountBid": {
                    "type": "string",
                    "description": "Payee's accountBid"
                  }
                },
                "description": "Details of the Direct Debit mandate."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "accountId",
                    "accountNumber",
                    "createdDate",
                    "externalReference",
                    "id",
                    "nextValidCollectionDate",
                    "reference",
                    "sortCode",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for direct-debit-mandate.",
                      "example": "G0000001"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique id for account for this mandate.",
                      "example": "A0000001"
                    },
                    "reference": {
                      "type": "string",
                      "description": "DDI reference that was used during creation."
                    },
                    "externalReference": {
                      "type": "string",
                      "description": "External reference that was used during creation (appears on the bank statement)."
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when direct-debit-mandate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the direct-debit-mandate. mandates must be 'ACTIVE' to make collections. Can be one of ",
                      "example": "ACTIVE"
                    },
                    "nextValidCollectionDate": {
                      "type": "string",
                      "description": "The earliest date a collection can be created. Format is yyyy-MM-dd.",
                      "example": "2018-01-10"
                    },
                    "Name given on Mandate": {
                      "type": "string"
                    },
                    "Address given on Mandate": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        },
                        "addressLine2": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        },
                        "postTown": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        },
                        "postCode": {
                          "maxLength": 8,
                          "minLength": 0,
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "sortCode": {
                      "type": "string",
                      "description": "Sort Code of the account for which direct-debit-mandate has been created.",
                      "example": "123456"
                    },
                    "accountNumber": {
                      "type": "string",
                      "description": "Account Number for which direct-debit-mandate has been created.",
                      "example": "87654321"
                    },
                    "payeeAccountBid": {
                      "type": "string",
                      "description": "Unique id for individual recipient account used for internal transfers",
                      "example": "A0000001"
                    },
                    "bulkCreateRequestId": {
                      "type": "string",
                      "description": "Id associate to the bulk create request of this mandate.",
                      "example": "R210000005"
                    },
                    "bulkCancelRequestId": {
                      "type": "string",
                      "description": "Id associate to the bulk cancel request of this mandate.",
                      "example": "R210000006"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/reconciliations": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Get Reconciliations based on search criteria.",
        "description": "Use this endpoint to get a list of Reconciliations for a given account and date.",
        "operationId": "getReconciliations",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Id(s) of account to fetch Reconciliations for.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Id(s) of account to fetch Reconciliations for."
            }
          },
          {
            "name": "collectionDate",
            "in": "query",
            "description": "Reconciliation entry for date.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Reconciliation entry for date."
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(id|createdDate)",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(asc|desc)",
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "reconciliationId": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "string"
                          },
                          "collectionDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "notifiedDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "schemeDetails": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/mandates": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Get Mandates based on search criteria.",
        "description": "If trying to find one or several particular mandates, then you can narrow down your search by using the filters available here. These include the mandate id, either the submitted or created date range, the account name on the mandate, etc...",
        "operationId": "getMandates",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "description": "Id(s) of Mandate(s) to fetch.",
              "items": {
                "type": "string",
                "description": "Id(s) of Mandate(s) to fetch."
              }
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "description": "Id(s) of account to fetch Mandates for.",
              "items": {
                "type": "string",
                "description": "Id(s) of account to fetch Mandates for."
              }
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query parameter. ID, name or reference of mandate to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Query parameter. ID, name or reference of mandate to search for"
            }
          },
          {
            "name": "fromCreatedDate",
            "in": "query",
            "description": "Mandates created on or after this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Mandates created on or after this date."
            }
          },
          {
            "name": "toCreatedDate",
            "in": "query",
            "description": "Mandates created on or before this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Mandates created on or before this date."
            }
          },
          {
            "name": "fromSubmittedDate",
            "in": "query",
            "description": "Mandates submitted on or after this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Mandates submitted on or after this date."
            }
          },
          {
            "name": "toSubmittedDate",
            "in": "query",
            "description": "Mandates submitted on or before this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Mandates submitted on or before this date."
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "description": "Status of the Mandate",
              "items": {
                "type": "string",
                "description": "Status of the Mandate",
                "enum": [
                  "PENDING",
                  "SUBMITTED",
                  "ACTIVE",
                  "SUSPENDED",
                  "REJECTED",
                  "CANCELLED",
                  "INVALID_REQUEST"
                ]
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Account Name on the Mandate",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Account Name on the Mandate"
            }
          },
          {
            "name": "reference",
            "in": "query",
            "description": "reference of the Mandate",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "reference of the Mandate"
            }
          },
          {
            "name": "externalReference",
            "in": "query",
            "description": "externalReference of the Mandate",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "externalReference of the Mandate"
            }
          },
          {
            "name": "bulkCreateRequestId",
            "in": "query",
            "description": "Bulk create request ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Bulk create request ID"
            }
          },
          {
            "name": "bulkCancelRequestId",
            "in": "query",
            "description": "Bulk cancel request ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Bulk cancel request ID"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "id|createdDate|submittedDate|status|name|reference|externalReference",
              "type": "string",
              "description": "Sort by field"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Sort order",
              "example": "asc"
            },
            "example": "asc"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (zero-indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "string",
              "description": "Page to fetch (zero-indexed)"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "string",
              "description": "Size of page to fetch."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "accountId",
                          "accountNumber",
                          "createdDate",
                          "externalReference",
                          "id",
                          "nextValidCollectionDate",
                          "reference",
                          "sortCode",
                          "status"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for direct-debit-mandate.",
                            "example": "G0000001"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Unique id for account for this mandate.",
                            "example": "A0000001"
                          },
                          "reference": {
                            "type": "string",
                            "description": "DDI reference that was used during creation."
                          },
                          "externalReference": {
                            "type": "string",
                            "description": "External reference that was used during creation (appears on the bank statement)."
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "Datetime when direct-debit-mandate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the direct-debit-mandate. mandates must be 'ACTIVE' to make collections. Can be one of ",
                            "example": "ACTIVE"
                          },
                          "nextValidCollectionDate": {
                            "type": "string",
                            "description": "The earliest date a collection can be created. Format is yyyy-MM-dd.",
                            "example": "2018-01-10"
                          },
                          "Name given on Mandate": {
                            "type": "string"
                          },
                          "Address given on Mandate": {
                            "required": [
                              "addressLine1",
                              "country",
                              "postCode",
                              "postTown"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string"
                              },
                              "addressLine2": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string"
                              },
                              "postTown": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string"
                              },
                              "postCode": {
                                "maxLength": 8,
                                "minLength": 0,
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          },
                          "sortCode": {
                            "type": "string",
                            "description": "Sort Code of the account for which direct-debit-mandate has been created.",
                            "example": "123456"
                          },
                          "accountNumber": {
                            "type": "string",
                            "description": "Account Number for which direct-debit-mandate has been created.",
                            "example": "87654321"
                          },
                          "payeeAccountBid": {
                            "type": "string",
                            "description": "Unique id for individual recipient account used for internal transfers",
                            "example": "A0000001"
                          },
                          "bulkCreateRequestId": {
                            "type": "string",
                            "description": "Id associate to the bulk create request of this mandate.",
                            "example": "R210000005"
                          },
                          "bulkCancelRequestId": {
                            "type": "string",
                            "description": "Id associate to the bulk cancel request of this mandate.",
                            "example": "R210000006"
                          }
                        }
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/collectionschedules": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Get all collectionschedules for a mandate",
        "description": "By supplying the mandate id you can view all information regarding the collection schedules linked to that mandate.",
        "operationId": "getCollectionSchedules",
        "parameters": [
          {
            "name": "mandateId",
            "in": "query",
            "description": "Mandate Id to fetch collections for.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "id|createdDate|payment|status|externalReference",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (zero-indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "createdDate",
                          "frequency",
                          "id",
                          "numberOfPayments",
                          "status"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for direct-debit collection.",
                            "example": "Q0000001"
                          },
                          "frequency": {
                            "type": "string",
                            "description": "Frequency for direct-debit collection",
                            "example": "MONTHLY"
                          },
                          "numberOfPayments": {
                            "type": "integer",
                            "description": "Number of payments for direct-debit collection",
                            "format": "int32",
                            "example": 12
                          },
                          "firstPaymentAmount": {
                            "type": "number",
                            "description": "Amount of the first collection payment",
                            "example": 100
                          },
                          "firstPaymentDate": {
                            "type": "string",
                            "description": "Date of the first collection payment. Format is yyyy-MM-dd.",
                            "example": "2018-01-10"
                          },
                          "regularPaymentAmount": {
                            "type": "number",
                            "description": "Amount of the regular collection payments",
                            "example": 100
                          },
                          "regularPaymentStartDate": {
                            "type": "string",
                            "description": "Start date of the regular collection payment. Format is yyyy-MM-dd.",
                            "example": "2018-01-10"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "Datetime when direct-debit collection was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the direct-debit collection. Can be one of ",
                            "example": "PROCESSING"
                          },
                          "externalReference": {
                            "type": "string"
                          },
                          "collectionReference": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Get all collection activities of an account",
        "description": "Once a collection schedule is set up, any past collections (whether successful or not) can be retrieved.\nThis endpoint supports only paginated responses with the default page size of 20 (min 1, max 500).\n",
        "operationId": "getCollections",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Account Id to fetch collections items for.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mandateId",
            "in": "query",
            "description": "Id of mandate whose the collection to fetch.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "type of collection to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Collection activities happened on or after this date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Collection item activities happened on or before this date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(asc|desc)",
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(id|createdDate|activityDate)",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "activityDate",
                          "amount",
                          "id",
                          "mandateId",
                          "message",
                          "originalActivityDate",
                          "payerName",
                          "reconciliationDate",
                          "reconciliationReference",
                          "status",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique id for a direct-debit collection",
                            "example": "K000100100"
                          },
                          "mandateId": {
                            "type": "string",
                            "description": "Unique id for direct-debit mandate.",
                            "example": "G0000001"
                          },
                          "collectionScheduleId": {
                            "type": "string",
                            "description": "Unique id for direct-debit collection schedule for which triggered the collection",
                            "example": "Q9200001"
                          },
                          "activityDate": {
                            "type": "string",
                            "description": "collection or reportRaised date for indemnity???",
                            "example": "2018-01-09"
                          },
                          "amount": {
                            "type": "number",
                            "description": "Amount of the collection payment",
                            "example": 100
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the collection activity.  Can be one of ",
                            "example": "COLLECTION"
                          },
                          "payerName": {
                            "type": "string",
                            "description": "Name of the payer",
                            "example": "Mr John Doe"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the collection.  Can be one of ",
                            "example": "FAILED"
                          },
                          "message": {
                            "type": "string",
                            "description": "Failure description of the payment activity",
                            "example": "Instruction Cancelled"
                          },
                          "originalActivityDate": {
                            "type": "string",
                            "description": "The original scheduled date for a payment to be collected",
                            "example": "2018-01-09"
                          },
                          "reconciliationDate": {
                            "type": "string",
                            "description": "The reconciled date for a payment to be collected",
                            "example": "2018-01-09"
                          },
                          "reconciliationReference": {
                            "type": "string",
                            "description": "The reconciled reference that links to a payment",
                            "example": "2018-01-09"
                          },
                          "ddiReference": {
                            "type": "string",
                            "description": "collectionReference - if present - is appended to the original DDI reference\n(used during mandate creation - referred to as core reference) for the specified scheduled collection\nwithout altering the original mandate core reference. This will be visible to the payer on their account.\nThe reference and collectionReference combined have 18 character limit and can only contain alphanumeric\ncharacters with underscore, hyphen and space permitted",
                            "example": "ABCD-EFGH"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/authentication": {
      "put": {
        "tags": [
          "Cards"
        ],
        "summary": "Update card authentication",
        "description": "Support knowledge based authentication (KBA)",
        "operationId": "updateCardAuthentication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card which has authentication information to be updated",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "knowledgeBase"
                ],
                "type": "object",
                "properties": {
                  "knowledgeBase": {
                    "type": "array",
                    "description": "3DS Knowledge-Based Authentication (KBA) answers",
                    "items": {
                      "required": [
                        "answer",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "3DS knowledge-based authentication answer type",
                          "enum": [
                            "FIRST_PET_NAME",
                            "MATERNAL_GRANDMOTHER_MAIDEN_NAME",
                            "FAVOURITE_CHILDHOOD_FRIEND",
                            "FIRST_CAR",
                            "CITY_PARENTS_MET"
                          ]
                        },
                        "answer": {
                          "maxLength": 45,
                          "minLength": 1,
                          "type": "string",
                          "description": "3DS knowledge-based authentication answer"
                        }
                      },
                      "description": "3DS Knowledge-Based Authentication (KBA) answers"
                    }
                  }
                },
                "description": "Authentication"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Card authentication updated"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/partners/{partnerId}/card-report-types/{reportType}/notifications": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Retrieve card report type notification configuration for partner",
        "operationId": "getNotificationConfigurationsForAGivenPartnerAndReportType",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id of partner to retrieve report type notification configuration for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "description": "Type of report partner wants to retrieve notification configuration for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY_CARD_ACTIVITY",
                "MONTHLY_CARD_ACTIVITY",
                "DAILY_ACCOUNT_FUNDING",
                "MONTHLY_ACCOUNT_FUNDING",
                "DAILY_AUTH_WINDOW"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved report type notification configuration for partner",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Partner can not access this data",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Update report type notification configuration for partner",
        "operationId": "updateNotificationConfigurationsForAGivenPartnerAndReportType",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id of partner to set up notification for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "description": "Type of report partner wants notification sent for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY_CARD_ACTIVITY",
                "MONTHLY_CARD_ACTIVITY",
                "DAILY_ACCOUNT_FUNDING",
                "MONTHLY_ACCOUNT_FUNDING",
                "DAILY_AUTH_WINDOW"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Notification request containing the emails to send the report to"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Updated report type notification configuration for partner"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Partner can not update this data"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Delete card report notification configuration for partner and report type",
        "operationId": "deleteAllNotificationConfigurationsForAGivenPartnerAndReportType",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id of partner to remove notification for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "description": "Type of report partner is unsubscribing notification for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY_CARD_ACTIVITY",
                "MONTHLY_CARD_ACTIVITY",
                "DAILY_ACCOUNT_FUNDING",
                "MONTHLY_ACCOUNT_FUNDING",
                "DAILY_AUTH_WINDOW"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted report type notification configuration for partner"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Partner can not update this data"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/partners/{partnerId}/card-report-types/{reportType}/notifications/status": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Toggle card report notification for partner and report type",
        "operationId": "toggleNotificationsForAGivenPartnerAndReportType",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id of partner to toggle notification for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "description": "Type of report partner wants notification toggled for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY_CARD_ACTIVITY",
                "MONTHLY_CARD_ACTIVITY",
                "DAILY_ACCOUNT_FUNDING",
                "MONTHLY_ACCOUNT_FUNDING",
                "DAILY_AUTH_WINDOW"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "status"
                ],
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "status"
                  }
                },
                "description": "Notification request containing the status of the notification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Toggled notifications for partner and report type"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Partner can not edit this data"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/partner/{partnerId}/bulk-card-custom-fields": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Bulk create partner custom field keys",
        "description": "Bulk create partner custom field keys",
        "operationId": "bulkCreatePartnerCustomFieldKeys",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id of partner to create custom fields for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customFields"
                ],
                "type": "object",
                "properties": {
                  "customFields": {
                    "maxItems": 20,
                    "minItems": 1,
                    "type": "array",
                    "description": "Custom fields",
                    "items": {
                      "required": [
                        "key",
                        "required"
                      ],
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Custom field key"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Whether the custom field is required or not"
                        }
                      },
                      "description": "Custom fields"
                    }
                  }
                },
                "description": "Bulk create custom field keys request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Custom field keys created successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customers/{customerId}/card-report-types/{reportType}/notifications": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Retrieve card report type notification configuration for customer",
        "operationId": "getNotificationConfigurationsForAGivenCustomerAndReportType",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to retrieve report type notification configuration for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "description": "Type of report customer wants to retrieve notification configuration for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY_CARD_ACTIVITY",
                "MONTHLY_CARD_ACTIVITY",
                "DAILY_ACCOUNT_FUNDING",
                "MONTHLY_ACCOUNT_FUNDING",
                "DAILY_AUTH_WINDOW"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved report type notification configuration for customer",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Customer can not access this data",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Update report type notification configuration for customer",
        "operationId": "updateNotificationConfigurationsForAGivenCustomerAndReportType",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to set up notification for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "description": "Type of report customer wants notification sent for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY_CARD_ACTIVITY",
                "MONTHLY_CARD_ACTIVITY",
                "DAILY_ACCOUNT_FUNDING",
                "MONTHLY_ACCOUNT_FUNDING",
                "DAILY_AUTH_WINDOW"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Notification request containing the emails to send the report to"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created report type notification configuration for customer"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Customer can not create this data"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Delete card report notification configuration for customer and report type",
        "operationId": "deleteAllNotificationConfigurationsForAGivenCustomerAndReportType",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to remove notification for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "description": "Type of report customer is unsubscribing notification for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY_CARD_ACTIVITY",
                "MONTHLY_CARD_ACTIVITY",
                "DAILY_ACCOUNT_FUNDING",
                "MONTHLY_ACCOUNT_FUNDING",
                "DAILY_AUTH_WINDOW"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted report type notification configuration for customer"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Customer can not update this data"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customers/{customerId}/card-report-types/{reportType}/notifications/status": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Toggled notifications for customer and card report type",
        "operationId": "toggleNotificationsForAGivenCustomerAndReportType",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to toggle notification for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "description": "Type of report customer wants notification toggled for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY_CARD_ACTIVITY",
                "MONTHLY_CARD_ACTIVITY",
                "DAILY_ACCOUNT_FUNDING",
                "MONTHLY_ACCOUNT_FUNDING",
                "DAILY_AUTH_WINDOW"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "status"
                ],
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "status"
                  }
                },
                "description": "Notification request containing the status of the notification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Toggled notifications for customer and report type"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Customer can not edit this data"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customer/{customerId}/bulk-card-custom-fields": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Bulk create customer custom field keys",
        "description": "Bulk create customer custom field keys",
        "operationId": "bulkCreateCustomerCustomFieldKeys",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to create custom fields for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customFields"
                ],
                "type": "object",
                "properties": {
                  "customFields": {
                    "maxItems": 20,
                    "minItems": 1,
                    "type": "array",
                    "description": "Custom fields",
                    "items": {
                      "required": [
                        "key",
                        "required"
                      ],
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Custom field key"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Whether the custom field is required or not"
                        }
                      },
                      "description": "Custom fields"
                    }
                  }
                },
                "description": "Bulk create custom field keys request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Custom field keys created successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "View the details of an existing card",
        "operationId": "getCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card to view",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Card identifier. Maximum of 10 alphanumeric characters",
                      "example": "V000000001"
                    },
                    "holder": {
                      "required": [
                        "billingAddress",
                        "dateOfBirth",
                        "firstName",
                        "lastName",
                        "mobileNumber"
                      ],
                      "type": "object",
                      "properties": {
                        "title": {
                          "pattern": "^[0-9a-zA-Z]{1,4}$",
                          "type": "string",
                          "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                          "example": "Mr"
                        },
                        "firstName": {
                          "pattern": "[\\x20-\\x7e]{1,20}",
                          "type": "string",
                          "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                          "example": "Joe"
                        },
                        "lastName": {
                          "pattern": "[\\x20-\\x7e]{1,20}",
                          "type": "string",
                          "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                          "example": "Bloggs"
                        },
                        "billingAddress": {
                          "required": [
                            "addressLine1",
                            "country",
                            "postCode",
                            "postTown"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "maxLength": 50,
                              "minLength": 1,
                              "type": "string",
                              "description": "First line of address",
                              "example": "Floor 10"
                            },
                            "addressLine2": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string",
                              "description": "Second line of address",
                              "example": "80 George Street"
                            },
                            "postTown": {
                              "maxLength": 20,
                              "minLength": 1,
                              "type": "string",
                              "description": "Post town",
                              "example": "EDINBURGH"
                            },
                            "postCode": {
                              "maxLength": 10,
                              "minLength": 1,
                              "type": "string",
                              "description": "Postcode",
                              "example": "EH2 3BU"
                            },
                            "country": {
                              "type": "string",
                              "description": "Country (ISO 3166 alpha-2 country code)",
                              "example": "GB",
                              "enum": [
                                "AT",
                                "BE",
                                "BG",
                                "CY",
                                "CZ",
                                "DK",
                                "EE",
                                "FI",
                                "FR",
                                "DE",
                                "GR",
                                "HR",
                                "HU",
                                "IS",
                                "IE",
                                "IT",
                                "LV",
                                "LI",
                                "LT",
                                "LU",
                                "MT",
                                "NL",
                                "NO",
                                "PL",
                                "PT",
                                "RO",
                                "SK",
                                "SI",
                                "ES",
                                "SE",
                                "AX",
                                "AW",
                                "BL",
                                "CW",
                                "GF",
                                "GL",
                                "GP",
                                "ME",
                                "MF",
                                "MQ",
                                "NC",
                                "PF",
                                "PM",
                                "RE",
                                "SX",
                                "TF",
                                "WF",
                                "YT",
                                "AI",
                                "BM",
                                "FK",
                                "GB",
                                "GG",
                                "GI",
                                "GS",
                                "IO",
                                "JE",
                                "KY",
                                "MS",
                                "PN",
                                "SH",
                                "TC",
                                "VG"
                              ]
                            }
                          },
                          "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                          "format": "date",
                          "example": "2001-01-01"
                        },
                        "mobileNumber": {
                          "type": "string",
                          "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                          "example": "+447123456000"
                        },
                        "email": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Cardholder email",
                          "example": "cardholder@example.com"
                        }
                      },
                      "description": "CardHolder"
                    },
                    "expiry": {
                      "type": "string",
                      "description": "An ISO 8601 date with year & month components only",
                      "example": "2018-12"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current state of the card."
                    },
                    "currency": {
                      "type": "string",
                      "description": "A 3 letter ISO 4217 code representing the card currency",
                      "example": "GBP"
                    },
                    "limit": {
                      "type": "string",
                      "description": "Total card authorisation limit",
                      "example": "1000.0"
                    },
                    "maxLimit": {
                      "type": "string",
                      "description": "Maximum limit which can be set on this card and is the maximum lifetime spend the card can have",
                      "example": "4000.0"
                    },
                    "spend": {
                      "type": "string",
                      "description": "Current total of all authorisations on this card",
                      "example": "250.0"
                    },
                    "externalRef": {
                      "type": "string",
                      "description": "Client reference for the newly created card. Maximum of 50 characters.",
                      "example": "TTQ_51211"
                    },
                    "maskedPan": {
                      "type": "string",
                      "description": "Masked card PAN",
                      "example": "527095******3544"
                    },
                    "cardType": {
                      "type": "string",
                      "description": "Card product type",
                      "example": "Business"
                    },
                    "cardScheme": {
                      "type": "string",
                      "description": "Card scheme. MASTERCARD or VISA",
                      "example": "MASTERCARD"
                    },
                    "accountBid": {
                      "type": "string",
                      "description": "Account identifier",
                      "example": "A020N8PD"
                    },
                    "productId": {
                      "type": "string",
                      "description": "Product identifier",
                      "example": "O210003A"
                    },
                    "format": {
                      "type": "string",
                      "description": "The format of the card.  PHYSICAL or VIRTUAL",
                      "example": "PHYSICAL",
                      "enum": [
                        "PHYSICAL",
                        "VIRTUAL"
                      ]
                    },
                    "constraints": {
                      "required": [
                        "mccWhitelist"
                      ],
                      "type": "object",
                      "properties": {
                        "mccWhitelist": {
                          "type": "array",
                          "description": "mccWhitelist",
                          "example": [
                            "1000",
                            "1002-3000",
                            "5060"
                          ],
                          "items": {
                            "type": "string",
                            "description": "mccWhitelist",
                            "example": "[\"1000\",\"1002-3000\",\"5060\"]"
                          }
                        },
                        "authorisation": {
                          "type": "object",
                          "properties": {
                            "spend": {
                              "type": "array",
                              "description": "Spending constraints",
                              "items": {
                                "required": [
                                  "currency"
                                ],
                                "type": "object",
                                "properties": {
                                  "currency": {
                                    "type": "string",
                                    "description": "A 3 letter ISO 4217 code representing the transaction currency",
                                    "example": "GBP",
                                    "enum": [
                                      "GBP",
                                      "EUR",
                                      "AED",
                                      "AFN",
                                      "ALL",
                                      "AMD",
                                      "ANG",
                                      "AOA",
                                      "ARS",
                                      "AUD",
                                      "AWG",
                                      "AZN",
                                      "BAM",
                                      "BBD",
                                      "BDT",
                                      "BGN",
                                      "BHD",
                                      "BIF",
                                      "BMD",
                                      "BND",
                                      "BOB",
                                      "BOV",
                                      "BRL",
                                      "BSD",
                                      "BTN",
                                      "BWP",
                                      "BYN",
                                      "BZD",
                                      "CAD",
                                      "CDF",
                                      "CHE",
                                      "CHF",
                                      "CHW",
                                      "CLF",
                                      "CLP",
                                      "CNY",
                                      "COP",
                                      "COU",
                                      "CRC",
                                      "CUC",
                                      "CUP",
                                      "CVE",
                                      "CZK",
                                      "DJF",
                                      "DKK",
                                      "DOP",
                                      "DZD",
                                      "EGP",
                                      "ERN",
                                      "ETB",
                                      "FJD",
                                      "FKP",
                                      "GEL",
                                      "GHS",
                                      "GIP",
                                      "GMD",
                                      "GNF",
                                      "GTQ",
                                      "GYD",
                                      "HKD",
                                      "HNL",
                                      "HRK",
                                      "HTG",
                                      "HUF",
                                      "IDR",
                                      "ILS",
                                      "INR",
                                      "IQD",
                                      "IRR",
                                      "ISK",
                                      "JMD",
                                      "JOD",
                                      "JPY",
                                      "KES",
                                      "KGS",
                                      "KHR",
                                      "KMF",
                                      "KPW",
                                      "KRW",
                                      "KWD",
                                      "KYD",
                                      "KZT",
                                      "LAK",
                                      "LBP",
                                      "LKR",
                                      "LRD",
                                      "LSL",
                                      "LYD",
                                      "MAD",
                                      "MDL",
                                      "MGA",
                                      "MKD",
                                      "MMK",
                                      "MNT",
                                      "MOP",
                                      "MRU",
                                      "MUR",
                                      "MVR",
                                      "MWK",
                                      "MXN",
                                      "MXV",
                                      "MYR",
                                      "MZN",
                                      "NAD",
                                      "NGN",
                                      "NIO",
                                      "NOK",
                                      "NPR",
                                      "NZD",
                                      "OMR",
                                      "PAB",
                                      "PEN",
                                      "PGK",
                                      "PHP",
                                      "PKR",
                                      "PLN",
                                      "PYG",
                                      "QAR",
                                      "RON",
                                      "RSD",
                                      "RUB",
                                      "RWF",
                                      "SAR",
                                      "SBD",
                                      "SCR",
                                      "SDG",
                                      "SEK",
                                      "SGD",
                                      "SLE",
                                      "SLL",
                                      "SOS",
                                      "SRD",
                                      "SSP",
                                      "STN",
                                      "SVC",
                                      "SYP",
                                      "SZL",
                                      "SHP",
                                      "THB",
                                      "TJS",
                                      "TMT",
                                      "TND",
                                      "TOP",
                                      "TRY",
                                      "TTD",
                                      "TWD",
                                      "TZS",
                                      "UAH",
                                      "UGX",
                                      "USD",
                                      "USN",
                                      "UYI",
                                      "UYU",
                                      "UYW",
                                      "UZS",
                                      "VES",
                                      "VND",
                                      "VUV",
                                      "WST",
                                      "XAF",
                                      "XAG",
                                      "XAU",
                                      "XBA",
                                      "XBB",
                                      "XBC",
                                      "XBD",
                                      "XCD",
                                      "XDR",
                                      "XOF",
                                      "XPD",
                                      "XPF",
                                      "XPT",
                                      "XSU",
                                      "XTS",
                                      "XUA",
                                      "XXX",
                                      "YER",
                                      "ZAR",
                                      "ZMW",
                                      "ZWL"
                                    ]
                                  },
                                  "min": {
                                    "type": "number",
                                    "description": "Minimum spend amount (inclusive)",
                                    "example": 5
                                  },
                                  "max": {
                                    "type": "number",
                                    "description": "Maximum spend amount (inclusive)",
                                    "example": 2000
                                  }
                                },
                                "description": "Spending constraints"
                              }
                            }
                          },
                          "description": "Authorisation constraints"
                        }
                      },
                      "description": "CardConstraints"
                    },
                    "design": {
                      "required": [
                        "cardRef",
                        "packagingRef"
                      ],
                      "type": "object",
                      "properties": {
                        "cardRef": {
                          "type": "string",
                          "description": "Design reference for card"
                        },
                        "packagingRef": {
                          "type": "string",
                          "description": "Design reference for card packaging"
                        }
                      },
                      "description": "Design references for physical card and packaging"
                    },
                    "printedName": {
                      "type": "string",
                      "description": "Name printed on the card. Will only be returned for physical cards. Maximum of 20 alphanumeric characters (including full stop, hyphen, apostrophe, caret and space)"
                    },
                    "cancellationDate": {
                      "type": "string",
                      "description": "Date card will be cancelled on",
                      "example": "2025-01-01"
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "threeDSecureStatus": {
                      "type": "string",
                      "description": "The 3DS status of the card, based on the SMS one time password",
                      "example": "ENROLLED",
                      "deprecated": true,
                      "enum": [
                        "NOT_ENROLLED",
                        "ENROLLED",
                        "UNENROLLED"
                      ]
                    },
                    "authentication": {
                      "type": "object",
                      "properties": {
                        "otpSmsStatus": {
                          "type": "string",
                          "description": "The SMS one time password authentication status",
                          "example": "ENROLLED",
                          "enum": [
                            "NOT_ENROLLED",
                            "ENROLLED",
                            "UNENROLLED"
                          ]
                        },
                        "knowledgeBaseStatus": {
                          "type": "string",
                          "description": "The knowledge based authentication (KBA) status",
                          "example": "ENROLLED",
                          "enum": [
                            "NOT_ENROLLED",
                            "ENROLLED",
                            "UNENROLLED"
                          ]
                        }
                      },
                      "description": "The 3DS authentication method statuses"
                    },
                    "shippingAddress": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "maxLength": 50,
                          "minLength": 1,
                          "type": "string",
                          "description": "First line of address",
                          "example": "Floor 10"
                        },
                        "addressLine2": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Second line of address",
                          "example": "80 George Street"
                        },
                        "postTown": {
                          "maxLength": 20,
                          "minLength": 1,
                          "type": "string",
                          "description": "Post town",
                          "example": "EDINBURGH"
                        },
                        "postCode": {
                          "maxLength": 10,
                          "minLength": 1,
                          "type": "string",
                          "description": "Postcode",
                          "example": "EH2 3BU"
                        },
                        "country": {
                          "type": "string",
                          "description": "Country (ISO 3166 alpha-2 country code)",
                          "example": "GB",
                          "enum": [
                            "AT",
                            "BE",
                            "BG",
                            "CY",
                            "CZ",
                            "DK",
                            "EE",
                            "FI",
                            "FR",
                            "DE",
                            "GR",
                            "HR",
                            "HU",
                            "IS",
                            "IE",
                            "IT",
                            "LV",
                            "LI",
                            "LT",
                            "LU",
                            "MT",
                            "NL",
                            "NO",
                            "PL",
                            "PT",
                            "RO",
                            "SK",
                            "SI",
                            "ES",
                            "SE",
                            "AX",
                            "AW",
                            "BL",
                            "CW",
                            "GF",
                            "GL",
                            "GP",
                            "ME",
                            "MF",
                            "MQ",
                            "NC",
                            "PF",
                            "PM",
                            "RE",
                            "SX",
                            "TF",
                            "WF",
                            "YT",
                            "AI",
                            "BM",
                            "FK",
                            "GB",
                            "GG",
                            "GI",
                            "GS",
                            "IO",
                            "JE",
                            "KY",
                            "MS",
                            "PN",
                            "SH",
                            "TC",
                            "VG"
                          ]
                        }
                      },
                      "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                    },
                    "customFields": {
                      "type": "array",
                      "description": "Custom fields currently defined for card",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Custom field key"
                          },
                          "value": {
                            "type": "string",
                            "description": "Custom field value"
                          }
                        },
                        "description": "Custom fields currently defined for card"
                      }
                    },
                    "authWindow": {
                      "type": "object",
                      "properties": {
                        "startDate": {
                          "type": "string",
                          "description": "Authorisation window start date",
                          "format": "date-time"
                        },
                        "endDate": {
                          "type": "string",
                          "description": "Authorisation window end date",
                          "format": "date-time"
                        }
                      },
                      "description": "Authorisation window defined for card"
                    },
                    "channelManagerId": {
                      "type": "string",
                      "description": "Channel Manager identifier",
                      "example": "M883412312"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Update a card",
        "description": "Update card and cardholder details",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card to be updated",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "number",
                    "description": "Total card authorisation limit.",
                    "example": 1000
                  },
                  "cancellationDate": {
                    "type": "string",
                    "description": "ISO 8601 date with year, month & day components only. The supplied value must be in the future and at most 1 day before the expiry date.",
                    "example": "2025-01-01"
                  },
                  "holder": {
                    "type": "object",
                    "properties": {
                      "billingAddress": {
                        "required": [
                          "addressLine1",
                          "country",
                          "postCode",
                          "postTown"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string",
                            "description": "First line of address",
                            "example": "Floor 10"
                          },
                          "addressLine2": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Second line of address",
                            "example": "80 George Street"
                          },
                          "postTown": {
                            "maxLength": 20,
                            "minLength": 1,
                            "type": "string",
                            "description": "Post town",
                            "example": "EDINBURGH"
                          },
                          "postCode": {
                            "maxLength": 10,
                            "minLength": 1,
                            "type": "string",
                            "description": "Postcode",
                            "example": "EH2 3BU"
                          },
                          "country": {
                            "type": "string",
                            "description": "Country (ISO 3166 alpha-2 country code)",
                            "example": "GB",
                            "enum": [
                              "AT",
                              "BE",
                              "BG",
                              "CY",
                              "CZ",
                              "DK",
                              "EE",
                              "FI",
                              "FR",
                              "DE",
                              "GR",
                              "HR",
                              "HU",
                              "IS",
                              "IE",
                              "IT",
                              "LV",
                              "LI",
                              "LT",
                              "LU",
                              "MT",
                              "NL",
                              "NO",
                              "PL",
                              "PT",
                              "RO",
                              "SK",
                              "SI",
                              "ES",
                              "SE",
                              "AX",
                              "AW",
                              "BL",
                              "CW",
                              "GF",
                              "GL",
                              "GP",
                              "ME",
                              "MF",
                              "MQ",
                              "NC",
                              "PF",
                              "PM",
                              "RE",
                              "SX",
                              "TF",
                              "WF",
                              "YT",
                              "AI",
                              "BM",
                              "FK",
                              "GB",
                              "GG",
                              "GI",
                              "GS",
                              "IO",
                              "JE",
                              "KY",
                              "MS",
                              "PN",
                              "SH",
                              "TC",
                              "VG"
                            ]
                          }
                        },
                        "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                      },
                      "shippingAddress": {
                        "required": [
                          "addressLine1",
                          "country",
                          "postCode",
                          "postTown"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string",
                            "description": "First line of address",
                            "example": "Floor 10"
                          },
                          "addressLine2": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Second line of address",
                            "example": "80 George Street"
                          },
                          "postTown": {
                            "maxLength": 20,
                            "minLength": 1,
                            "type": "string",
                            "description": "Post town",
                            "example": "EDINBURGH"
                          },
                          "postCode": {
                            "maxLength": 10,
                            "minLength": 1,
                            "type": "string",
                            "description": "Postcode",
                            "example": "EH2 3BU"
                          },
                          "country": {
                            "type": "string",
                            "description": "Country (ISO 3166 alpha-2 country code)",
                            "example": "GB",
                            "enum": [
                              "AT",
                              "BE",
                              "BG",
                              "CY",
                              "CZ",
                              "DK",
                              "EE",
                              "FI",
                              "FR",
                              "DE",
                              "GR",
                              "HR",
                              "HU",
                              "IS",
                              "IE",
                              "IT",
                              "LV",
                              "LI",
                              "LT",
                              "LU",
                              "MT",
                              "NL",
                              "NO",
                              "PL",
                              "PT",
                              "RO",
                              "SK",
                              "SI",
                              "ES",
                              "SE",
                              "AX",
                              "AW",
                              "BL",
                              "CW",
                              "GF",
                              "GL",
                              "GP",
                              "ME",
                              "MF",
                              "MQ",
                              "NC",
                              "PF",
                              "PM",
                              "RE",
                              "SX",
                              "TF",
                              "WF",
                              "YT",
                              "AI",
                              "BM",
                              "FK",
                              "GB",
                              "GG",
                              "GI",
                              "GS",
                              "IO",
                              "JE",
                              "KY",
                              "MS",
                              "PN",
                              "SH",
                              "TC",
                              "VG"
                            ]
                          }
                        },
                        "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                      },
                      "dateOfBirth": {
                        "type": "string",
                        "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Must be NULL for individual customers.",
                        "format": "date",
                        "example": "2001-01-01"
                      },
                      "mobileNumber": {
                        "type": "string",
                        "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                        "example": "+447123456000"
                      },
                      "email": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Cardholder email",
                        "example": "cardholder@example.com"
                      }
                    },
                    "description": "CardHolder"
                  },
                  "authWindow": {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "type": "string",
                        "example": "2025-01-01"
                      },
                      "endDate": {
                        "type": "string",
                        "example": "2025-01-01"
                      }
                    },
                    "description": "Authorisation Windows allow the card holder to add a period of time where the card can ONLY be used, if an Authorisation Window set then transactions outside this window will decline. ISO 8601 date with year, month & day components only."
                  }
                },
                "description": "Update card"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Card updated successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Cards"
        ],
        "summary": "Update card",
        "description": "Update card - for now, the removal of cancellationDate, authWindowStartDate and authWindowEndDate fields is the only allowed action",
        "operationId": "updateCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "required": [
                    "op",
                    "path"
                  ],
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "example": "/{nameOfTheField}"
                    },
                    "op": {
                      "type": "string",
                      "default": "remove"
                    }
                  },
                  "description": "Remove field"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Card updated successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Token may be missing or invalid"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/unsuspend": {
      "post": {
        "tags": [
          "Restricted",
          "Cards"
        ],
        "summary": "[Restricted] Unsuspend a card",
        "description": "Restores a previously suspended card to the status it was in prior to being suspended as applied by the issuer or program manager.\nUse of this endpoint is `Restricted`, depending on access being granted through contractual setup with Modulr.",
        "operationId": "unsuspendCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card which should no longer be suspended",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Card unsuspended successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/unblock": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Unblock an existing card",
        "description": "Unblocking a card re-enables normal authorisation processing.",
        "operationId": "unblockCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card which should be unblocked",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card unblocked successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/suspend": {
      "post": {
        "tags": [
          "Restricted",
          "Cards"
        ],
        "summary": "[Restricted] Suspend an existing card",
        "description": "Suspends a card to temporarily prevent any new authorisations as applied by the issuer or the program manager (i.e. not cardholder elective). This means that all new authorisations will be immediately declined. Outstanding authorisations are unaffected and settlement, chargebacks, refunds, etc will continue to function as normal.\nUse of this endpoint is `Restricted`, depending on access being granted through contractual setup with Modulr.",
        "operationId": "suspendCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card which should be suspended",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Card suspended successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/secure-details-token": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Create secure card details token",
        "description": "Create a token that is used as a parameter to retrieve secure card details (PAN, CVV, and PIN) or to perform PIN alterations. This token is to be retrieved by the partner and pushed to the cardholder device where the call is made. The token will be valid for 60 seconds.",
        "operationId": "generateCardHolderToken",
        "parameters": [
          {
            "name": "X-MOD-CARD-MGMT-TOKEN",
            "in": "header",
            "description": "Card Management Token required when the token will be used to alter card details",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card to generate the token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "publicKey": {
                    "type": "string",
                    "description": "Base64 UTF-8 encoded RSA public key to be used to encrypt the token in the response. The key must be at least 4096 bits in length."
                  },
                  "purpose": {
                    "type": "string",
                    "description": "What the token will be used for. UPDATE tokens cannot be used for READ purposes, and READ tokens cannot be used for updates.",
                    "default": "READ",
                    "enum": [
                      "READ",
                      "UPDATE"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Card token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "encrypted",
                    "token"
                  ],
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The token to use by the client for retrieving card details. Where 'encrypted' is true, this will be a value that must be decrypted on the client device before being used in subsequent API calls",
                      "example": "eyJ0....zRyk"
                    },
                    "encrypted": {
                      "type": "boolean",
                      "description": "Whether this token is encrypted"
                    },
                    "encryptedSymmetricKey": {
                      "type": "string",
                      "description": "Base64 UTF-8 encoded Symmetric key used to encrypt token, encrypted with client's public key. Only provided if 'encrypted' is true."
                    },
                    "initialisationVector": {
                      "type": "string",
                      "description": "Base64 UTF-8 encoded initialisation vector used with symmetric key for encrypting the token. Only provided if 'encrypted' is true."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/replace": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Replace a card",
        "description": "Replace a card, with a reason STOLEN, DAMAGED, LOST, RENEW.",
        "operationId": "replaceCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "The reason for replacing the card. Can be one of DAMAGED (physical only), LOST, STOLEN, RENEW",
                    "example": "STOLEN",
                    "enum": [
                      "STOLEN",
                      "DAMAGED",
                      "LOST",
                      "RENEW"
                    ]
                  },
                  "externalRef": {
                    "maxLength": 50,
                    "minLength": 1,
                    "pattern": "[\\w-\\s]*",
                    "type": "string",
                    "description": "Client reference for the newly created card. Maximum of 50 alphanumeric characters (including underscore, hyphen and space)."
                  },
                  "design": {
                    "required": [
                      "cardRef",
                      "packagingRef"
                    ],
                    "type": "object",
                    "properties": {
                      "cardRef": {
                        "type": "string",
                        "description": "Design reference for card"
                      },
                      "packagingRef": {
                        "type": "string",
                        "description": "Design reference for card packaging"
                      }
                    },
                    "description": "Design references for physical card and packaging"
                  },
                  "expiry": {
                    "type": "string",
                    "description": "ISO 8601 date with year & month components only. The supplied value must be in the future (cannot be the current month) and is _inclusive_ of the specified month. If no expiry is selected, the standard product expiry date will be set",
                    "example": "2026-12"
                  },
                  "shippingAddress": {
                    "required": [
                      "addressLine1",
                      "country",
                      "postCode",
                      "postTown"
                    ],
                    "type": "object",
                    "properties": {
                      "addressLine1": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "First line of address",
                        "example": "Floor 10"
                      },
                      "addressLine2": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Second line of address",
                        "example": "80 George Street"
                      },
                      "postTown": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "Post town",
                        "example": "EDINBURGH"
                      },
                      "postCode": {
                        "maxLength": 10,
                        "minLength": 1,
                        "type": "string",
                        "description": "Postcode",
                        "example": "EH2 3BU"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country (ISO 3166 alpha-2 country code)",
                        "example": "GB",
                        "enum": [
                          "AT",
                          "BE",
                          "BG",
                          "CY",
                          "CZ",
                          "DK",
                          "EE",
                          "FI",
                          "FR",
                          "DE",
                          "GR",
                          "HR",
                          "HU",
                          "IS",
                          "IE",
                          "IT",
                          "LV",
                          "LI",
                          "LT",
                          "LU",
                          "MT",
                          "NL",
                          "NO",
                          "PL",
                          "PT",
                          "RO",
                          "SK",
                          "SI",
                          "ES",
                          "SE",
                          "AX",
                          "AW",
                          "BL",
                          "CW",
                          "GF",
                          "GL",
                          "GP",
                          "ME",
                          "MF",
                          "MQ",
                          "NC",
                          "PF",
                          "PM",
                          "RE",
                          "SX",
                          "TF",
                          "WF",
                          "YT",
                          "AI",
                          "BM",
                          "FK",
                          "GB",
                          "GG",
                          "GI",
                          "GS",
                          "IO",
                          "JE",
                          "KY",
                          "MS",
                          "PN",
                          "SH",
                          "TC",
                          "VG"
                        ]
                      }
                    },
                    "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                  }
                },
                "description": "Replacement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Card replaced successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "createdDate",
                    "cvv2",
                    "expiry",
                    "externalRef",
                    "id",
                    "maxLimit",
                    "pan"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Card identifier. Maximum of 10 alphanumeric characters."
                    },
                    "cvv2": {
                      "type": "string",
                      "description": "Card CVV2 number."
                    },
                    "pan": {
                      "type": "string",
                      "description": "Full card PAN."
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "The creation date of the card",
                      "format": "date-time"
                    },
                    "externalRef": {
                      "type": "string",
                      "description": "Client reference for the newly created card."
                    },
                    "expiry": {
                      "type": "string",
                      "description": "An ISO 8601 date with year & month components only",
                      "example": "2018-12"
                    },
                    "maxLimit": {
                      "type": "string",
                      "description": "Maximum limit which can be set on this card and is the maximum lifetime spend the card can have",
                      "example": "4000.0"
                    },
                    "managementToken": {
                      "type": "string",
                      "description": "Card Management Token required for API users for additional security when managing sensitive card data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/pin": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Retrieve PIN",
        "description": "Retrieves the PIN for a card, as a reminder for the cardholder",
        "operationId": "retrievePIN",
        "parameters": [
          {
            "name": "X-MOD-CARD-MGMT-TOKEN",
            "in": "header",
            "description": "Card Management Token required for API users for additional security when managing sensitive card data",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card to retrieve the PIN for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PIN retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pin": {
                      "type": "string",
                      "description": "Card PIN",
                      "example": "0123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. `Card Management Token` may be missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pin": {
                      "type": "string",
                      "description": "Card PIN",
                      "example": "0123"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Reset card PIN",
        "description": "Reset the card's PIN for a specific card",
        "operationId": "resetPin",
        "parameters": [
          {
            "name": "X-MOD-CARD-MGMT-TOKEN",
            "in": "header",
            "description": "Card Management Token required for API users for additional security when managing sensitive card data",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card to reset the PIN for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "currentPin",
                  "newPin"
                ],
                "type": "object",
                "properties": {
                  "currentPin": {
                    "pattern": "^[0-9]{4}$",
                    "type": "string",
                    "description": "Card's current PIN required to reset"
                  },
                  "newPin": {
                    "pattern": "^[0-9]{4}$",
                    "type": "string",
                    "description": "Card's new PIN to update"
                  }
                },
                "description": "Reset PIN"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "PIN changed successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. `Card Management Token` may be missing or invalid"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/pin/unblock": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Unblock PIN",
        "description": "Unblock the card's PIN so that it can be used by the cardholder. CVC2 will also be unblocked, where required.",
        "operationId": "unblockPin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card to unblock the PIN (and/or CVC2) against",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Unblocked successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/in-app-provisioning/apple": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Get in-app provisioning data for Apple Pay",
        "description": "Retrieves and encrypts the data needed for the client application to provision a card to Apple Pay",
        "operationId": "getInAppProvisioningForApple",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Card ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "V110000001"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "additionalCertificates",
                  "leafCertificate",
                  "nonce",
                  "nonceSignature"
                ],
                "type": "object",
                "properties": {
                  "leafCertificate": {
                    "type": "string",
                    "description": "Apple issued public base 64 encoded certificate to encrypt the provisioning data"
                  },
                  "additionalCertificates": {
                    "type": "array",
                    "description": "Apple issued public base 64 encoded certificates that complete the chain including the root certificate",
                    "items": {
                      "type": "string",
                      "description": "Apple issued public base 64 encoded certificates that complete the chain including the root certificate"
                    }
                  },
                  "nonce": {
                    "type": "string",
                    "description": "Hex encoded nonce generated by the client"
                  },
                  "nonceSignature": {
                    "type": "string",
                    "description": "Hex encoded nonce signed with the private key to verify the certificate public key"
                  }
                },
                "description": "Apple in app provisioning request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "In app provisioning data for Apple Pay retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "activationData",
                    "encryptedPassData",
                    "ephemeralPublicKey"
                  ],
                  "type": "object",
                  "properties": {
                    "ephemeralPublicKey": {
                      "type": "string",
                      "description": "Ephemeral public key generated to encrypt the data on the provisioning attempt"
                    },
                    "encryptedPassData": {
                      "type": "string",
                      "description": "Encrypted payload data requested"
                    },
                    "activationData": {
                      "type": "string",
                      "description": "Encrypted OTP for the card provider"
                    }
                  },
                  "description": "AppleInAppProvisioningRequest"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/custom-fields": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Update a card's custom fields",
        "description": "Replace the values of a card's custom fields if they exist or create new custom fields with the given values if they do not exist",
        "operationId": "updateCardCustomFields",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the card for which the custom fields should be updated",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customFields"
                ],
                "type": "object",
                "properties": {
                  "customFields": {
                    "maxItems": 20,
                    "minItems": 1,
                    "type": "array",
                    "description": "Custom fields",
                    "items": {
                      "required": [
                        "key",
                        "value"
                      ],
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Custom field key"
                        },
                        "value": {
                          "type": "string",
                          "description": "Custom field value"
                        }
                      },
                      "description": "Custom fields"
                    }
                  }
                },
                "description": "Custom fields to be updated"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Custom fields updated successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/cancel": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Cancel an existing card",
        "description": "Cancelling a card _**permanently**_ disables authorisation processing & _**destroys**_ the card from the card scheme perspective. This means that all _new_ authorisations will be immediately declined and this cannot be reversed. Outstanding authorisations are unaffected and settlement, chargebacks, refunds, etc will continue to function as normal.",
        "operationId": "cancelCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card which should be cancelled",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "The reason for cancelling the card. Can be one of DESTROYED, LOST, STOLEN",
                    "enum": [
                      "STOLEN",
                      "DESTROYED",
                      "LOST"
                    ]
                  }
                },
                "description": "Reason for cancellation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Card cancelled successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/block": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Block an existing card",
        "description": "Blocking a card temporarily disables authorisation processing. This means that all _new_ authorisations will be immediately declined. Outstanding authorisations are unaffected and settlement, chargebacks, refunds, etc will continue to function as normal.",
        "operationId": "blockCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card which should be blocked",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card blocked successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/activate": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Activate a physical card",
        "description": "Physical cards issued by Modulr will be mailed out to cardholders in an inactive state. A cardholder will need to have their card activated before it can be used. Cards can only be activated whilst they have a status of `CREATED`.",
        "operationId": "activateCard",
        "parameters": [
          {
            "name": "X-MOD-CARD-MGMT-TOKEN",
            "in": "header",
            "description": "Card Management Token required for API users for additional security when managing sensitive card data",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the physical card which should be activated.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Card activated successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. `Card Management Token` may be missing or invalid"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/secure-pin-reset": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Reset card PIN",
        "description": "Reset the PIN for a card using a client access token. This should be done from the card-holder device and not directly by the partner",
        "operationId": "secureResetPin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "currentPin",
                  "newPin"
                ],
                "type": "object",
                "properties": {
                  "currentPin": {
                    "pattern": "^[0-9]{4}$",
                    "type": "string",
                    "description": "Card's current PIN required to reset"
                  },
                  "newPin": {
                    "pattern": "^[0-9]{4}$",
                    "type": "string",
                    "description": "Card's new PIN to update"
                  }
                },
                "description": "Reset PIN"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "PIN changed successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Authentication details may not be valid"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/enquiry": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Card enquiry",
        "description": "Retrieve card details by PAN",
        "operationId": "cardEnquiry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pan": {
                    "type": "string",
                    "description": "pan"
                  },
                  "providerSuppliedId": {
                    "type": "string",
                    "description": "providerSuppliedId"
                  }
                },
                "description": "Enquiry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Card enquiry successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Card identifier. Maximum of 10 alphanumeric characters",
                      "example": "V000000001"
                    },
                    "holder": {
                      "required": [
                        "billingAddress",
                        "dateOfBirth",
                        "firstName",
                        "lastName",
                        "mobileNumber"
                      ],
                      "type": "object",
                      "properties": {
                        "title": {
                          "pattern": "^[0-9a-zA-Z]{1,4}$",
                          "type": "string",
                          "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                          "example": "Mr"
                        },
                        "firstName": {
                          "pattern": "[\\x20-\\x7e]{1,20}",
                          "type": "string",
                          "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                          "example": "Joe"
                        },
                        "lastName": {
                          "pattern": "[\\x20-\\x7e]{1,20}",
                          "type": "string",
                          "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                          "example": "Bloggs"
                        },
                        "billingAddress": {
                          "required": [
                            "addressLine1",
                            "country",
                            "postCode",
                            "postTown"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "maxLength": 50,
                              "minLength": 1,
                              "type": "string",
                              "description": "First line of address",
                              "example": "Floor 10"
                            },
                            "addressLine2": {
                              "maxLength": 50,
                              "minLength": 0,
                              "type": "string",
                              "description": "Second line of address",
                              "example": "80 George Street"
                            },
                            "postTown": {
                              "maxLength": 20,
                              "minLength": 1,
                              "type": "string",
                              "description": "Post town",
                              "example": "EDINBURGH"
                            },
                            "postCode": {
                              "maxLength": 10,
                              "minLength": 1,
                              "type": "string",
                              "description": "Postcode",
                              "example": "EH2 3BU"
                            },
                            "country": {
                              "type": "string",
                              "description": "Country (ISO 3166 alpha-2 country code)",
                              "example": "GB",
                              "enum": [
                                "AT",
                                "BE",
                                "BG",
                                "CY",
                                "CZ",
                                "DK",
                                "EE",
                                "FI",
                                "FR",
                                "DE",
                                "GR",
                                "HR",
                                "HU",
                                "IS",
                                "IE",
                                "IT",
                                "LV",
                                "LI",
                                "LT",
                                "LU",
                                "MT",
                                "NL",
                                "NO",
                                "PL",
                                "PT",
                                "RO",
                                "SK",
                                "SI",
                                "ES",
                                "SE",
                                "AX",
                                "AW",
                                "BL",
                                "CW",
                                "GF",
                                "GL",
                                "GP",
                                "ME",
                                "MF",
                                "MQ",
                                "NC",
                                "PF",
                                "PM",
                                "RE",
                                "SX",
                                "TF",
                                "WF",
                                "YT",
                                "AI",
                                "BM",
                                "FK",
                                "GB",
                                "GG",
                                "GI",
                                "GS",
                                "IO",
                                "JE",
                                "KY",
                                "MS",
                                "PN",
                                "SH",
                                "TC",
                                "VG"
                              ]
                            }
                          },
                          "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                          "format": "date",
                          "example": "2001-01-01"
                        },
                        "mobileNumber": {
                          "type": "string",
                          "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                          "example": "+447123456000"
                        },
                        "email": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Cardholder email",
                          "example": "cardholder@example.com"
                        }
                      },
                      "description": "CardHolder"
                    },
                    "expiry": {
                      "type": "string",
                      "description": "An ISO 8601 date with year & month components only",
                      "example": "2018-12"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current state of the card."
                    },
                    "currency": {
                      "type": "string",
                      "description": "A 3 letter ISO 4217 code representing the card currency",
                      "example": "GBP"
                    },
                    "limit": {
                      "type": "string",
                      "description": "Total card authorisation limit",
                      "example": "1000.0"
                    },
                    "maxLimit": {
                      "type": "string",
                      "description": "Maximum limit which can be set on this card and is the maximum lifetime spend the card can have",
                      "example": "4000.0"
                    },
                    "spend": {
                      "type": "string",
                      "description": "Current total of all authorisations on this card",
                      "example": "250.0"
                    },
                    "externalRef": {
                      "type": "string",
                      "description": "Client reference for the newly created card. Maximum of 50 characters.",
                      "example": "TTQ_51211"
                    },
                    "maskedPan": {
                      "type": "string",
                      "description": "Masked card PAN",
                      "example": "527095******3544"
                    },
                    "cardType": {
                      "type": "string",
                      "description": "Card product type",
                      "example": "Business"
                    },
                    "cardScheme": {
                      "type": "string",
                      "description": "Card scheme. MASTERCARD or VISA",
                      "example": "MASTERCARD"
                    },
                    "accountBid": {
                      "type": "string",
                      "description": "Account identifier",
                      "example": "A020N8PD"
                    },
                    "productId": {
                      "type": "string",
                      "description": "Product identifier",
                      "example": "O210003A"
                    },
                    "format": {
                      "type": "string",
                      "description": "The format of the card.  PHYSICAL or VIRTUAL",
                      "example": "PHYSICAL",
                      "enum": [
                        "PHYSICAL",
                        "VIRTUAL"
                      ]
                    },
                    "constraints": {
                      "required": [
                        "mccWhitelist"
                      ],
                      "type": "object",
                      "properties": {
                        "mccWhitelist": {
                          "type": "array",
                          "description": "mccWhitelist",
                          "example": [
                            "1000",
                            "1002-3000",
                            "5060"
                          ],
                          "items": {
                            "type": "string",
                            "description": "mccWhitelist",
                            "example": "[\"1000\",\"1002-3000\",\"5060\"]"
                          }
                        },
                        "authorisation": {
                          "type": "object",
                          "properties": {
                            "spend": {
                              "type": "array",
                              "description": "Spending constraints",
                              "items": {
                                "required": [
                                  "currency"
                                ],
                                "type": "object",
                                "properties": {
                                  "currency": {
                                    "type": "string",
                                    "description": "A 3 letter ISO 4217 code representing the transaction currency",
                                    "example": "GBP",
                                    "enum": [
                                      "GBP",
                                      "EUR",
                                      "AED",
                                      "AFN",
                                      "ALL",
                                      "AMD",
                                      "ANG",
                                      "AOA",
                                      "ARS",
                                      "AUD",
                                      "AWG",
                                      "AZN",
                                      "BAM",
                                      "BBD",
                                      "BDT",
                                      "BGN",
                                      "BHD",
                                      "BIF",
                                      "BMD",
                                      "BND",
                                      "BOB",
                                      "BOV",
                                      "BRL",
                                      "BSD",
                                      "BTN",
                                      "BWP",
                                      "BYN",
                                      "BZD",
                                      "CAD",
                                      "CDF",
                                      "CHE",
                                      "CHF",
                                      "CHW",
                                      "CLF",
                                      "CLP",
                                      "CNY",
                                      "COP",
                                      "COU",
                                      "CRC",
                                      "CUC",
                                      "CUP",
                                      "CVE",
                                      "CZK",
                                      "DJF",
                                      "DKK",
                                      "DOP",
                                      "DZD",
                                      "EGP",
                                      "ERN",
                                      "ETB",
                                      "FJD",
                                      "FKP",
                                      "GEL",
                                      "GHS",
                                      "GIP",
                                      "GMD",
                                      "GNF",
                                      "GTQ",
                                      "GYD",
                                      "HKD",
                                      "HNL",
                                      "HRK",
                                      "HTG",
                                      "HUF",
                                      "IDR",
                                      "ILS",
                                      "INR",
                                      "IQD",
                                      "IRR",
                                      "ISK",
                                      "JMD",
                                      "JOD",
                                      "JPY",
                                      "KES",
                                      "KGS",
                                      "KHR",
                                      "KMF",
                                      "KPW",
                                      "KRW",
                                      "KWD",
                                      "KYD",
                                      "KZT",
                                      "LAK",
                                      "LBP",
                                      "LKR",
                                      "LRD",
                                      "LSL",
                                      "LYD",
                                      "MAD",
                                      "MDL",
                                      "MGA",
                                      "MKD",
                                      "MMK",
                                      "MNT",
                                      "MOP",
                                      "MRU",
                                      "MUR",
                                      "MVR",
                                      "MWK",
                                      "MXN",
                                      "MXV",
                                      "MYR",
                                      "MZN",
                                      "NAD",
                                      "NGN",
                                      "NIO",
                                      "NOK",
                                      "NPR",
                                      "NZD",
                                      "OMR",
                                      "PAB",
                                      "PEN",
                                      "PGK",
                                      "PHP",
                                      "PKR",
                                      "PLN",
                                      "PYG",
                                      "QAR",
                                      "RON",
                                      "RSD",
                                      "RUB",
                                      "RWF",
                                      "SAR",
                                      "SBD",
                                      "SCR",
                                      "SDG",
                                      "SEK",
                                      "SGD",
                                      "SLE",
                                      "SLL",
                                      "SOS",
                                      "SRD",
                                      "SSP",
                                      "STN",
                                      "SVC",
                                      "SYP",
                                      "SZL",
                                      "SHP",
                                      "THB",
                                      "TJS",
                                      "TMT",
                                      "TND",
                                      "TOP",
                                      "TRY",
                                      "TTD",
                                      "TWD",
                                      "TZS",
                                      "UAH",
                                      "UGX",
                                      "USD",
                                      "USN",
                                      "UYI",
                                      "UYU",
                                      "UYW",
                                      "UZS",
                                      "VES",
                                      "VND",
                                      "VUV",
                                      "WST",
                                      "XAF",
                                      "XAG",
                                      "XAU",
                                      "XBA",
                                      "XBB",
                                      "XBC",
                                      "XBD",
                                      "XCD",
                                      "XDR",
                                      "XOF",
                                      "XPD",
                                      "XPF",
                                      "XPT",
                                      "XSU",
                                      "XTS",
                                      "XUA",
                                      "XXX",
                                      "YER",
                                      "ZAR",
                                      "ZMW",
                                      "ZWL"
                                    ]
                                  },
                                  "min": {
                                    "type": "number",
                                    "description": "Minimum spend amount (inclusive)",
                                    "example": 5
                                  },
                                  "max": {
                                    "type": "number",
                                    "description": "Maximum spend amount (inclusive)",
                                    "example": 2000
                                  }
                                },
                                "description": "Spending constraints"
                              }
                            }
                          },
                          "description": "Authorisation constraints"
                        }
                      },
                      "description": "CardConstraints"
                    },
                    "design": {
                      "required": [
                        "cardRef",
                        "packagingRef"
                      ],
                      "type": "object",
                      "properties": {
                        "cardRef": {
                          "type": "string",
                          "description": "Design reference for card"
                        },
                        "packagingRef": {
                          "type": "string",
                          "description": "Design reference for card packaging"
                        }
                      },
                      "description": "Design references for physical card and packaging"
                    },
                    "printedName": {
                      "type": "string",
                      "description": "Name printed on the card. Will only be returned for physical cards. Maximum of 20 alphanumeric characters (including full stop, hyphen, apostrophe, caret and space)"
                    },
                    "cancellationDate": {
                      "type": "string",
                      "description": "Date card will be cancelled on",
                      "example": "2025-01-01"
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "threeDSecureStatus": {
                      "type": "string",
                      "description": "The 3DS status of the card, based on the SMS one time password",
                      "example": "ENROLLED",
                      "deprecated": true,
                      "enum": [
                        "NOT_ENROLLED",
                        "ENROLLED",
                        "UNENROLLED"
                      ]
                    },
                    "authentication": {
                      "type": "object",
                      "properties": {
                        "otpSmsStatus": {
                          "type": "string",
                          "description": "The SMS one time password authentication status",
                          "example": "ENROLLED",
                          "enum": [
                            "NOT_ENROLLED",
                            "ENROLLED",
                            "UNENROLLED"
                          ]
                        },
                        "knowledgeBaseStatus": {
                          "type": "string",
                          "description": "The knowledge based authentication (KBA) status",
                          "example": "ENROLLED",
                          "enum": [
                            "NOT_ENROLLED",
                            "ENROLLED",
                            "UNENROLLED"
                          ]
                        }
                      },
                      "description": "The 3DS authentication method statuses"
                    },
                    "shippingAddress": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "maxLength": 50,
                          "minLength": 1,
                          "type": "string",
                          "description": "First line of address",
                          "example": "Floor 10"
                        },
                        "addressLine2": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Second line of address",
                          "example": "80 George Street"
                        },
                        "postTown": {
                          "maxLength": 20,
                          "minLength": 1,
                          "type": "string",
                          "description": "Post town",
                          "example": "EDINBURGH"
                        },
                        "postCode": {
                          "maxLength": 10,
                          "minLength": 1,
                          "type": "string",
                          "description": "Postcode",
                          "example": "EH2 3BU"
                        },
                        "country": {
                          "type": "string",
                          "description": "Country (ISO 3166 alpha-2 country code)",
                          "example": "GB",
                          "enum": [
                            "AT",
                            "BE",
                            "BG",
                            "CY",
                            "CZ",
                            "DK",
                            "EE",
                            "FI",
                            "FR",
                            "DE",
                            "GR",
                            "HR",
                            "HU",
                            "IS",
                            "IE",
                            "IT",
                            "LV",
                            "LI",
                            "LT",
                            "LU",
                            "MT",
                            "NL",
                            "NO",
                            "PL",
                            "PT",
                            "RO",
                            "SK",
                            "SI",
                            "ES",
                            "SE",
                            "AX",
                            "AW",
                            "BL",
                            "CW",
                            "GF",
                            "GL",
                            "GP",
                            "ME",
                            "MF",
                            "MQ",
                            "NC",
                            "PF",
                            "PM",
                            "RE",
                            "SX",
                            "TF",
                            "WF",
                            "YT",
                            "AI",
                            "BM",
                            "FK",
                            "GB",
                            "GG",
                            "GI",
                            "GS",
                            "IO",
                            "JE",
                            "KY",
                            "MS",
                            "PN",
                            "SH",
                            "TC",
                            "VG"
                          ]
                        }
                      },
                      "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                    },
                    "customFields": {
                      "type": "array",
                      "description": "Custom fields currently defined for card",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Custom field key"
                          },
                          "value": {
                            "type": "string",
                            "description": "Custom field value"
                          }
                        },
                        "description": "Custom fields currently defined for card"
                      }
                    },
                    "authWindow": {
                      "type": "object",
                      "properties": {
                        "startDate": {
                          "type": "string",
                          "description": "Authorisation window start date",
                          "format": "date-time"
                        },
                        "endDate": {
                          "type": "string",
                          "description": "Authorisation window end date",
                          "format": "date-time"
                        }
                      },
                      "description": "Authorisation window defined for card"
                    },
                    "channelManagerId": {
                      "type": "string",
                      "description": "Channel Manager identifier",
                      "example": "M883412312"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/card-tokens/{tokenId}/unsuspend": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Unsuspend card token",
        "description": "Restores a previously suspended token to active",
        "operationId": "unsuspendCardToken",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "description": "Card token ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "T110000001"
          }
        ],
        "responses": {
          "204": {
            "description": "Card token was unsuspended successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/card-tokens/{tokenId}/suspend": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Suspend card token",
        "description": "Suspends a token to temporarily prevent any new authorisations",
        "operationId": "suspendCardToken",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "description": "Card token ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "T110000001"
          }
        ],
        "responses": {
          "204": {
            "description": "Card token was suspended successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/card-tokens/{tokenId}/deactivate": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Deactivate card token",
        "description": "Deactivating a token permanently disables authorisation processing. This action is irreversible",
        "operationId": "deactivateCardToken",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "description": "Card token ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "T110000001"
          }
        ],
        "responses": {
          "204": {
            "description": "Card token was deactivated successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/authorisations/{authId}/expire": {
      "post": {
        "tags": [
          "Restricted",
          "Cards"
        ],
        "summary": "[Restricted] Expire an existing authorisation",
        "description": "[Restricted] Expire an existing authorisation",
        "operationId": "expireAuthorisation",
        "parameters": [
          {
            "name": "authId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Authorisation expired successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Authorisation not found"
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{aid}/physical-cards": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Create a new physical card",
        "description": "Asynchronously create a physical card. The response will include a resource to allow the client to check the status of the request.",
        "operationId": "createPhysicalCard",
        "parameters": [
          {
            "name": "aid",
            "in": "path",
            "description": "The account which card funds will be raised from.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "authentication",
                  "design",
                  "expiry",
                  "externalRef",
                  "holder",
                  "limit",
                  "printedName",
                  "productCode"
                ],
                "type": "object",
                "properties": {
                  "limit": {
                    "minimum": 1,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Total card authorisation limit.",
                    "format": "double",
                    "example": 1000
                  },
                  "expiry": {
                    "type": "string",
                    "description": "ISO 8601 date with year & month components only. The supplied value must be in the future (cannot be the current month) and is _inclusive_ of the specified month.",
                    "example": "2018-12"
                  },
                  "productCode": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Identifies the _type_ of card to create (GBP consumer, GBP business, etc). Modulr will supply a list of possible values."
                  },
                  "externalRef": {
                    "maxLength": 50,
                    "minLength": 1,
                    "pattern": "[\\w -]*",
                    "type": "string",
                    "description": "Client reference for the newly created card. Maximum of 50 alphanumeric characters (including underscore, hyphen and space)."
                  },
                  "constraints": {
                    "type": "object",
                    "properties": {
                      "authorisation": {
                        "type": "object",
                        "properties": {
                          "spend": {
                            "type": "array",
                            "description": "Spending constraints",
                            "items": {
                              "required": [
                                "currency"
                              ],
                              "type": "object",
                              "properties": {
                                "currency": {
                                  "type": "string",
                                  "description": "A 3 letter ISO 4217 code representing the transaction currency",
                                  "example": "GBP",
                                  "enum": [
                                    "GBP",
                                    "EUR",
                                    "AED",
                                    "AFN",
                                    "ALL",
                                    "AMD",
                                    "ANG",
                                    "AOA",
                                    "ARS",
                                    "AUD",
                                    "AWG",
                                    "AZN",
                                    "BAM",
                                    "BBD",
                                    "BDT",
                                    "BGN",
                                    "BHD",
                                    "BIF",
                                    "BMD",
                                    "BND",
                                    "BOB",
                                    "BOV",
                                    "BRL",
                                    "BSD",
                                    "BTN",
                                    "BWP",
                                    "BYN",
                                    "BZD",
                                    "CAD",
                                    "CDF",
                                    "CHE",
                                    "CHF",
                                    "CHW",
                                    "CLF",
                                    "CLP",
                                    "CNY",
                                    "COP",
                                    "COU",
                                    "CRC",
                                    "CUC",
                                    "CUP",
                                    "CVE",
                                    "CZK",
                                    "DJF",
                                    "DKK",
                                    "DOP",
                                    "DZD",
                                    "EGP",
                                    "ERN",
                                    "ETB",
                                    "FJD",
                                    "FKP",
                                    "GEL",
                                    "GHS",
                                    "GIP",
                                    "GMD",
                                    "GNF",
                                    "GTQ",
                                    "GYD",
                                    "HKD",
                                    "HNL",
                                    "HRK",
                                    "HTG",
                                    "HUF",
                                    "IDR",
                                    "ILS",
                                    "INR",
                                    "IQD",
                                    "IRR",
                                    "ISK",
                                    "JMD",
                                    "JOD",
                                    "JPY",
                                    "KES",
                                    "KGS",
                                    "KHR",
                                    "KMF",
                                    "KPW",
                                    "KRW",
                                    "KWD",
                                    "KYD",
                                    "KZT",
                                    "LAK",
                                    "LBP",
                                    "LKR",
                                    "LRD",
                                    "LSL",
                                    "LYD",
                                    "MAD",
                                    "MDL",
                                    "MGA",
                                    "MKD",
                                    "MMK",
                                    "MNT",
                                    "MOP",
                                    "MRU",
                                    "MUR",
                                    "MVR",
                                    "MWK",
                                    "MXN",
                                    "MXV",
                                    "MYR",
                                    "MZN",
                                    "NAD",
                                    "NGN",
                                    "NIO",
                                    "NOK",
                                    "NPR",
                                    "NZD",
                                    "OMR",
                                    "PAB",
                                    "PEN",
                                    "PGK",
                                    "PHP",
                                    "PKR",
                                    "PLN",
                                    "PYG",
                                    "QAR",
                                    "RON",
                                    "RSD",
                                    "RUB",
                                    "RWF",
                                    "SAR",
                                    "SBD",
                                    "SCR",
                                    "SDG",
                                    "SEK",
                                    "SGD",
                                    "SLE",
                                    "SLL",
                                    "SOS",
                                    "SRD",
                                    "SSP",
                                    "STN",
                                    "SVC",
                                    "SYP",
                                    "SZL",
                                    "SHP",
                                    "THB",
                                    "TJS",
                                    "TMT",
                                    "TND",
                                    "TOP",
                                    "TRY",
                                    "TTD",
                                    "TWD",
                                    "TZS",
                                    "UAH",
                                    "UGX",
                                    "USD",
                                    "USN",
                                    "UYI",
                                    "UYU",
                                    "UYW",
                                    "UZS",
                                    "VES",
                                    "VND",
                                    "VUV",
                                    "WST",
                                    "XAF",
                                    "XAG",
                                    "XAU",
                                    "XBA",
                                    "XBB",
                                    "XBC",
                                    "XBD",
                                    "XCD",
                                    "XDR",
                                    "XOF",
                                    "XPD",
                                    "XPF",
                                    "XPT",
                                    "XSU",
                                    "XTS",
                                    "XUA",
                                    "XXX",
                                    "YER",
                                    "ZAR",
                                    "ZMW",
                                    "ZWL"
                                  ]
                                },
                                "min": {
                                  "type": "number",
                                  "description": "Minimum spend amount (inclusive)",
                                  "example": 5
                                },
                                "max": {
                                  "type": "number",
                                  "description": "Maximum spend amount (inclusive)",
                                  "example": 2000
                                }
                              },
                              "description": "Spending constraints"
                            }
                          }
                        },
                        "description": "Authorisation constraints"
                      }
                    },
                    "description": "Constraints"
                  },
                  "authentication": {
                    "required": [
                      "knowledgeBase"
                    ],
                    "type": "object",
                    "properties": {
                      "knowledgeBase": {
                        "type": "array",
                        "description": "3DS knowledge-based authentication (KBA) answers",
                        "items": {
                          "required": [
                            "answer",
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "3DS knowledge-based authentication answer type",
                              "enum": [
                                "FIRST_PET_NAME",
                                "MATERNAL_GRANDMOTHER_MAIDEN_NAME",
                                "FAVOURITE_CHILDHOOD_FRIEND",
                                "FIRST_CAR",
                                "CITY_PARENTS_MET"
                              ]
                            },
                            "answer": {
                              "maxLength": 45,
                              "minLength": 1,
                              "type": "string",
                              "description": "3DS knowledge-based authentication answer"
                            }
                          },
                          "description": "3DS Knowledge-Based Authentication (KBA) answers"
                        }
                      }
                    },
                    "description": "Authentication. Required by default, optional for Virtual Business Travel Cards only"
                  },
                  "cancellationDate": {
                    "type": "string",
                    "description": "Date for card to be cancelled on",
                    "example": "2025-01-01"
                  },
                  "customFields": {
                    "maxItems": 20,
                    "minItems": 0,
                    "type": "array",
                    "description": "Custom fields of card",
                    "items": {
                      "required": [
                        "key",
                        "value"
                      ],
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Custom field key"
                        },
                        "value": {
                          "type": "string",
                          "description": "Custom field value"
                        }
                      },
                      "description": "Custom fields"
                    }
                  },
                  "authorisationWindow": {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "type": "string",
                        "example": "2025-01-01"
                      },
                      "endDate": {
                        "type": "string",
                        "example": "2025-01-01"
                      }
                    },
                    "description": "Authorisation Windows allow the card holder to add a period of time where the card can ONLY be used, if an Authorisation Window set then transactions outside this window will decline. ISO 8601 date with year, month & day components only."
                  },
                  "holder": {
                    "required": [
                      "billingAddress",
                      "dateOfBirth",
                      "firstName",
                      "lastName",
                      "mobileNumber"
                    ],
                    "type": "object",
                    "properties": {
                      "title": {
                        "pattern": "^[0-9a-zA-Z]{1,4}$",
                        "type": "string",
                        "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                        "example": "Mr"
                      },
                      "firstName": {
                        "pattern": "[\\x20-\\x7e]{1,20}",
                        "type": "string",
                        "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                        "example": "Joe"
                      },
                      "lastName": {
                        "pattern": "[\\x20-\\x7e]{1,20}",
                        "type": "string",
                        "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                        "example": "Bloggs"
                      },
                      "billingAddress": {
                        "required": [
                          "addressLine1",
                          "country",
                          "postCode",
                          "postTown"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string",
                            "description": "First line of address",
                            "example": "Floor 10"
                          },
                          "addressLine2": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Second line of address",
                            "example": "80 George Street"
                          },
                          "postTown": {
                            "maxLength": 20,
                            "minLength": 1,
                            "type": "string",
                            "description": "Post town",
                            "example": "EDINBURGH"
                          },
                          "postCode": {
                            "maxLength": 10,
                            "minLength": 1,
                            "type": "string",
                            "description": "Postcode",
                            "example": "EH2 3BU"
                          },
                          "country": {
                            "type": "string",
                            "description": "Country (ISO 3166 alpha-2 country code)",
                            "example": "GB",
                            "enum": [
                              "AT",
                              "BE",
                              "BG",
                              "CY",
                              "CZ",
                              "DK",
                              "EE",
                              "FI",
                              "FR",
                              "DE",
                              "GR",
                              "HR",
                              "HU",
                              "IS",
                              "IE",
                              "IT",
                              "LV",
                              "LI",
                              "LT",
                              "LU",
                              "MT",
                              "NL",
                              "NO",
                              "PL",
                              "PT",
                              "RO",
                              "SK",
                              "SI",
                              "ES",
                              "SE",
                              "AX",
                              "AW",
                              "BL",
                              "CW",
                              "GF",
                              "GL",
                              "GP",
                              "ME",
                              "MF",
                              "MQ",
                              "NC",
                              "PF",
                              "PM",
                              "RE",
                              "SX",
                              "TF",
                              "WF",
                              "YT",
                              "AI",
                              "BM",
                              "FK",
                              "GB",
                              "GG",
                              "GI",
                              "GS",
                              "IO",
                              "JE",
                              "KY",
                              "MS",
                              "PN",
                              "SH",
                              "TC",
                              "VG"
                            ]
                          }
                        },
                        "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                      },
                      "dateOfBirth": {
                        "type": "string",
                        "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                        "format": "date",
                        "example": "2001-01-01"
                      },
                      "mobileNumber": {
                        "type": "string",
                        "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                        "example": "+447123456000"
                      },
                      "email": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Cardholder email",
                        "example": "cardholder@example.com"
                      }
                    },
                    "description": "CardHolder"
                  },
                  "shippingAddress": {
                    "required": [
                      "addressLine1",
                      "country",
                      "postCode",
                      "postTown"
                    ],
                    "type": "object",
                    "properties": {
                      "addressLine1": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "First line of address",
                        "example": "Floor 10"
                      },
                      "addressLine2": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Second line of address",
                        "example": "80 George Street"
                      },
                      "postTown": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "Post town",
                        "example": "EDINBURGH"
                      },
                      "postCode": {
                        "maxLength": 10,
                        "minLength": 1,
                        "type": "string",
                        "description": "Postcode",
                        "example": "EH2 3BU"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country (ISO 3166 alpha-2 country code)",
                        "example": "GB",
                        "enum": [
                          "AT",
                          "BE",
                          "BG",
                          "CY",
                          "CZ",
                          "DK",
                          "EE",
                          "FI",
                          "FR",
                          "DE",
                          "GR",
                          "HR",
                          "HU",
                          "IS",
                          "IE",
                          "IT",
                          "LV",
                          "LI",
                          "LT",
                          "LU",
                          "MT",
                          "NL",
                          "NO",
                          "PL",
                          "PT",
                          "RO",
                          "SK",
                          "SI",
                          "ES",
                          "SE",
                          "AX",
                          "AW",
                          "BL",
                          "CW",
                          "GF",
                          "GL",
                          "GP",
                          "ME",
                          "MF",
                          "MQ",
                          "NC",
                          "PF",
                          "PM",
                          "RE",
                          "SX",
                          "TF",
                          "WF",
                          "YT",
                          "AI",
                          "BM",
                          "FK",
                          "GB",
                          "GG",
                          "GI",
                          "GS",
                          "IO",
                          "JE",
                          "KY",
                          "MS",
                          "PN",
                          "SH",
                          "TC",
                          "VG"
                        ]
                      }
                    },
                    "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                  },
                  "design": {
                    "required": [
                      "cardRef",
                      "packagingRef"
                    ],
                    "type": "object",
                    "properties": {
                      "cardRef": {
                        "type": "string",
                        "description": "Design reference for card"
                      },
                      "packagingRef": {
                        "type": "string",
                        "description": "Design reference for card packaging"
                      }
                    },
                    "description": "Design references for physical card and packaging"
                  },
                  "printedName": {
                    "maxLength": 27,
                    "minLength": 1,
                    "pattern": "[a-zA-Z 0-9Ã-Å½ÈÈ'â.,^-]{1,27}",
                    "type": "string",
                    "description": "Name to be printed on the card. Maximum of 27 alphanumeric characters (including full stop, hyphen, apostrophe, caret and space). Please add business name to this field if you wish to have it on the card.",
                    "example": "Joe Bloggs"
                  }
                },
                "description": "Card"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Create physical card request received successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "taskId",
                    "taskUrl"
                  ],
                  "type": "object",
                  "properties": {
                    "taskUrl": {
                      "type": "string",
                      "description": "Url of card task resource"
                    },
                    "taskId": {
                      "type": "string",
                      "description": "ID of card task"
                    },
                    "metaData": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Meta data associated with async task response"
                      },
                      "description": "Meta data associated with async task response"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{aid}/cards": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "View the details of existing cards by account",
        "operationId": "getCardsByAccount",
        "parameters": [
          {
            "name": "aid",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Statuses of cards to be retrieved",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "CREATED",
                "ACTIVE",
                "BLOCKED",
                "SUSPENDED",
                "CANCELLED",
                "EXPIRED"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cards returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Card identifier. Maximum of 10 alphanumeric characters",
                            "example": "V000000001"
                          },
                          "holder": {
                            "required": [
                              "billingAddress",
                              "dateOfBirth",
                              "firstName",
                              "lastName",
                              "mobileNumber"
                            ],
                            "type": "object",
                            "properties": {
                              "title": {
                                "pattern": "^[0-9a-zA-Z]{1,4}$",
                                "type": "string",
                                "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                                "example": "Mr"
                              },
                              "firstName": {
                                "pattern": "[\\x20-\\x7e]{1,20}",
                                "type": "string",
                                "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                                "example": "Joe"
                              },
                              "lastName": {
                                "pattern": "[\\x20-\\x7e]{1,20}",
                                "type": "string",
                                "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                                "example": "Bloggs"
                              },
                              "billingAddress": {
                                "required": [
                                  "addressLine1",
                                  "country",
                                  "postCode",
                                  "postTown"
                                ],
                                "type": "object",
                                "properties": {
                                  "addressLine1": {
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "First line of address",
                                    "example": "Floor 10"
                                  },
                                  "addressLine2": {
                                    "maxLength": 50,
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Second line of address",
                                    "example": "80 George Street"
                                  },
                                  "postTown": {
                                    "maxLength": 20,
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "Post town",
                                    "example": "EDINBURGH"
                                  },
                                  "postCode": {
                                    "maxLength": 10,
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "Postcode",
                                    "example": "EH2 3BU"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "Country (ISO 3166 alpha-2 country code)",
                                    "example": "GB",
                                    "enum": [
                                      "AT",
                                      "BE",
                                      "BG",
                                      "CY",
                                      "CZ",
                                      "DK",
                                      "EE",
                                      "FI",
                                      "FR",
                                      "DE",
                                      "GR",
                                      "HR",
                                      "HU",
                                      "IS",
                                      "IE",
                                      "IT",
                                      "LV",
                                      "LI",
                                      "LT",
                                      "LU",
                                      "MT",
                                      "NL",
                                      "NO",
                                      "PL",
                                      "PT",
                                      "RO",
                                      "SK",
                                      "SI",
                                      "ES",
                                      "SE",
                                      "AX",
                                      "AW",
                                      "BL",
                                      "CW",
                                      "GF",
                                      "GL",
                                      "GP",
                                      "ME",
                                      "MF",
                                      "MQ",
                                      "NC",
                                      "PF",
                                      "PM",
                                      "RE",
                                      "SX",
                                      "TF",
                                      "WF",
                                      "YT",
                                      "AI",
                                      "BM",
                                      "FK",
                                      "GB",
                                      "GG",
                                      "GI",
                                      "GS",
                                      "IO",
                                      "JE",
                                      "KY",
                                      "MS",
                                      "PN",
                                      "SH",
                                      "TC",
                                      "VG"
                                    ]
                                  }
                                },
                                "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                              },
                              "dateOfBirth": {
                                "type": "string",
                                "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                                "format": "date",
                                "example": "2001-01-01"
                              },
                              "mobileNumber": {
                                "type": "string",
                                "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                                "example": "+447123456000"
                              },
                              "email": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string",
                                "description": "Cardholder email",
                                "example": "cardholder@example.com"
                              }
                            },
                            "description": "CardHolder"
                          },
                          "expiry": {
                            "type": "string",
                            "description": "An ISO 8601 date with year & month components only",
                            "example": "2018-12"
                          },
                          "status": {
                            "type": "string",
                            "description": "The current state of the card."
                          },
                          "currency": {
                            "type": "string",
                            "description": "A 3 letter ISO 4217 code representing the card currency",
                            "example": "GBP"
                          },
                          "limit": {
                            "type": "string",
                            "description": "Total card authorisation limit",
                            "example": "1000.0"
                          },
                          "maxLimit": {
                            "type": "string",
                            "description": "Maximum limit which can be set on this card and is the maximum lifetime spend the card can have",
                            "example": "4000.0"
                          },
                          "spend": {
                            "type": "string",
                            "description": "Current total of all authorisations on this card",
                            "example": "250.0"
                          },
                          "externalRef": {
                            "type": "string",
                            "description": "Client reference for the newly created card. Maximum of 50 characters.",
                            "example": "TTQ_51211"
                          },
                          "maskedPan": {
                            "type": "string",
                            "description": "Masked card PAN",
                            "example": "527095******3544"
                          },
                          "cardType": {
                            "type": "string",
                            "description": "Card product type",
                            "example": "Business"
                          },
                          "cardScheme": {
                            "type": "string",
                            "description": "Card scheme. MASTERCARD or VISA",
                            "example": "MASTERCARD"
                          },
                          "accountBid": {
                            "type": "string",
                            "description": "Account identifier",
                            "example": "A020N8PD"
                          },
                          "productId": {
                            "type": "string",
                            "description": "Product identifier",
                            "example": "O210003A"
                          },
                          "format": {
                            "type": "string",
                            "description": "The format of the card.  PHYSICAL or VIRTUAL",
                            "example": "PHYSICAL",
                            "enum": [
                              "PHYSICAL",
                              "VIRTUAL"
                            ]
                          },
                          "constraints": {
                            "required": [
                              "mccWhitelist"
                            ],
                            "type": "object",
                            "properties": {
                              "mccWhitelist": {
                                "type": "array",
                                "description": "mccWhitelist",
                                "example": [
                                  "1000",
                                  "1002-3000",
                                  "5060"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "mccWhitelist",
                                  "example": "[\"1000\",\"1002-3000\",\"5060\"]"
                                }
                              },
                              "authorisation": {
                                "type": "object",
                                "properties": {
                                  "spend": {
                                    "type": "array",
                                    "description": "Spending constraints",
                                    "items": {
                                      "required": [
                                        "currency"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "currency": {
                                          "type": "string",
                                          "description": "A 3 letter ISO 4217 code representing the transaction currency",
                                          "example": "GBP",
                                          "enum": [
                                            "GBP",
                                            "EUR",
                                            "AED",
                                            "AFN",
                                            "ALL",
                                            "AMD",
                                            "ANG",
                                            "AOA",
                                            "ARS",
                                            "AUD",
                                            "AWG",
                                            "AZN",
                                            "BAM",
                                            "BBD",
                                            "BDT",
                                            "BGN",
                                            "BHD",
                                            "BIF",
                                            "BMD",
                                            "BND",
                                            "BOB",
                                            "BOV",
                                            "BRL",
                                            "BSD",
                                            "BTN",
                                            "BWP",
                                            "BYN",
                                            "BZD",
                                            "CAD",
                                            "CDF",
                                            "CHE",
                                            "CHF",
                                            "CHW",
                                            "CLF",
                                            "CLP",
                                            "CNY",
                                            "COP",
                                            "COU",
                                            "CRC",
                                            "CUC",
                                            "CUP",
                                            "CVE",
                                            "CZK",
                                            "DJF",
                                            "DKK",
                                            "DOP",
                                            "DZD",
                                            "EGP",
                                            "ERN",
                                            "ETB",
                                            "FJD",
                                            "FKP",
                                            "GEL",
                                            "GHS",
                                            "GIP",
                                            "GMD",
                                            "GNF",
                                            "GTQ",
                                            "GYD",
                                            "HKD",
                                            "HNL",
                                            "HRK",
                                            "HTG",
                                            "HUF",
                                            "IDR",
                                            "ILS",
                                            "INR",
                                            "IQD",
                                            "IRR",
                                            "ISK",
                                            "JMD",
                                            "JOD",
                                            "JPY",
                                            "KES",
                                            "KGS",
                                            "KHR",
                                            "KMF",
                                            "KPW",
                                            "KRW",
                                            "KWD",
                                            "KYD",
                                            "KZT",
                                            "LAK",
                                            "LBP",
                                            "LKR",
                                            "LRD",
                                            "LSL",
                                            "LYD",
                                            "MAD",
                                            "MDL",
                                            "MGA",
                                            "MKD",
                                            "MMK",
                                            "MNT",
                                            "MOP",
                                            "MRU",
                                            "MUR",
                                            "MVR",
                                            "MWK",
                                            "MXN",
                                            "MXV",
                                            "MYR",
                                            "MZN",
                                            "NAD",
                                            "NGN",
                                            "NIO",
                                            "NOK",
                                            "NPR",
                                            "NZD",
                                            "OMR",
                                            "PAB",
                                            "PEN",
                                            "PGK",
                                            "PHP",
                                            "PKR",
                                            "PLN",
                                            "PYG",
                                            "QAR",
                                            "RON",
                                            "RSD",
                                            "RUB",
                                            "RWF",
                                            "SAR",
                                            "SBD",
                                            "SCR",
                                            "SDG",
                                            "SEK",
                                            "SGD",
                                            "SLE",
                                            "SLL",
                                            "SOS",
                                            "SRD",
                                            "SSP",
                                            "STN",
                                            "SVC",
                                            "SYP",
                                            "SZL",
                                            "SHP",
                                            "THB",
                                            "TJS",
                                            "TMT",
                                            "TND",
                                            "TOP",
                                            "TRY",
                                            "TTD",
                                            "TWD",
                                            "TZS",
                                            "UAH",
                                            "UGX",
                                            "USD",
                                            "USN",
                                            "UYI",
                                            "UYU",
                                            "UYW",
                                            "UZS",
                                            "VES",
                                            "VND",
                                            "VUV",
                                            "WST",
                                            "XAF",
                                            "XAG",
                                            "XAU",
                                            "XBA",
                                            "XBB",
                                            "XBC",
                                            "XBD",
                                            "XCD",
                                            "XDR",
                                            "XOF",
                                            "XPD",
                                            "XPF",
                                            "XPT",
                                            "XSU",
                                            "XTS",
                                            "XUA",
                                            "XXX",
                                            "YER",
                                            "ZAR",
                                            "ZMW",
                                            "ZWL"
                                          ]
                                        },
                                        "min": {
                                          "type": "number",
                                          "description": "Minimum spend amount (inclusive)",
                                          "example": 5
                                        },
                                        "max": {
                                          "type": "number",
                                          "description": "Maximum spend amount (inclusive)",
                                          "example": 2000
                                        }
                                      },
                                      "description": "Spending constraints"
                                    }
                                  }
                                },
                                "description": "Authorisation constraints"
                              }
                            },
                            "description": "CardConstraints"
                          },
                          "design": {
                            "required": [
                              "cardRef",
                              "packagingRef"
                            ],
                            "type": "object",
                            "properties": {
                              "cardRef": {
                                "type": "string",
                                "description": "Design reference for card"
                              },
                              "packagingRef": {
                                "type": "string",
                                "description": "Design reference for card packaging"
                              }
                            },
                            "description": "Design references for physical card and packaging"
                          },
                          "printedName": {
                            "type": "string",
                            "description": "Name printed on the card. Will only be returned for physical cards. Maximum of 20 alphanumeric characters (including full stop, hyphen, apostrophe, caret and space)"
                          },
                          "cancellationDate": {
                            "type": "string",
                            "description": "Date card will be cancelled on",
                            "example": "2025-01-01"
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "threeDSecureStatus": {
                            "type": "string",
                            "description": "The 3DS status of the card, based on the SMS one time password",
                            "example": "ENROLLED",
                            "deprecated": true,
                            "enum": [
                              "NOT_ENROLLED",
                              "ENROLLED",
                              "UNENROLLED"
                            ]
                          },
                          "authentication": {
                            "type": "object",
                            "properties": {
                              "otpSmsStatus": {
                                "type": "string",
                                "description": "The SMS one time password authentication status",
                                "example": "ENROLLED",
                                "enum": [
                                  "NOT_ENROLLED",
                                  "ENROLLED",
                                  "UNENROLLED"
                                ]
                              },
                              "knowledgeBaseStatus": {
                                "type": "string",
                                "description": "The knowledge based authentication (KBA) status",
                                "example": "ENROLLED",
                                "enum": [
                                  "NOT_ENROLLED",
                                  "ENROLLED",
                                  "UNENROLLED"
                                ]
                              }
                            },
                            "description": "The 3DS authentication method statuses"
                          },
                          "shippingAddress": {
                            "required": [
                              "addressLine1",
                              "country",
                              "postCode",
                              "postTown"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "maxLength": 50,
                                "minLength": 1,
                                "type": "string",
                                "description": "First line of address",
                                "example": "Floor 10"
                              },
                              "addressLine2": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string",
                                "description": "Second line of address",
                                "example": "80 George Street"
                              },
                              "postTown": {
                                "maxLength": 20,
                                "minLength": 1,
                                "type": "string",
                                "description": "Post town",
                                "example": "EDINBURGH"
                              },
                              "postCode": {
                                "maxLength": 10,
                                "minLength": 1,
                                "type": "string",
                                "description": "Postcode",
                                "example": "EH2 3BU"
                              },
                              "country": {
                                "type": "string",
                                "description": "Country (ISO 3166 alpha-2 country code)",
                                "example": "GB",
                                "enum": [
                                  "AT",
                                  "BE",
                                  "BG",
                                  "CY",
                                  "CZ",
                                  "DK",
                                  "EE",
                                  "FI",
                                  "FR",
                                  "DE",
                                  "GR",
                                  "HR",
                                  "HU",
                                  "IS",
                                  "IE",
                                  "IT",
                                  "LV",
                                  "LI",
                                  "LT",
                                  "LU",
                                  "MT",
                                  "NL",
                                  "NO",
                                  "PL",
                                  "PT",
                                  "RO",
                                  "SK",
                                  "SI",
                                  "ES",
                                  "SE",
                                  "AX",
                                  "AW",
                                  "BL",
                                  "CW",
                                  "GF",
                                  "GL",
                                  "GP",
                                  "ME",
                                  "MF",
                                  "MQ",
                                  "NC",
                                  "PF",
                                  "PM",
                                  "RE",
                                  "SX",
                                  "TF",
                                  "WF",
                                  "YT",
                                  "AI",
                                  "BM",
                                  "FK",
                                  "GB",
                                  "GG",
                                  "GI",
                                  "GS",
                                  "IO",
                                  "JE",
                                  "KY",
                                  "MS",
                                  "PN",
                                  "SH",
                                  "TC",
                                  "VG"
                                ]
                              }
                            },
                            "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                          },
                          "customFields": {
                            "type": "array",
                            "description": "Custom fields currently defined for card",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Custom field key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom field value"
                                }
                              },
                              "description": "Custom fields currently defined for card"
                            }
                          },
                          "authWindow": {
                            "type": "object",
                            "properties": {
                              "startDate": {
                                "type": "string",
                                "description": "Authorisation window start date",
                                "format": "date-time"
                              },
                              "endDate": {
                                "type": "string",
                                "description": "Authorisation window end date",
                                "format": "date-time"
                              }
                            },
                            "description": "Authorisation window defined for card"
                          },
                          "channelManagerId": {
                            "type": "string",
                            "description": "Channel Manager identifier",
                            "example": "M883412312"
                          }
                        }
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Create a new virtual card",
        "operationId": "createCard",
        "parameters": [
          {
            "name": "aid",
            "in": "path",
            "description": "The account which card funds will be raised from.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "authentication",
                  "expiry",
                  "externalRef",
                  "holder",
                  "limit",
                  "productCode"
                ],
                "type": "object",
                "properties": {
                  "limit": {
                    "minimum": 1,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Total card authorisation limit.",
                    "format": "double",
                    "example": 1000
                  },
                  "expiry": {
                    "type": "string",
                    "description": "ISO 8601 date with year & month components only. The supplied value must be in the future (cannot be the current month) and is _inclusive_ of the specified month.",
                    "example": "2018-12"
                  },
                  "productCode": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Identifies the _type_ of card to create (GBP consumer, GBP business, etc). Modulr will supply a list of possible values."
                  },
                  "externalRef": {
                    "maxLength": 50,
                    "minLength": 1,
                    "pattern": "[\\w -]*",
                    "type": "string",
                    "description": "Client reference for the newly created card. Maximum of 50 alphanumeric characters (including underscore, hyphen and space)."
                  },
                  "constraints": {
                    "type": "object",
                    "properties": {
                      "authorisation": {
                        "type": "object",
                        "properties": {
                          "spend": {
                            "type": "array",
                            "description": "Spending constraints",
                            "items": {
                              "required": [
                                "currency"
                              ],
                              "type": "object",
                              "properties": {
                                "currency": {
                                  "type": "string",
                                  "description": "A 3 letter ISO 4217 code representing the transaction currency",
                                  "example": "GBP",
                                  "enum": [
                                    "GBP",
                                    "EUR",
                                    "AED",
                                    "AFN",
                                    "ALL",
                                    "AMD",
                                    "ANG",
                                    "AOA",
                                    "ARS",
                                    "AUD",
                                    "AWG",
                                    "AZN",
                                    "BAM",
                                    "BBD",
                                    "BDT",
                                    "BGN",
                                    "BHD",
                                    "BIF",
                                    "BMD",
                                    "BND",
                                    "BOB",
                                    "BOV",
                                    "BRL",
                                    "BSD",
                                    "BTN",
                                    "BWP",
                                    "BYN",
                                    "BZD",
                                    "CAD",
                                    "CDF",
                                    "CHE",
                                    "CHF",
                                    "CHW",
                                    "CLF",
                                    "CLP",
                                    "CNY",
                                    "COP",
                                    "COU",
                                    "CRC",
                                    "CUC",
                                    "CUP",
                                    "CVE",
                                    "CZK",
                                    "DJF",
                                    "DKK",
                                    "DOP",
                                    "DZD",
                                    "EGP",
                                    "ERN",
                                    "ETB",
                                    "FJD",
                                    "FKP",
                                    "GEL",
                                    "GHS",
                                    "GIP",
                                    "GMD",
                                    "GNF",
                                    "GTQ",
                                    "GYD",
                                    "HKD",
                                    "HNL",
                                    "HRK",
                                    "HTG",
                                    "HUF",
                                    "IDR",
                                    "ILS",
                                    "INR",
                                    "IQD",
                                    "IRR",
                                    "ISK",
                                    "JMD",
                                    "JOD",
                                    "JPY",
                                    "KES",
                                    "KGS",
                                    "KHR",
                                    "KMF",
                                    "KPW",
                                    "KRW",
                                    "KWD",
                                    "KYD",
                                    "KZT",
                                    "LAK",
                                    "LBP",
                                    "LKR",
                                    "LRD",
                                    "LSL",
                                    "LYD",
                                    "MAD",
                                    "MDL",
                                    "MGA",
                                    "MKD",
                                    "MMK",
                                    "MNT",
                                    "MOP",
                                    "MRU",
                                    "MUR",
                                    "MVR",
                                    "MWK",
                                    "MXN",
                                    "MXV",
                                    "MYR",
                                    "MZN",
                                    "NAD",
                                    "NGN",
                                    "NIO",
                                    "NOK",
                                    "NPR",
                                    "NZD",
                                    "OMR",
                                    "PAB",
                                    "PEN",
                                    "PGK",
                                    "PHP",
                                    "PKR",
                                    "PLN",
                                    "PYG",
                                    "QAR",
                                    "RON",
                                    "RSD",
                                    "RUB",
                                    "RWF",
                                    "SAR",
                                    "SBD",
                                    "SCR",
                                    "SDG",
                                    "SEK",
                                    "SGD",
                                    "SLE",
                                    "SLL",
                                    "SOS",
                                    "SRD",
                                    "SSP",
                                    "STN",
                                    "SVC",
                                    "SYP",
                                    "SZL",
                                    "SHP",
                                    "THB",
                                    "TJS",
                                    "TMT",
                                    "TND",
                                    "TOP",
                                    "TRY",
                                    "TTD",
                                    "TWD",
                                    "TZS",
                                    "UAH",
                                    "UGX",
                                    "USD",
                                    "USN",
                                    "UYI",
                                    "UYU",
                                    "UYW",
                                    "UZS",
                                    "VES",
                                    "VND",
                                    "VUV",
                                    "WST",
                                    "XAF",
                                    "XAG",
                                    "XAU",
                                    "XBA",
                                    "XBB",
                                    "XBC",
                                    "XBD",
                                    "XCD",
                                    "XDR",
                                    "XOF",
                                    "XPD",
                                    "XPF",
                                    "XPT",
                                    "XSU",
                                    "XTS",
                                    "XUA",
                                    "XXX",
                                    "YER",
                                    "ZAR",
                                    "ZMW",
                                    "ZWL"
                                  ]
                                },
                                "min": {
                                  "type": "number",
                                  "description": "Minimum spend amount (inclusive)",
                                  "example": 5
                                },
                                "max": {
                                  "type": "number",
                                  "description": "Maximum spend amount (inclusive)",
                                  "example": 2000
                                }
                              },
                              "description": "Spending constraints"
                            }
                          }
                        },
                        "description": "Authorisation constraints"
                      }
                    },
                    "description": "Constraints"
                  },
                  "authentication": {
                    "required": [
                      "knowledgeBase"
                    ],
                    "type": "object",
                    "properties": {
                      "knowledgeBase": {
                        "type": "array",
                        "description": "3DS knowledge-based authentication (KBA) answers",
                        "items": {
                          "required": [
                            "answer",
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "3DS knowledge-based authentication answer type",
                              "enum": [
                                "FIRST_PET_NAME",
                                "MATERNAL_GRANDMOTHER_MAIDEN_NAME",
                                "FAVOURITE_CHILDHOOD_FRIEND",
                                "FIRST_CAR",
                                "CITY_PARENTS_MET"
                              ]
                            },
                            "answer": {
                              "maxLength": 45,
                              "minLength": 1,
                              "type": "string",
                              "description": "3DS knowledge-based authentication answer"
                            }
                          },
                          "description": "3DS Knowledge-Based Authentication (KBA) answers"
                        }
                      }
                    },
                    "description": "Authentication. Required by default, optional for Virtual Business Travel Cards only"
                  },
                  "cancellationDate": {
                    "type": "string",
                    "description": "Date for card to be cancelled on",
                    "example": "2025-01-01"
                  },
                  "customFields": {
                    "maxItems": 20,
                    "minItems": 0,
                    "type": "array",
                    "description": "Custom fields of card",
                    "items": {
                      "required": [
                        "key",
                        "value"
                      ],
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Custom field key"
                        },
                        "value": {
                          "type": "string",
                          "description": "Custom field value"
                        }
                      },
                      "description": "Custom fields"
                    }
                  },
                  "authorisationWindow": {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "type": "string",
                        "example": "2025-01-01"
                      },
                      "endDate": {
                        "type": "string",
                        "example": "2025-01-01"
                      }
                    },
                    "description": "Authorisation Windows allow the card holder to add a period of time where the card can ONLY be used, if an Authorisation Window set then transactions outside this window will decline. ISO 8601 date with year, month & day components only."
                  },
                  "holder": {
                    "required": [
                      "billingAddress",
                      "dateOfBirth",
                      "firstName",
                      "lastName",
                      "mobileNumber"
                    ],
                    "type": "object",
                    "properties": {
                      "title": {
                        "pattern": "^[0-9a-zA-Z]{1,4}$",
                        "type": "string",
                        "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                        "example": "Mr"
                      },
                      "firstName": {
                        "pattern": "[\\x20-\\x7e]{1,20}",
                        "type": "string",
                        "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                        "example": "Joe"
                      },
                      "lastName": {
                        "pattern": "[\\x20-\\x7e]{1,20}",
                        "type": "string",
                        "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                        "example": "Bloggs"
                      },
                      "billingAddress": {
                        "required": [
                          "addressLine1",
                          "country",
                          "postCode",
                          "postTown"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string",
                            "description": "First line of address",
                            "example": "Floor 10"
                          },
                          "addressLine2": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Second line of address",
                            "example": "80 George Street"
                          },
                          "postTown": {
                            "maxLength": 20,
                            "minLength": 1,
                            "type": "string",
                            "description": "Post town",
                            "example": "EDINBURGH"
                          },
                          "postCode": {
                            "maxLength": 10,
                            "minLength": 1,
                            "type": "string",
                            "description": "Postcode",
                            "example": "EH2 3BU"
                          },
                          "country": {
                            "type": "string",
                            "description": "Country (ISO 3166 alpha-2 country code)",
                            "example": "GB",
                            "enum": [
                              "AT",
                              "BE",
                              "BG",
                              "CY",
                              "CZ",
                              "DK",
                              "EE",
                              "FI",
                              "FR",
                              "DE",
                              "GR",
                              "HR",
                              "HU",
                              "IS",
                              "IE",
                              "IT",
                              "LV",
                              "LI",
                              "LT",
                              "LU",
                              "MT",
                              "NL",
                              "NO",
                              "PL",
                              "PT",
                              "RO",
                              "SK",
                              "SI",
                              "ES",
                              "SE",
                              "AX",
                              "AW",
                              "BL",
                              "CW",
                              "GF",
                              "GL",
                              "GP",
                              "ME",
                              "MF",
                              "MQ",
                              "NC",
                              "PF",
                              "PM",
                              "RE",
                              "SX",
                              "TF",
                              "WF",
                              "YT",
                              "AI",
                              "BM",
                              "FK",
                              "GB",
                              "GG",
                              "GI",
                              "GS",
                              "IO",
                              "JE",
                              "KY",
                              "MS",
                              "PN",
                              "SH",
                              "TC",
                              "VG"
                            ]
                          }
                        },
                        "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                      },
                      "dateOfBirth": {
                        "type": "string",
                        "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                        "format": "date",
                        "example": "2001-01-01"
                      },
                      "mobileNumber": {
                        "type": "string",
                        "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                        "example": "+447123456000"
                      },
                      "email": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Cardholder email",
                        "example": "cardholder@example.com"
                      }
                    },
                    "description": "CardHolder"
                  }
                },
                "description": "Card"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Virtual card created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "createdDate",
                    "cvv2",
                    "externalRef",
                    "id",
                    "maxLimit",
                    "pan"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Card identifier. Maximum of 10 alphanumeric characters."
                    },
                    "pan": {
                      "type": "string",
                      "description": "Full card PAN."
                    },
                    "maskedPan": {
                      "type": "string",
                      "description": "Masked card PAN."
                    },
                    "cvv2": {
                      "type": "string",
                      "description": "Card CVV2 number."
                    },
                    "externalRef": {
                      "type": "string",
                      "description": "Client reference for the newly created card."
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "The creation date of the card",
                      "format": "date-time"
                    },
                    "maxLimit": {
                      "type": "string",
                      "description": "Maximum Limit which can be set on this card and is the maximum lifetime spend the card can have",
                      "example": "4000.0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/partner/{partnerId}/card-custom-fields": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "View existing partner card custom field keys",
        "operationId": "getPartnerCustomFieldKeys",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id of partner to retrieve custom fields for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Statuses of the card custom field keys to be retrieved. If omitted default statuses 'ASSIGNED' and 'AVAILABLE' will be applied.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ASSIGNED",
                "ASSIGNED_DELETED",
                "AVAILABLE",
                "UNAVAILABLE"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card custom fields for partner returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Custom field key"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Whether the custom field is required or not"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customer/{customerId}/card-custom-fields": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "View existing customer card custom field keys",
        "operationId": "getCustomerCustomFieldKeys",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to retrieve custom fields for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Statuses of the card custom field keys to be retrieved. If omitted default statuses 'ASSIGNED' and 'AVAILABLE' will be applied.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ASSIGNED",
                "ASSIGNED_DELETED",
                "AVAILABLE",
                "UNAVAILABLE"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card custom fields for customer returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Custom field key"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Whether the custom field is required or not"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "View the details of existing cards",
        "operationId": "getCards",
        "parameters": [
          {
            "name": "fromCreatedDate",
            "in": "query",
            "description": "Cards created on or after this date. Cannot be older than 7 days. Format is `yyyy-MM-dd'T'HH:mm:ss` with zero offset from UTC.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "2019-03-01T01:01:01+0000"
          },
          {
            "name": "toCreatedDate",
            "in": "query",
            "description": "Cards created on or before this date. Format is `yyyy-MM-dd'T'HH:mm:ss` with zero offset from UTC.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "2019-03-01T01:01:01+0000"
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Statuses of cards to be retrieved",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "CREATED",
                "ACTIVE",
                "BLOCKED",
                "SUSPENDED",
                "CANCELLED",
                "EXPIRED"
              ]
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the card to view.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "V000000001"
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "The ID of account to retrieve cards for.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "A0000001"
          },
          {
            "name": "externalRef",
            "in": "query",
            "description": "The client reference of the card to retrieve.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "ExampleCardRef123"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "The ID of the customer to retrieve cards for.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "C0000001"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency to get cards for. Expected ISO Standard currency name i.e. GBP, EUR etc",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "GBP"
          },
          {
            "name": "customFieldKey",
            "in": "query",
            "description": "Custom Field Key to get cards for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "BookingReference"
          },
          {
            "name": "customFieldValue",
            "in": "query",
            "description": "Custom Field Value corresponding to the custom field key to get cards for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Booking123"
          },
          {
            "name": "accountIds",
            "in": "query",
            "description": "Set of account Ids to retrieve cards for.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "A0000001"
          },
          {
            "name": "channelManagerId",
            "in": "query",
            "description": "The Id of the Channel manager",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "M883412312"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cards returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Card identifier. Maximum of 10 alphanumeric characters",
                            "example": "V000000001"
                          },
                          "holder": {
                            "required": [
                              "billingAddress",
                              "dateOfBirth",
                              "firstName",
                              "lastName",
                              "mobileNumber"
                            ],
                            "type": "object",
                            "properties": {
                              "title": {
                                "pattern": "^[0-9a-zA-Z]{1,4}$",
                                "type": "string",
                                "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                                "example": "Mr"
                              },
                              "firstName": {
                                "pattern": "[\\x20-\\x7e]{1,20}",
                                "type": "string",
                                "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                                "example": "Joe"
                              },
                              "lastName": {
                                "pattern": "[\\x20-\\x7e]{1,20}",
                                "type": "string",
                                "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                                "example": "Bloggs"
                              },
                              "billingAddress": {
                                "required": [
                                  "addressLine1",
                                  "country",
                                  "postCode",
                                  "postTown"
                                ],
                                "type": "object",
                                "properties": {
                                  "addressLine1": {
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "First line of address",
                                    "example": "Floor 10"
                                  },
                                  "addressLine2": {
                                    "maxLength": 50,
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Second line of address",
                                    "example": "80 George Street"
                                  },
                                  "postTown": {
                                    "maxLength": 20,
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "Post town",
                                    "example": "EDINBURGH"
                                  },
                                  "postCode": {
                                    "maxLength": 10,
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "Postcode",
                                    "example": "EH2 3BU"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "Country (ISO 3166 alpha-2 country code)",
                                    "example": "GB",
                                    "enum": [
                                      "AT",
                                      "BE",
                                      "BG",
                                      "CY",
                                      "CZ",
                                      "DK",
                                      "EE",
                                      "FI",
                                      "FR",
                                      "DE",
                                      "GR",
                                      "HR",
                                      "HU",
                                      "IS",
                                      "IE",
                                      "IT",
                                      "LV",
                                      "LI",
                                      "LT",
                                      "LU",
                                      "MT",
                                      "NL",
                                      "NO",
                                      "PL",
                                      "PT",
                                      "RO",
                                      "SK",
                                      "SI",
                                      "ES",
                                      "SE",
                                      "AX",
                                      "AW",
                                      "BL",
                                      "CW",
                                      "GF",
                                      "GL",
                                      "GP",
                                      "ME",
                                      "MF",
                                      "MQ",
                                      "NC",
                                      "PF",
                                      "PM",
                                      "RE",
                                      "SX",
                                      "TF",
                                      "WF",
                                      "YT",
                                      "AI",
                                      "BM",
                                      "FK",
                                      "GB",
                                      "GG",
                                      "GI",
                                      "GS",
                                      "IO",
                                      "JE",
                                      "KY",
                                      "MS",
                                      "PN",
                                      "SH",
                                      "TC",
                                      "VG"
                                    ]
                                  }
                                },
                                "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                              },
                              "dateOfBirth": {
                                "type": "string",
                                "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                                "format": "date",
                                "example": "2001-01-01"
                              },
                              "mobileNumber": {
                                "type": "string",
                                "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                                "example": "+447123456000"
                              },
                              "email": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string",
                                "description": "Cardholder email",
                                "example": "cardholder@example.com"
                              }
                            },
                            "description": "CardHolder"
                          },
                          "expiry": {
                            "type": "string",
                            "description": "An ISO 8601 date with year & month components only",
                            "example": "2018-12"
                          },
                          "status": {
                            "type": "string",
                            "description": "The current state of the card."
                          },
                          "currency": {
                            "type": "string",
                            "description": "A 3 letter ISO 4217 code representing the card currency",
                            "example": "GBP"
                          },
                          "limit": {
                            "type": "string",
                            "description": "Total card authorisation limit",
                            "example": "1000.0"
                          },
                          "maxLimit": {
                            "type": "string",
                            "description": "Maximum limit which can be set on this card and is the maximum lifetime spend the card can have",
                            "example": "4000.0"
                          },
                          "spend": {
                            "type": "string",
                            "description": "Current total of all authorisations on this card",
                            "example": "250.0"
                          },
                          "externalRef": {
                            "type": "string",
                            "description": "Client reference for the newly created card. Maximum of 50 characters.",
                            "example": "TTQ_51211"
                          },
                          "maskedPan": {
                            "type": "string",
                            "description": "Masked card PAN",
                            "example": "527095******3544"
                          },
                          "cardType": {
                            "type": "string",
                            "description": "Card product type",
                            "example": "Business"
                          },
                          "cardScheme": {
                            "type": "string",
                            "description": "Card scheme. MASTERCARD or VISA",
                            "example": "MASTERCARD"
                          },
                          "accountBid": {
                            "type": "string",
                            "description": "Account identifier",
                            "example": "A020N8PD"
                          },
                          "productId": {
                            "type": "string",
                            "description": "Product identifier",
                            "example": "O210003A"
                          },
                          "format": {
                            "type": "string",
                            "description": "The format of the card.  PHYSICAL or VIRTUAL",
                            "example": "PHYSICAL",
                            "enum": [
                              "PHYSICAL",
                              "VIRTUAL"
                            ]
                          },
                          "constraints": {
                            "required": [
                              "mccWhitelist"
                            ],
                            "type": "object",
                            "properties": {
                              "mccWhitelist": {
                                "type": "array",
                                "description": "mccWhitelist",
                                "example": [
                                  "1000",
                                  "1002-3000",
                                  "5060"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "mccWhitelist",
                                  "example": "[\"1000\",\"1002-3000\",\"5060\"]"
                                }
                              },
                              "authorisation": {
                                "type": "object",
                                "properties": {
                                  "spend": {
                                    "type": "array",
                                    "description": "Spending constraints",
                                    "items": {
                                      "required": [
                                        "currency"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "currency": {
                                          "type": "string",
                                          "description": "A 3 letter ISO 4217 code representing the transaction currency",
                                          "example": "GBP",
                                          "enum": [
                                            "GBP",
                                            "EUR",
                                            "AED",
                                            "AFN",
                                            "ALL",
                                            "AMD",
                                            "ANG",
                                            "AOA",
                                            "ARS",
                                            "AUD",
                                            "AWG",
                                            "AZN",
                                            "BAM",
                                            "BBD",
                                            "BDT",
                                            "BGN",
                                            "BHD",
                                            "BIF",
                                            "BMD",
                                            "BND",
                                            "BOB",
                                            "BOV",
                                            "BRL",
                                            "BSD",
                                            "BTN",
                                            "BWP",
                                            "BYN",
                                            "BZD",
                                            "CAD",
                                            "CDF",
                                            "CHE",
                                            "CHF",
                                            "CHW",
                                            "CLF",
                                            "CLP",
                                            "CNY",
                                            "COP",
                                            "COU",
                                            "CRC",
                                            "CUC",
                                            "CUP",
                                            "CVE",
                                            "CZK",
                                            "DJF",
                                            "DKK",
                                            "DOP",
                                            "DZD",
                                            "EGP",
                                            "ERN",
                                            "ETB",
                                            "FJD",
                                            "FKP",
                                            "GEL",
                                            "GHS",
                                            "GIP",
                                            "GMD",
                                            "GNF",
                                            "GTQ",
                                            "GYD",
                                            "HKD",
                                            "HNL",
                                            "HRK",
                                            "HTG",
                                            "HUF",
                                            "IDR",
                                            "ILS",
                                            "INR",
                                            "IQD",
                                            "IRR",
                                            "ISK",
                                            "JMD",
                                            "JOD",
                                            "JPY",
                                            "KES",
                                            "KGS",
                                            "KHR",
                                            "KMF",
                                            "KPW",
                                            "KRW",
                                            "KWD",
                                            "KYD",
                                            "KZT",
                                            "LAK",
                                            "LBP",
                                            "LKR",
                                            "LRD",
                                            "LSL",
                                            "LYD",
                                            "MAD",
                                            "MDL",
                                            "MGA",
                                            "MKD",
                                            "MMK",
                                            "MNT",
                                            "MOP",
                                            "MRU",
                                            "MUR",
                                            "MVR",
                                            "MWK",
                                            "MXN",
                                            "MXV",
                                            "MYR",
                                            "MZN",
                                            "NAD",
                                            "NGN",
                                            "NIO",
                                            "NOK",
                                            "NPR",
                                            "NZD",
                                            "OMR",
                                            "PAB",
                                            "PEN",
                                            "PGK",
                                            "PHP",
                                            "PKR",
                                            "PLN",
                                            "PYG",
                                            "QAR",
                                            "RON",
                                            "RSD",
                                            "RUB",
                                            "RWF",
                                            "SAR",
                                            "SBD",
                                            "SCR",
                                            "SDG",
                                            "SEK",
                                            "SGD",
                                            "SLE",
                                            "SLL",
                                            "SOS",
                                            "SRD",
                                            "SSP",
                                            "STN",
                                            "SVC",
                                            "SYP",
                                            "SZL",
                                            "SHP",
                                            "THB",
                                            "TJS",
                                            "TMT",
                                            "TND",
                                            "TOP",
                                            "TRY",
                                            "TTD",
                                            "TWD",
                                            "TZS",
                                            "UAH",
                                            "UGX",
                                            "USD",
                                            "USN",
                                            "UYI",
                                            "UYU",
                                            "UYW",
                                            "UZS",
                                            "VES",
                                            "VND",
                                            "VUV",
                                            "WST",
                                            "XAF",
                                            "XAG",
                                            "XAU",
                                            "XBA",
                                            "XBB",
                                            "XBC",
                                            "XBD",
                                            "XCD",
                                            "XDR",
                                            "XOF",
                                            "XPD",
                                            "XPF",
                                            "XPT",
                                            "XSU",
                                            "XTS",
                                            "XUA",
                                            "XXX",
                                            "YER",
                                            "ZAR",
                                            "ZMW",
                                            "ZWL"
                                          ]
                                        },
                                        "min": {
                                          "type": "number",
                                          "description": "Minimum spend amount (inclusive)",
                                          "example": 5
                                        },
                                        "max": {
                                          "type": "number",
                                          "description": "Maximum spend amount (inclusive)",
                                          "example": 2000
                                        }
                                      },
                                      "description": "Spending constraints"
                                    }
                                  }
                                },
                                "description": "Authorisation constraints"
                              }
                            },
                            "description": "CardConstraints"
                          },
                          "design": {
                            "required": [
                              "cardRef",
                              "packagingRef"
                            ],
                            "type": "object",
                            "properties": {
                              "cardRef": {
                                "type": "string",
                                "description": "Design reference for card"
                              },
                              "packagingRef": {
                                "type": "string",
                                "description": "Design reference for card packaging"
                              }
                            },
                            "description": "Design references for physical card and packaging"
                          },
                          "printedName": {
                            "type": "string",
                            "description": "Name printed on the card. Will only be returned for physical cards. Maximum of 20 alphanumeric characters (including full stop, hyphen, apostrophe, caret and space)"
                          },
                          "cancellationDate": {
                            "type": "string",
                            "description": "Date card will be cancelled on",
                            "example": "2025-01-01"
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "threeDSecureStatus": {
                            "type": "string",
                            "description": "The 3DS status of the card, based on the SMS one time password",
                            "example": "ENROLLED",
                            "deprecated": true,
                            "enum": [
                              "NOT_ENROLLED",
                              "ENROLLED",
                              "UNENROLLED"
                            ]
                          },
                          "authentication": {
                            "type": "object",
                            "properties": {
                              "otpSmsStatus": {
                                "type": "string",
                                "description": "The SMS one time password authentication status",
                                "example": "ENROLLED",
                                "enum": [
                                  "NOT_ENROLLED",
                                  "ENROLLED",
                                  "UNENROLLED"
                                ]
                              },
                              "knowledgeBaseStatus": {
                                "type": "string",
                                "description": "The knowledge based authentication (KBA) status",
                                "example": "ENROLLED",
                                "enum": [
                                  "NOT_ENROLLED",
                                  "ENROLLED",
                                  "UNENROLLED"
                                ]
                              }
                            },
                            "description": "The 3DS authentication method statuses"
                          },
                          "shippingAddress": {
                            "required": [
                              "addressLine1",
                              "country",
                              "postCode",
                              "postTown"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "maxLength": 50,
                                "minLength": 1,
                                "type": "string",
                                "description": "First line of address",
                                "example": "Floor 10"
                              },
                              "addressLine2": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string",
                                "description": "Second line of address",
                                "example": "80 George Street"
                              },
                              "postTown": {
                                "maxLength": 20,
                                "minLength": 1,
                                "type": "string",
                                "description": "Post town",
                                "example": "EDINBURGH"
                              },
                              "postCode": {
                                "maxLength": 10,
                                "minLength": 1,
                                "type": "string",
                                "description": "Postcode",
                                "example": "EH2 3BU"
                              },
                              "country": {
                                "type": "string",
                                "description": "Country (ISO 3166 alpha-2 country code)",
                                "example": "GB",
                                "enum": [
                                  "AT",
                                  "BE",
                                  "BG",
                                  "CY",
                                  "CZ",
                                  "DK",
                                  "EE",
                                  "FI",
                                  "FR",
                                  "DE",
                                  "GR",
                                  "HR",
                                  "HU",
                                  "IS",
                                  "IE",
                                  "IT",
                                  "LV",
                                  "LI",
                                  "LT",
                                  "LU",
                                  "MT",
                                  "NL",
                                  "NO",
                                  "PL",
                                  "PT",
                                  "RO",
                                  "SK",
                                  "SI",
                                  "ES",
                                  "SE",
                                  "AX",
                                  "AW",
                                  "BL",
                                  "CW",
                                  "GF",
                                  "GL",
                                  "GP",
                                  "ME",
                                  "MF",
                                  "MQ",
                                  "NC",
                                  "PF",
                                  "PM",
                                  "RE",
                                  "SX",
                                  "TF",
                                  "WF",
                                  "YT",
                                  "AI",
                                  "BM",
                                  "FK",
                                  "GB",
                                  "GG",
                                  "GI",
                                  "GS",
                                  "IO",
                                  "JE",
                                  "KY",
                                  "MS",
                                  "PN",
                                  "SH",
                                  "TC",
                                  "VG"
                                ]
                              }
                            },
                            "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                          },
                          "customFields": {
                            "type": "array",
                            "description": "Custom fields currently defined for card",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Custom field key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom field value"
                                }
                              },
                              "description": "Custom fields currently defined for card"
                            }
                          },
                          "authWindow": {
                            "type": "object",
                            "properties": {
                              "startDate": {
                                "type": "string",
                                "description": "Authorisation window start date",
                                "format": "date-time"
                              },
                              "endDate": {
                                "type": "string",
                                "description": "Authorisation window end date",
                                "format": "date-time"
                              }
                            },
                            "description": "Authorisation window defined for card"
                          },
                          "channelManagerId": {
                            "type": "string",
                            "description": "Channel Manager identifier",
                            "example": "M883412312"
                          }
                        }
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/tokens": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Get card tokens",
        "description": "Retrieves all payment card tokens for the given card",
        "operationId": "getCardTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Card ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "V110000001"
          },
          {
            "name": "includeDeletedDevices",
            "in": "query",
            "description": "Include deleted devices in results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Card tokens retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "size"
                  ],
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "integer",
                      "description": "Number of elements in content",
                      "format": "int32",
                      "example": 1
                    },
                    "content": {
                      "type": "array",
                      "description": "List of response elements",
                      "items": {
                        "required": [
                          "expiry",
                          "id",
                          "language",
                          "status",
                          "type",
                          "wallet"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Card token ID",
                            "example": "T110000001"
                          },
                          "expiry": {
                            "type": "string",
                            "description": "Token expiry date (ISO 8601 format)",
                            "format": "date",
                            "example": "2021-10-31"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of system the token is encoded onto",
                            "example": "SECURE_ELEMENT",
                            "enum": [
                              "BROWSER_ACCESSIBLE_WALLET",
                              "CONTACTLESS_DEVICE_PAN",
                              "CARD_ON_FILE_PAN",
                              "REAL_PAN",
                              "UNKNOWN",
                              "VIRTUAL_PAN",
                              "SECURE_ELEMENT",
                              "CLOUD_BASED"
                            ]
                          },
                          "wallet": {
                            "type": "string",
                            "description": "Wallet the token belongs to",
                            "example": "APPLE",
                            "enum": [
                              "APPLE",
                              "GOOGLE",
                              "MRCHTOKEN"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "Card token status",
                            "example": "PROVISIONED",
                            "enum": [
                              "APPROVED",
                              "ACTIVE",
                              "AWAITING_AUTHENTICATION",
                              "AUTHENTICATION_FAILED",
                              "AUTO_SUSPENDED",
                              "SUSPENDED",
                              "DEACTIVATED",
                              "UNKNOWN"
                            ]
                          },
                          "language": {
                            "type": "string",
                            "description": "2-digit ISO 639-1 language code",
                            "example": "EN"
                          },
                          "devices": {
                            "type": "array",
                            "items": {
                              "required": [
                                "id",
                                "ip",
                                "name",
                                "status",
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Device ID",
                                  "example": "D110000001"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Device type",
                                  "example": "MOBILE_PHONE",
                                  "enum": [
                                    "CLOTHING",
                                    "MEDIA_GAMING",
                                    "CARD",
                                    "DOMESTIC_APPLIANCE",
                                    "FOB",
                                    "MOBILE_TAG",
                                    "FASHION",
                                    "JEWELRY",
                                    "MOBILE_PHONE",
                                    "PERSONAL_COMPUTER",
                                    "WRISTBAND",
                                    "STICKER",
                                    "TABLET",
                                    "UNKNOWN",
                                    "VEHICLE",
                                    "WATCH",
                                    "MOBILE_PHONE_OR_TABLET"
                                  ]
                                },
                                "ip": {
                                  "type": "string",
                                  "description": "IPv4 address of the device. Either in hex format (i.e FFFFFFFF) or decimal format (i.e. 255.255.255.255)",
                                  "example": "255.255.255.255"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Device name, as given by the cardholder",
                                  "example": "iPhone 12"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Device status",
                                  "example": "ACTIVE",
                                  "enum": [
                                    "PENDING_PROVISIONING",
                                    "PROVISIONED",
                                    "DELETED",
                                    "UNKNOWN"
                                  ]
                                }
                              }
                            }
                          },
                          "maskedDpan": {
                            "type": "string",
                            "description": "Masked DPAN (last 4 digits) to the associated token ID",
                            "example": "1234"
                          }
                        },
                        "description": "Payment token details for a card"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/secure-details": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Retrieve secure card details (PAN + CVV + PIN)",
        "description": "Receives the secure card details token as a parameter. This call is meant to be done from the cardholder device and not directly by the partner",
        "operationId": "getSecureCardDetails",
        "responses": {
          "200": {
            "description": "Secure card details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "cvv2",
                    "pan"
                  ],
                  "type": "object",
                  "properties": {
                    "pan": {
                      "type": "string",
                      "description": "PAN",
                      "example": "4567123412341234"
                    },
                    "cvv2": {
                      "type": "string",
                      "description": "CVV",
                      "example": "123"
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN",
                      "example": "1234"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Token may be missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "cvv2",
                    "pan"
                  ],
                  "type": "object",
                  "properties": {
                    "pan": {
                      "type": "string",
                      "description": "PAN",
                      "example": "4567123412341234"
                    },
                    "cvv2": {
                      "type": "string",
                      "description": "CVV",
                      "example": "123"
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN",
                      "example": "1234"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/card-tokens/{tokenId}/otp": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Get card token OTP details",
        "description": "Retrieves the OTP details given the corresponding card token ID",
        "operationId": "getOtpDetails",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "description": "Card token ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "T110000001"
          }
        ],
        "responses": {
          "200": {
            "description": "OTP details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "deliveryDetails",
                    "deliveryMethod",
                    "expiry",
                    "verificationCode"
                  ],
                  "type": "object",
                  "properties": {
                    "deliveryDetails": {
                      "type": "string",
                      "description": "OTP delivery details",
                      "example": "+447777123456"
                    },
                    "deliveryMethod": {
                      "type": "string",
                      "description": "OTP delivery method",
                      "example": "SMS",
                      "enum": [
                        "SMS",
                        "EMAIL",
                        "CALL_CENTRE",
                        "AUTOMATED_CALL_CENTRE",
                        "WEB",
                        "APP",
                        "PHONE_CALL",
                        "NONE"
                      ]
                    },
                    "expiry": {
                      "type": "string",
                      "description": "OTP expiry date and time (UTC, ISO 8601 format)",
                      "format": "date-time"
                    },
                    "verificationCode": {
                      "type": "string",
                      "description": "OTP",
                      "example": "393805"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "deliveryDetails",
                    "deliveryMethod",
                    "expiry",
                    "verificationCode"
                  ],
                  "type": "object",
                  "properties": {
                    "deliveryDetails": {
                      "type": "string",
                      "description": "OTP delivery details",
                      "example": "+447777123456"
                    },
                    "deliveryMethod": {
                      "type": "string",
                      "description": "OTP delivery method",
                      "example": "SMS",
                      "enum": [
                        "SMS",
                        "EMAIL",
                        "CALL_CENTRE",
                        "AUTOMATED_CALL_CENTRE",
                        "WEB",
                        "APP",
                        "PHONE_CALL",
                        "NONE"
                      ]
                    },
                    "expiry": {
                      "type": "string",
                      "description": "OTP expiry date and time (UTC, ISO 8601 format)",
                      "format": "date-time"
                    },
                    "verificationCode": {
                      "type": "string",
                      "description": "OTP",
                      "example": "393805"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/card-tasks": {
      "get": {
        "tags": [
          "Async",
          "Cards"
        ],
        "summary": "Get tasks",
        "description": "View the details of card tasks.  Ordered by createdDate, with the newest entries appearing first",
        "operationId": "getAsyncTasks",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the card task",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "T000000001"
          },
          {
            "name": "aid",
            "in": "query",
            "description": "The account ID to retrieve card tasks for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "A0000001"
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Statuses of card tasks to be retrieved",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "RECEIVED",
                "RUNNING",
                "COMPLETE",
                "ERROR"
              ]
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Types of card tasks to be retrieved",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "PHYSICAL_CARD_CREATE"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "createdDate",
                          "status",
                          "taskBid",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "taskBid": {
                            "type": "string",
                            "description": "ID of async task",
                            "example": "T110000003"
                          },
                          "resourceUrl": {
                            "type": "string",
                            "description": "Url of available resource after task completion",
                            "example": "/cards/V110000022"
                          },
                          "resourceId": {
                            "type": "string",
                            "description": "ID of resource after task completion. Will only be returned for COMPLETE tasks.",
                            "example": "V110000022"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of async task"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the task"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "The creation date of the task",
                            "format": "date-time"
                          },
                          "errorReason": {
                            "type": "string",
                            "description": "The error reason. Only populated if status is ERROR"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/card-tasks/{id}": {
      "get": {
        "tags": [
          "Async"
        ],
        "summary": "Get a card task",
        "description": "Retrieve the card task. If the task is complete, the resource URL will be provided to allow client to fetch the completed resource.",
        "operationId": "getAsyncTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the card task",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details returned of the card task. If task is complete, response will include link to resource",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "createdDate",
                    "status",
                    "taskBid",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "taskBid": {
                      "type": "string",
                      "description": "ID of async task",
                      "example": "T110000003"
                    },
                    "resourceUrl": {
                      "type": "string",
                      "description": "Url of available resource after task completion",
                      "example": "/cards/V110000022"
                    },
                    "resourceId": {
                      "type": "string",
                      "description": "ID of resource after task completion. Will only be returned for COMPLETE tasks.",
                      "example": "V110000022"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of async task"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the task"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "The creation date of the task",
                      "format": "date-time"
                    },
                    "errorReason": {
                      "type": "string",
                      "description": "The error reason. Only populated if status is ERROR"
                    }
                  },
                  "description": "List of responses on the current page"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/card-reports": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Retrieve card reports",
        "description": "Retrieve card reports",
        "operationId": "searchReports",
        "parameters": [
          {
            "name": "fromReportDate",
            "in": "query",
            "description": "Retrieve reports equal to or after this date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Retrieve reports equal to or after this date",
              "example": "2023-01-01"
            },
            "example": "2023-01-01"
          },
          {
            "name": "toReportDate",
            "in": "query",
            "description": "Retrieve reports equal to or before this date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Retrieve reports equal to or before this date",
              "example": "2023-01-30"
            },
            "example": "2023-01-30"
          },
          {
            "name": "reportTypes",
            "in": "query",
            "description": "Report types",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Report types",
              "example": "DAILY_CARD_ACTIVITY"
            },
            "example": "DAILY_CARD_ACTIVITY"
          },
          {
            "name": "reportSubjectIds",
            "in": "query",
            "description": "Report subject Ids",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Report subject Ids",
              "example": "C1000001"
            },
            "example": "C1000001"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "string",
              "description": "Page to fetch (0 indexed)",
              "default": "0"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page(s)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "string",
              "description": "The size of the page(s)"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(reportDate|reportType)",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "(asc|desc)",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card reports retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "reportSubjectId": {
                            "type": "string"
                          },
                          "reportDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "reportType": {
                            "type": "string",
                            "enum": [
                              "DAILY_CARD_ACTIVITY",
                              "MONTHLY_CARD_ACTIVITY",
                              "DAILY_ACCOUNT_FUNDING",
                              "MONTHLY_ACCOUNT_FUNDING",
                              "DAILY_AUTH_WINDOW",
                              "DAILY_CARD_MANAGEMENT"
                            ]
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "reportSubjectId": {
                            "type": "string"
                          },
                          "reportDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "reportType": {
                            "type": "string",
                            "enum": [
                              "DAILY_CARD_ACTIVITY",
                              "MONTHLY_CARD_ACTIVITY",
                              "DAILY_ACCOUNT_FUNDING",
                              "MONTHLY_ACCOUNT_FUNDING",
                              "DAILY_AUTH_WINDOW",
                              "DAILY_CARD_MANAGEMENT"
                            ]
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/card-reports/{reportId}/report": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Download a specific card report",
        "description": "Download a specific card report",
        "operationId": "retrieveReport",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card report retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/activities": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "View activities for specific cards or over a date range",
        "description": "View activities for a specified list of cards and a given time frame. View activities for all cards belonging to a specified list of accounts and a given time frame. View all activities for a single card when a single card ID is specified, time frame is optional.",
        "operationId": "getCardActivities",
        "parameters": [
          {
            "name": "fromCreatedDate",
            "in": "query",
            "description": "Activities with a created date equal to or after this date. Format: 'yyyy-MM-dd'T'HH:mm:ssZ'. Value cannot be more than 7 days in the past when mandatory. Value is optional if only a single Card ID has been provided",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "2019-01-01T15:14:38-0000"
          },
          {
            "name": "toCreatedDate",
            "in": "query",
            "description": "Activities with a created date before this date. Format: 'yyyy-MM-dd'T'HH:mm:ssZ'. Value is optional if only a single Card ID has been provided",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "2019-01-01T15:14:38-0000"
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Activities with possibly multiple statuses equal to this value. Omitting this is equivalent to supplying all values",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "DECLINED",
                "APPROVED",
                "SETTLED",
                "EXPIRED",
                "APPLIED"
              ]
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Activities with possibly multiple types equal to this value. Omitting this is equivalent to supplying all values",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "AUTHORISATION",
                "REVERSAL",
                "SETTLEMENT",
                "REFUND",
                "ORIGINAL_CREDIT"
              ]
            }
          },
          {
            "name": "cards",
            "in": "query",
            "description": "Activities with possibly multiple card IDs equal to this value. Only one of 'cards' or 'accounts' must be supplied",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "accounts",
            "in": "query",
            "description": "Activities with possibly multiple account IDs equal to this value. Only one of 'cards' or 'accounts' must be supplied",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Activities with the specified IDs. Only 'page' and/or 'size' may be used in conjunction with this filter.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Activites with specified Order Id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "channelManagerId",
            "in": "query",
            "description": "Id of channel manager to return activities for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortFields",
            "in": "query",
            "description": "A list of fields to sort the response by. Sorting will be applied in the order the fields are given",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "createdDate",
                "orderId"
              ]
            }
          },
          {
            "name": "sortOrders",
            "in": "query",
            "description": "A list of orders to apply to the respective sortFields. The only accepted sortOrders will be ASC and DESC (case insensitive)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card activity data returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "billingAmount",
                          "billingCurrency",
                          "cardId",
                          "createdDate",
                          "fxRate",
                          "id",
                          "mcc",
                          "orderId",
                          "transactionAmount",
                          "transactionCurrency",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The card activity identifier. Maximum of 10 alphanumeric characters",
                            "example": "X000000001"
                          },
                          "orderId": {
                            "type": "string",
                            "description": "Order identifier which links together related authorisations, reversals & settlements. Maximum of 10 alphanumeric characters",
                            "example": "1234"
                          },
                          "cardId": {
                            "type": "string",
                            "description": "Card identifier. Maximum of 10 alphanumeric characters",
                            "example": "V000000001"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of card activity",
                            "enum": [
                              "AUTHORISATION",
                              "REVERSAL",
                              "SETTLEMENT",
                              "REFUND"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of card activity. Only applies to activities of type AUTHORISATION",
                            "enum": [
                              "DECLINED",
                              "APPROVED",
                              "SETTLED",
                              "EXPIRED"
                            ]
                          },
                          "reason": {
                            "type": "string",
                            "description": "The reason why this activity was declined. Only applies to activities with status DECLINED",
                            "example": "Account has insufficient funds"
                          },
                          "verifiedBy3DS": {
                            "type": "boolean",
                            "description": "Whether the activity was 3DS enabled"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "The creation date of the card activity",
                            "format": "date-time"
                          },
                          "transactionAmount": {
                            "type": "number",
                            "description": "The card activity transaction amount",
                            "example": 123.45
                          },
                          "transactionCurrency": {
                            "type": "string",
                            "description": "The 3 letter ISO 4217 card activity transaction currency",
                            "example": "EUR"
                          },
                          "billingAmount": {
                            "type": "number",
                            "description": "The card activity billing amount",
                            "example": 678.91
                          },
                          "billingCurrency": {
                            "type": "string",
                            "description": "The 3 letter ISO 4217 card activity billing currency",
                            "example": "GBP"
                          },
                          "fxRate": {
                            "type": "number",
                            "description": "The FX rate applied to any conversion between transaction & billing amount. Rounded to 6 decimal places and zero padded",
                            "example": 1.123456
                          },
                          "mcc": {
                            "type": "string",
                            "description": "The Merchant Category Code (MCC) for the card activity. Follows ISO-18245 format",
                            "example": "5182"
                          },
                          "merchantName": {
                            "type": "string",
                            "description": "The merchant name",
                            "example": "Loudons Cafe"
                          },
                          "merchantCountry": {
                            "type": "string",
                            "description": "The 3 letter ISO 3166 merchant country code",
                            "example": "GBR"
                          },
                          "authorisationInfo": {
                            "required": [
                              "inputMethod",
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Transaction type"
                              },
                              "inputMethod": {
                                "type": "string",
                                "description": "Input method"
                              }
                            },
                            "description": "Authorisation information of the activity"
                          },
                          "cardTokenId": {
                            "type": "string",
                            "description": "The card token associated with this activity, if a tokenised card was used."
                          },
                          "cardTokenDeviceId": {
                            "type": "string",
                            "description": "The bound card token device associated with this activity, if a tokenised card was used."
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/accounts/{aid}/physical-card-request-tasks": {
      "get": {
        "tags": [
          "Async",
          "Cards"
        ],
        "summary": "Get physical card create tasks by account",
        "description": "View the details of create physical card tasks by account.  Ordered by createdDate, with the newest entries appearing first",
        "operationId": "getCreatePhysicalCardAsyncTasksByAccount",
        "parameters": [
          {
            "name": "aid",
            "in": "path",
            "description": "The account ID to retrieve create physical card tasks for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Statuses of tasks to be retrieved",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "RECEIVED",
                "RUNNING",
                "COMPLETE",
                "ERROR"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "createdDate",
                          "status",
                          "taskBid",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "taskBid": {
                            "type": "string",
                            "description": "ID of async task",
                            "example": "T110000003"
                          },
                          "resourceUrl": {
                            "type": "string",
                            "description": "Url of available resource after task completion",
                            "example": "/cards/V110000022"
                          },
                          "resourceId": {
                            "type": "string",
                            "description": "ID of resource after task completion. Will only be returned for COMPLETE tasks.",
                            "example": "V110000022"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of async task"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the task"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "The creation date of the task",
                            "format": "date-time"
                          },
                          "errorReason": {
                            "type": "string",
                            "description": "The error reason. Only populated if status is ERROR"
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/partner/{partnerId}/card-custom-fields/{key}": {
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Delete partner custom field key",
        "description": "Delete partner custom field key",
        "operationId": "deletePartnerCustomFieldKey",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id of partner to delete custom field for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Key of the field to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Custom field key successfully deleted"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/customer/{customerId}/card-custom-fields/{key}": {
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Delete customer custom field key",
        "description": "Delete customer custom field key",
        "operationId": "deleteCustomerCustomFieldKey",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to delete custom field for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Key of the field to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Custom field key successfully deleted"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{id}/custom-fields/{key}": {
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Delete card custom field",
        "description": "Delete card custom field",
        "operationId": "deleteCardCustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of card the custom field should be deleted for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Key of the key value pair of custom field that should be removed for the card",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Custom field key successfully deleted"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION",
                          "TOKENEXPIRED"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/directdebits/reject": {
      "post": {
        "tags": [
          "Direct Debit Outbound Mandate Operations"
        ],
        "summary": "Reject Collection",
        "description": "Reject Collection",
        "operationId": "rejectCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "claimBId",
                  "rejectCode"
                ],
                "type": "object",
                "properties": {
                  "claimBId": {
                    "pattern": "[A-Za-z]{1}[0-9]{2}([A-Za-z0-9]){5}",
                    "type": "string",
                    "description": "Collection Claim Business ID",
                    "example": "A123456B"
                  },
                  "rejectCode": {
                    "type": "string",
                    "enum": [
                      "ADVANCE_NOTICE_DISPUTED",
                      "AMOUNT_DIFFERS",
                      "AMOUNT_NOT_YET_DUE",
                      "PRESENTATION_OVERDUE",
                      "SKIP_DEBIT_ATTEMPT"
                    ]
                  }
                },
                "description": "Collection reject request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Collection has been rejected"
          },
          "400": {
            "description": "Collection has not been rejected",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "GENERAL",
                        "BUSINESSRULE",
                        "MFASTATUS",
                        "MFAERROR",
                        "MFATIMEOUT",
                        "MFADEVICEMM",
                        "MFAMESSAGEINVALID",
                        "NOTFOUND",
                        "DUPLICATE",
                        "INVALID",
                        "CONNECTION",
                        "RETRY",
                        "RATELIMIT",
                        "PERMISSION",
                        "NOTACCEPTABLE",
                        "MFAVERIFICATION"
                      ]
                    },
                    "errorCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "sourceService": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/directdebits/cancel": {
      "post": {
        "tags": [
          "Direct Debit Outbound Mandate Operations"
        ],
        "summary": "Cancel a specific Mandate",
        "description": "Used to request the cancellation of a Mandate.",
        "operationId": "cancelDdosMandate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountId",
                  "cancellationCode",
                  "mandateId",
                  "merchantNumber"
                ],
                "type": "object",
                "properties": {
                  "mandateId": {
                    "type": "string",
                    "description": "Mandate Id"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "Account Id"
                  },
                  "cancellationCode": {
                    "type": "string",
                    "description": "Cancellation Code",
                    "enum": [
                      "REFER_TO_PAYER",
                      "INSTRUCTION_CANCELLED_BY_PAYER",
                      "PAYER_DECEASED",
                      "ACCOUNT_TRANSFERRED",
                      "ACCOUNT_CLOSED",
                      "ACCOUNT_OR_INSTRUCTION_TRANSFERRED",
                      "ADVANCE_NOTICE_DISPUTED",
                      "INSTRUCTION_AMENDED",
                      "INSTRUCTION_REINSTATED"
                    ]
                  },
                  "merchantNumber": {
                    "type": "string",
                    "description": "Merchant Number"
                  }
                },
                "description": "Details of the Mandate Cancel Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mandate was successfully cancelled"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/directdebits/enquire/{accountId}": {
      "get": {
        "tags": [
          "Direct Debit Outbound Mandate Operations"
        ],
        "summary": "Retrieve all Mandates for an account",
        "description": "Used to get all the Mandates for a specific account.",
        "operationId": "retrieveMandates",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Mandates were successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "accountId",
                    "mandatesList"
                  ],
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "string",
                      "description": "Account Id"
                    },
                    "mandatesList": {
                      "type": "array",
                      "description": "List of Mandates",
                      "items": {
                        "required": [
                          "auddisIndicator",
                          "mandateId",
                          "mandateReference",
                          "mandateStatus",
                          "merchantAccountNumber",
                          "merchantName",
                          "merchantNumber",
                          "merchantSortCode",
                          "setupDate"
                        ],
                        "type": "object",
                        "properties": {
                          "mandateId": {
                            "type": "string",
                            "description": "Mandate Id"
                          },
                          "merchantNumber": {
                            "type": "string",
                            "description": "Merchant Number"
                          },
                          "merchantName": {
                            "type": "string",
                            "description": "Merchant Name"
                          },
                          "merchantAccountNumber": {
                            "type": "string",
                            "description": "Merchant Account Number"
                          },
                          "merchantSortCode": {
                            "type": "string",
                            "description": "Merchant Sort Code"
                          },
                          "mandateStatus": {
                            "type": "string",
                            "description": "Status"
                          },
                          "auddisIndicator": {
                            "type": "string",
                            "description": "AUDDIS Flag (AUDDIS / Non-AUDDIS)",
                            "enum": [
                              "A",
                              "N"
                            ]
                          },
                          "setupDate": {
                            "type": "string",
                            "description": "Setup date"
                          },
                          "mandateReference": {
                            "type": "string",
                            "description": "Mandate Reference"
                          }
                        },
                        "description": "List of Mandates"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/payment-files": {
      "post": {
        "tags": [
          "File Upload"
        ],
        "summary": "Upload payment file and store valid payments",
        "description": "Uploads the payment file and store the valid files extracted payments for later creating payments",
        "operationId": "upload-payment-file",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "content",
                  "fileName"
                ],
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string",
                    "description": "Original file name"
                  },
                  "content": {
                    "type": "string",
                    "description": "The file content must be zipped using gzip format and then Base64 encoded"
                  },
                  "submissionType": {
                    "type": "string",
                    "description": "BATCH restricts operations to batch level.  BULK (default) allows payment level operations such as approval",
                    "enum": [
                      "BATCH",
                      "BULK"
                    ]
                  }
                },
                "description": "File upload request body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "File upload response with the file bid",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "fileId"
                  ],
                  "type": "object",
                  "properties": {
                    "fileId": {
                      "type": "string",
                      "description": "Unique id of the uploaded file",
                      "example": "F1100001"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 error code is issued when problem occurred during decoding and decompressing file content",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "fileId"
                  ],
                  "type": "object",
                  "properties": {
                    "fileId": {
                      "type": "string",
                      "description": "Unique id of the uploaded file",
                      "example": "F1100001"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/payment-files/{fileId}/proceed": {
      "post": {
        "tags": [
          "File Upload"
        ],
        "summary": "Create payments from an uploaded file",
        "description": "Create a batch payment request from a valid upload file and send for processing to the payment service",
        "operationId": "proceed",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "Payment File ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "useDuplicate": {
                    "type": "boolean",
                    "description": "User confirms to proceed with creating payments on a duplicate file"
                  }
                },
                "description": "File create payments request body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "File created response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "batchPaymentId",
                    "fileId",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "fileId": {
                      "type": "string",
                      "description": "Unique id of the uploaded file",
                      "example": "F1100001"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the uploaded file",
                      "example": "INVALID",
                      "enum": [
                        "SUBMITTED",
                        "INVALID",
                        "VALID",
                        "DUPLICATE",
                        "REJECTED",
                        "ACCEPTED",
                        "PROCESSED",
                        "SENDING"
                      ]
                    },
                    "fileName": {
                      "type": "string",
                      "description": "File name of the uploaded file",
                      "example": "file1"
                    },
                    "batchPaymentId": {
                      "type": "string",
                      "description": "Unique id for the Batch Payment",
                      "example": "B1100001"
                    }
                  },
                  "description": "File create payments response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payment file",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/payment-files/{fileId}": {
      "get": {
        "tags": [
          "File Upload"
        ],
        "summary": "Get an upload file latest status",
        "description": "Get latest status of an uploaded payment file",
        "operationId": "status",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "Payment File ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File upload status response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the uploaded file",
                      "example": "INVALID",
                      "enum": [
                        "SUBMITTED",
                        "INVALID",
                        "VALID",
                        "DUPLICATE",
                        "REJECTED",
                        "ACCEPTED",
                        "PROCESSED",
                        "SENDING"
                      ]
                    },
                    "fileName": {
                      "type": "string",
                      "description": "File name of the uploaded file",
                      "example": "file1"
                    },
                    "numTransactions": {
                      "type": "integer",
                      "description": "Total number of transactions within file",
                      "format": "int32",
                      "example": 1000
                    },
                    "totalAmount": {
                      "type": "number",
                      "description": "Sum of all transaction's amount within file",
                      "example": 1539.81
                    },
                    "errors": {
                      "type": "array",
                      "description": "If invalid holds the validation errors",
                      "example": [
                        "Failed parsing"
                      ],
                      "items": {
                        "required": [
                          "errorMessage"
                        ],
                        "type": "object",
                        "properties": {
                          "errorMessage": {
                            "type": "string",
                            "description": "Error message indicating a certain validation error occurred",
                            "example": "Processing date is required"
                          },
                          "invalidAccounts": {
                            "type": "array",
                            "description": "List of a invalid account that were effected by the validation",
                            "items": {
                              "type": "string",
                              "description": "List of a invalid account that were effected by the validation"
                            }
                          }
                        },
                        "description": "If invalid holds the validation errors",
                        "example": [
                          "Failed parsing"
                        ]
                      }
                    }
                  },
                  "description": "File upload Status Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Payment file",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/account-name-check": {
      "post": {
        "tags": [
          "Confirmation of Payee"
        ],
        "summary": "Create an account name check",
        "description": "This endpoint allows you to check the account details of a payee with their bank before you create a beneficiary or payment. If the account details are confirmed, you will have greater assurance that a payment you create will reach the correct bank account.\nThis endpoint does not support idempotent requests. Any requests containing an x-mod-nonce header used by a previous request will return the response <code>403: Forbidden (\"Unique/allowed nonce header not found\")</code>",
        "operationId": "createOutboundCop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "accountNumber",
                  "accountType",
                  "name",
                  "paymentAccountId",
                  "sortCode"
                ],
                "type": "object",
                "properties": {
                  "paymentAccountId": {
                    "type": "string",
                    "description": "The identifier of the account that a subsequent payment will be initiated from.",
                    "example": "A123AAA4"
                  },
                  "sortCode": {
                    "pattern": "^[0-9]{6}$",
                    "type": "string",
                    "description": "The sort code of the account.",
                    "example": "000000"
                  },
                  "accountNumber": {
                    "pattern": "^[0-9]{8}$",
                    "type": "string",
                    "description": "The account number.",
                    "example": "12345678"
                  },
                  "secondaryAccountId": {
                    "maxLength": 140,
                    "minLength": 1,
                    "pattern": "^.{0}$|^\u0000$|^([^\u0000])+$",
                    "type": "string",
                    "description": "Additional information used in conjunction with the Sort Code and Account Number to identify the account (such as a Building Society roll number).",
                    "example": "A-1234567890"
                  },
                  "accountType": {
                    "type": "string",
                    "description": "The type of account, either a personal or business account.",
                    "example": "PERSONAL",
                    "enum": [
                      "PERSONAL",
                      "BUSINESS"
                    ]
                  },
                  "name": {
                    "maxLength": 140,
                    "minLength": 1,
                    "pattern": "^.{0}$|^\u0000$|^([^\u0000])+$",
                    "type": "string",
                    "description": "The name to match the account name against.",
                    "example": "Joe Bloggs"
                  }
                },
                "description": "Details of Account Name Check Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "result"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for the account name check.",
                      "example": "C12001569Z"
                    },
                    "result": {
                      "required": [
                        "code"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The result of the account name check.",
                          "example": "MATCHED",
                          "enum": [
                            "MATCHED",
                            "NOT_MATCHED",
                            "CLOSE_MATCH",
                            "BUSINESS_ACCOUNT_NAME_MATCHED",
                            "PERSONAL_ACCOUNT_NAME_MATCHED",
                            "BUSINESS_ACCOUNT_CLOSE_MATCH",
                            "PERSONAL_ACCOUNT_CLOSE_MATCH",
                            "ACCOUNT_DOES_NOT_EXIST",
                            "SECONDARY_ACCOUNT_ID_NOT_FOUND",
                            "ACCOUNT_NOT_SUPPORTED",
                            "OPTED_OUT",
                            "ACCOUNT_SWITCHED",
                            "WRONG_PARTICIPANT",
                            "NO_RESPONSE",
                            "NOT_ENROLLED"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "description": "The actual name on the account (as provided by the participating organisation).",
                          "example": "Joseph Bloggs"
                        }
                      },
                      "description": "Account Name Check Result"
                    }
                  },
                  "description": "Account Name Check Response"
                }
              }
            }
          },
          "400": {
            "description": "Validation Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "code",
                      "message"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      }
                    },
                    "description": "Account Name Check Error Response"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "code",
                      "message"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      }
                    },
                    "description": "Account Name Check Error Response"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "code",
                      "message"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      }
                    },
                    "description": "Account Name Check Error Response"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "code",
                      "message"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      }
                    },
                    "description": "Account Name Check Error Response"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "code",
                      "message"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      }
                    },
                    "description": "Account Name Check Error Response"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/account-name-check/srd-accounts": {
      "get": {
        "tags": [
          "Confirmation of Payee"
        ],
        "summary": "Get SRD Accounts",
        "description": "Returns a list of all sort codes and account numbers for which Secondary Reference Data must be provided with all account name check requests.",
        "operationId": "getSrdAccounts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (0 indexed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of Page to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved SRD list",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "content",
                    "page",
                    "size",
                    "totalPages",
                    "totalSize"
                  ],
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "List of responses on the current page",
                      "items": {
                        "required": [
                          "sortCode"
                        ],
                        "type": "object",
                        "properties": {
                          "sortCode": {
                            "type": "string",
                            "description": "The sort code of one or more accounts that requires Secondary Reference Data to be provided when making account name check requests.\n",
                            "example": "123456"
                          },
                          "accountNumbers": {
                            "type": "array",
                            "description": "Account numbers that require Secondary Reference Data. If empty, Secondary Reference Data is required for all name check requests for this sort code.",
                            "example": [
                              "11111111",
                              "22222222"
                            ],
                            "items": {
                              "type": "string",
                              "description": "The account number of a specific account that requires Secondary Reference Data to be provided when making account name check requests.",
                              "example": "11111111"
                            }
                          }
                        },
                        "description": "List of responses on the current page"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Page size",
                      "format": "int32"
                    },
                    "totalSize": {
                      "type": "integer",
                      "description": "Total count",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query params provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "CoP Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service outage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/cards/{cardId}/authorisations": {
      "post": {
        "tags": [
          "Card Simulator"
        ],
        "summary": "Create a card authorisation",
        "description": "Create an authorisation for a card",
        "operationId": "createAuthorisation",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Card ID to create an authorisation for this card",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "V000000001"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "mcc",
                  "transactionAmount"
                ],
                "type": "object",
                "properties": {
                  "transactionAmount": {
                    "type": "number",
                    "description": "The transaction amount",
                    "example": 5.45
                  },
                  "transactionCurrency": {
                    "type": "string",
                    "description": "The transaction currency. Defaults to the card's billing currency",
                    "example": "GBP",
                    "enum": [
                      "GBP",
                      "EUR",
                      "AED",
                      "AFN",
                      "ALL",
                      "AMD",
                      "ANG",
                      "AOA",
                      "ARS",
                      "AUD",
                      "AWG",
                      "AZN",
                      "BAM",
                      "BBD",
                      "BDT",
                      "BGN",
                      "BHD",
                      "BIF",
                      "BMD",
                      "BND",
                      "BOB",
                      "BOV",
                      "BRL",
                      "BSD",
                      "BTN",
                      "BWP",
                      "BYN",
                      "BZD",
                      "CAD",
                      "CDF",
                      "CHE",
                      "CHF",
                      "CHW",
                      "CLF",
                      "CLP",
                      "CNY",
                      "COP",
                      "COU",
                      "CRC",
                      "CUC",
                      "CUP",
                      "CVE",
                      "CZK",
                      "DJF",
                      "DKK",
                      "DOP",
                      "DZD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "FJD",
                      "FKP",
                      "GEL",
                      "GHS",
                      "GIP",
                      "GMD",
                      "GNF",
                      "GTQ",
                      "GYD",
                      "HKD",
                      "HNL",
                      "HRK",
                      "HTG",
                      "HUF",
                      "IDR",
                      "ILS",
                      "INR",
                      "IQD",
                      "IRR",
                      "ISK",
                      "JMD",
                      "JOD",
                      "JPY",
                      "KES",
                      "KGS",
                      "KHR",
                      "KMF",
                      "KPW",
                      "KRW",
                      "KWD",
                      "KYD",
                      "KZT",
                      "LAK",
                      "LBP",
                      "LKR",
                      "LRD",
                      "LSL",
                      "LYD",
                      "MAD",
                      "MDL",
                      "MGA",
                      "MKD",
                      "MMK",
                      "MNT",
                      "MOP",
                      "MRU",
                      "MUR",
                      "MVR",
                      "MWK",
                      "MXN",
                      "MXV",
                      "MYR",
                      "MZN",
                      "NAD",
                      "NGN",
                      "NIO",
                      "NOK",
                      "NPR",
                      "NZD",
                      "OMR",
                      "PAB",
                      "PEN",
                      "PGK",
                      "PHP",
                      "PKR",
                      "PLN",
                      "PYG",
                      "QAR",
                      "RON",
                      "RSD",
                      "RUB",
                      "RWF",
                      "SAR",
                      "SBD",
                      "SCR",
                      "SDG",
                      "SEK",
                      "SGD",
                      "SLE",
                      "SLL",
                      "SOS",
                      "SRD",
                      "SSP",
                      "STN",
                      "SVC",
                      "SYP",
                      "SZL",
                      "SHP",
                      "THB",
                      "TJS",
                      "TMT",
                      "TND",
                      "TOP",
                      "TRY",
                      "TTD",
                      "TWD",
                      "TZS",
                      "UAH",
                      "UGX",
                      "USD",
                      "USN",
                      "UYI",
                      "UYU",
                      "UYW",
                      "UZS",
                      "VES",
                      "VND",
                      "VUV",
                      "WST",
                      "XAF",
                      "XAG",
                      "XAU",
                      "XBA",
                      "XBB",
                      "XBC",
                      "XBD",
                      "XCD",
                      "XDR",
                      "XOF",
                      "XPD",
                      "XPF",
                      "XPT",
                      "XSU",
                      "XTS",
                      "XUA",
                      "XXX",
                      "YER",
                      "ZAR",
                      "ZMW",
                      "ZWL"
                    ]
                  },
                  "fxRate": {
                    "type": "number",
                    "description": "The foreign exchange rate to use, when transaction currency differs from billing currency. Defaults to 1.0",
                    "example": 0.8
                  },
                  "mcc": {
                    "type": "string",
                    "description": "Merchant Category Code",
                    "example": "5812"
                  }
                },
                "description": "Details of the authorisation to create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "authorisationId",
                    "billingAmount",
                    "billingCurrency",
                    "cardId",
                    "fxRate",
                    "mcc",
                    "status",
                    "transactionAmount",
                    "transactionCurrency"
                  ],
                  "type": "object",
                  "properties": {
                    "authorisationId": {
                      "type": "string",
                      "description": "Authorisation Id",
                      "example": "A00000000X"
                    },
                    "cardId": {
                      "type": "string",
                      "description": "Card Id",
                      "example": "V000000001"
                    },
                    "status": {
                      "type": "string",
                      "description": "Authorisation Status [APPROVED, REVERSED, SETTLED]",
                      "example": "APPROVED",
                      "enum": [
                        "APPROVED",
                        "REVERSED",
                        "SETTLED"
                      ]
                    },
                    "transactionAmount": {
                      "type": "number",
                      "description": "Authorisation Transaction Amount",
                      "example": 100
                    },
                    "transactionCurrency": {
                      "type": "string",
                      "description": "Currency for this transaction",
                      "example": "EUR",
                      "enum": [
                        "GBP",
                        "EUR",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHE",
                        "CHF",
                        "CHW",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "FJD",
                        "FKP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SLE",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "SHP",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "USN",
                        "UYI",
                        "UYU",
                        "UYW",
                        "UZS",
                        "VES",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XAG",
                        "XAU",
                        "XBA",
                        "XBB",
                        "XBC",
                        "XBD",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPD",
                        "XPF",
                        "XPT",
                        "XSU",
                        "XTS",
                        "XUA",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWL"
                      ]
                    },
                    "billingAmount": {
                      "type": "number",
                      "description": "Authorisation billing amount",
                      "example": 80
                    },
                    "billingCurrency": {
                      "type": "string",
                      "description": "Currency of the card",
                      "example": "GBP",
                      "enum": [
                        "GBP",
                        "EUR",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHE",
                        "CHF",
                        "CHW",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "FJD",
                        "FKP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SLE",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "SHP",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "USN",
                        "UYI",
                        "UYU",
                        "UYW",
                        "UZS",
                        "VES",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XAG",
                        "XAU",
                        "XBA",
                        "XBB",
                        "XBC",
                        "XBD",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPD",
                        "XPF",
                        "XPT",
                        "XSU",
                        "XTS",
                        "XUA",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWL"
                      ]
                    },
                    "fxRate": {
                      "type": "number",
                      "description": "Foreign exchange rate used between transaction and billing currencies",
                      "example": 0.8
                    },
                    "mcc": {
                      "type": "string",
                      "description": "Merchant Category Code",
                      "example": "5812"
                    }
                  },
                  "description": "CardAuthorisationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/authorisations/{authId}/settle": {
      "post": {
        "tags": [
          "Card Simulator"
        ],
        "summary": "Settle the card authorisation",
        "description": "Settle the card authorisation",
        "operationId": "settleAuthorisation",
        "parameters": [
          {
            "name": "authId",
            "in": "path",
            "description": "Card authorisation id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "A00000000X"
          }
        ],
        "responses": {
          "204": {
            "description": "Settlement processed"
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/authorisations/{authId}/reverse": {
      "post": {
        "tags": [
          "Card Simulator"
        ],
        "summary": "Reverse the card authorisation",
        "description": "Simulate a reversal of an authorization for a card",
        "operationId": "reverseAuthorisation",
        "parameters": [
          {
            "name": "authId",
            "in": "path",
            "description": "Card authorisation id to be reversed",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "A00000000X"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/vrp": {
      "post": {
        "tags": [
          "Variable Recurring Payments"
        ],
        "summary": "Initiate a Variable Recurring Payment.",
        "description": "Initiates a new Variable Recurring Payment using an existing authorised consent.",
        "operationId": "initiateVrpPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "consentId",
                  "payment"
                ],
                "type": "object",
                "properties": {
                  "consentId": {
                    "type": "string",
                    "description": "The unique identifier of the VRP consent initiation request at Modulr.",
                    "example": "E210000004"
                  },
                  "payment": {
                    "required": [
                      "currency",
                      "reference"
                    ],
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "Currency of the payment amount. Must be specified in ISO 4217 format."
                      },
                      "amount": {
                        "type": "number",
                        "description": "Payment amount",
                        "example": 100
                      },
                      "reference": {
                        "type": "string",
                        "description": "A reference used to unambiguously refer to the payment transaction. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space."
                      }
                    },
                    "description": "Payment details for the VRP payment initiation request."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Variable Recurring Payment initiated.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the VRP payment initiation request at Modulr",
                      "example": "V21000001E"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of vrp payment. Must be one of âSUBMITTEDâ,âACCEPTEDCREDITSETTLEMENTCOMPLETEDâ,âACCEPTEDWITHOUTPOSTINGâ,âACCEPTEDSETTLEMENTCOMPLETEDâ,âACCEPTEDSETTLEMENTINPROCESSâ,âPENDINGâ,âREJECTEDâ,âER_GENERALâ,âER_EXTSYSâ",
                      "enum": [
                        "SUBMITTED",
                        "ACCEPTEDCREDITSETTLEMENTCOMPLETED",
                        "ACCEPTEDWITHOUTPOSTING",
                        "ACCEPTEDSETTLEMENTCOMPLETED",
                        "ACCEPTEDSETTLEMENTINPROCESS",
                        "PENDING",
                        "REJECTED",
                        "ER_GENERAL",
                        "ER_EXTSYS"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The consent cannot be processed as it does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/vrp-consents": {
      "post": {
        "tags": [
          "Variable Recurring Payments"
        ],
        "summary": "Create a VRP consent",
        "description": "Create a Variable Recurring Payment (VRP) consent for authorisation by the payment service user. The consent can then be used to initiate one or more payments within the payment constraints specified.",
        "operationId": "initiateConsentCreation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "aspspId",
                  "destination",
                  "paymentConstraints",
                  "reference",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "aspspId": {
                    "type": "string",
                    "description": "Identifier of the payerâs ASPSP where the consent will be created. The ASPSP must have the âSWEEPINGâ capability enabled (which can be checked using our API).",
                    "example": "H100000001"
                  },
                  "destination": {
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                        "enum": [
                          "ACCOUNT",
                          "SCAN",
                          "ACCOUNT",
                          "SCAN"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "description": "Identifier of the destination account if using ACCOUNT type",
                        "example": "A1100001"
                      },
                      "accountNumber": {
                        "pattern": "^[0-9]{8}$",
                        "type": "string",
                        "description": "Account Number of destination account if using SCAN type",
                        "example": "12345678"
                      },
                      "sortCode": {
                        "pattern": "^[0-9]{6}$",
                        "type": "string",
                        "description": "Sort Code of destination account if using SCAN type",
                        "example": "000000"
                      },
                      "name": {
                        "maxLength": 70,
                        "minLength": 0,
                        "type": "string",
                        "description": "Name of destination account if using SCAN type (this may be truncated)",
                        "example": "Test"
                      }
                    },
                    "description": "The destination account for the payment"
                  },
                  "paymentConstraints": {
                    "required": [
                      "maximumIndividualAmount"
                    ],
                    "type": "object",
                    "properties": {
                      "maximumIndividualAmount": {
                        "required": [
                          "currency"
                        ],
                        "type": "object",
                        "properties": {
                          "currency": {
                            "type": "string",
                            "description": "Currency of the maximum individual amount. Must be specified in ISO 4217 format."
                          },
                          "amount": {
                            "type": "number",
                            "description": "Maximum amount of any single payment initiated using this consent - '1' = 1.00 GBP",
                            "example": 100
                          }
                        },
                        "description": "Maximum amount of any single payment initiated using this consent."
                      },
                      "periodicLimits": {
                        "type": "array",
                        "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days.",
                        "items": {
                          "required": [
                            "currency",
                            "periodAlignment",
                            "periodType"
                          ],
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "Currency of the maximum amount. Must be specified in ISO 4217 format."
                            },
                            "amount": {
                              "type": "number",
                              "description": "The maximum amount of all payments initiated using this consent in the specified period. At least one periodic limit is required - '1' = 1.00 GBP",
                              "example": 100
                            },
                            "periodAlignment": {
                              "type": "string",
                              "description": "Specifies whether the period starts on the date of consent creation or lines up with a calendar."
                            },
                            "periodType": {
                              "type": "string",
                              "description": "Period type. Must be one of âDAYâ,âWEEKâ,âFORTNIGHTâ,âMONTHâ,âHALF_YEARâ,âYEARâ."
                            }
                          },
                          "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days."
                        }
                      }
                    },
                    "description": "Limits that will apply to payments initiated using this consent. "
                  },
                  "validFromDate": {
                    "type": "string",
                    "description": "Start date time from which payments can be initiated using this consent. Must be specified using YYYY-MM-DDTHH:mm:ssZ format.",
                    "format": "date-time",
                    "example": "2022-01-31T20:16:01.9Z"
                  },
                  "validToDate": {
                    "type": "string",
                    "description": "End date time after which payments cannot be initiated using this consent. Must be specified using YYYY-MM-DDTHH:mm:ssZ format.",
                    "format": "date-time",
                    "example": "2022-07-31T20:16:01.9Z"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of VRP consent that will be created. Must be one of âSWEEPINGâ or âNON_SWEEPINGâ. Note that âNON_SWEEPINGâ is not yet available."
                  },
                  "reference": {
                    "type": "string",
                    "description": "Reference to be used for the Consent. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
                    "example": "Invoice ABC123"
                  }
                },
                "description": "Request object to Initiate VRP Consent Creation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vrpConsentInitiationId": {
                      "type": "string",
                      "description": "The unique identifier of the VRP consent initiation request at Modulr",
                      "example": "E210000004"
                    },
                    "redirectUrl": {
                      "type": "string",
                      "description": "A redirect URL for the user to authorise the payment initiation request at the ASPSP",
                      "example": "https://www.bankofmoney.com/authorize"
                    }
                  },
                  "description": "Response object to Initiate Vrp Consent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/vrp-consents/{consentId}/funds-confirmation": {
      "post": {
        "tags": [
          "Variable Recurring Payments"
        ],
        "summary": "Confirm the availability of funds in an account.",
        "description": "Confirm the availability of funds in account, prior to initiating a Variable Recurring Payment, using an authorised consent.",
        "operationId": "confirmFunds",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "description": "Vrp consent id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "currency"
                ],
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Currency of the maximum individual amount. Must be specified in ISO 4217 format."
                  },
                  "amount": {
                    "type": "number",
                    "description": "amount that will be confirmed for availability of funds - '1' = 1.00 GBP",
                    "example": 100
                  }
                },
                "description": "Request object to confirm the availability of funds in account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Confirmation of Funds successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fundsAvailable": {
                      "type": "boolean",
                      "description": "The result of funds availability check, can be one of 'true' or 'false'"
                    },
                    "fundsAvailabilityCheckDateTime": {
                      "type": "string",
                      "description": "The time that the funds availability check occurred",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Confirmation of funds request cannot be processed as the consent with the provided ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/standing-order-initiations": {
      "post": {
        "tags": [
          "Payment Initiations"
        ],
        "summary": "Initiate standing order from ASPSP",
        "description": "Initiate a new standing order to the specified destination account from an account held at an ASPSP.",
        "operationId": "createStandingOrderInitiation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "aspspId",
                  "context",
                  "payment",
                  "schedule"
                ],
                "type": "object",
                "properties": {
                  "aspspId": {
                    "type": "string",
                    "description": "Identifier for ASPSP being used for the standing order",
                    "example": "H100000001"
                  },
                  "payment": {
                    "required": [
                      "amount",
                      "destination",
                      "reference"
                    ],
                    "type": "object",
                    "properties": {
                      "destination": {
                        "required": [
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                            "enum": [
                              "ACCOUNT",
                              "SCAN",
                              "ACCOUNT",
                              "SCAN"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "Identifier of the destination account if using ACCOUNT type",
                            "example": "A1100001"
                          },
                          "accountNumber": {
                            "pattern": "^[0-9]{8}$",
                            "type": "string",
                            "description": "Account Number of destination account if using SCAN type",
                            "example": "12345678"
                          },
                          "sortCode": {
                            "pattern": "^[0-9]{6}$",
                            "type": "string",
                            "description": "Sort Code of destination account if using SCAN type",
                            "example": "000000"
                          },
                          "name": {
                            "maxLength": 70,
                            "minLength": 0,
                            "type": "string",
                            "description": "Name of destination account if using SCAN type (this may be truncated)",
                            "example": "Test"
                          }
                        },
                        "description": "The destination account for the payment"
                      },
                      "amount": {
                        "required": [
                          "currency",
                          "recurringAmount"
                        ],
                        "type": "object",
                        "properties": {
                          "currency": {
                            "type": "string",
                            "description": "Currency of the account in ISO 4217 format. Default is GBP",
                            "enum": [
                              "GBP"
                            ]
                          },
                          "recurringAmount": {
                            "maximum": 2147483647,
                            "minimum": 0.01,
                            "exclusiveMinimum": false,
                            "type": "number",
                            "description": "Recurring amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                            "example": 100
                          }
                        },
                        "description": "The amount of the standing order"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
                        "example": "Invoice ABC123"
                      }
                    },
                    "description": "The payment of the standing order"
                  },
                  "schedule": {
                    "required": [
                      "frequency",
                      "initialDate"
                    ],
                    "type": "object",
                    "properties": {
                      "frequency": {
                        "type": "string",
                        "description": "Type of the capability, can be one of WEEKLY, MONTHLY",
                        "enum": [
                          "WEEKLY",
                          "MONTHLY"
                        ]
                      },
                      "initialDate": {
                        "type": "string",
                        "description": "The date on which the standing order should begin. This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                        "example": "2021-03-25"
                      },
                      "finalDate": {
                        "type": "string",
                        "description": "The optional date on which the standing order should end. If unspecified, the standing order will continue until cancelled.This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                        "example": "2021-03-25"
                      }
                    },
                    "description": "The schedule of the standing order"
                  },
                  "context": {
                    "required": [
                      "merchant"
                    ],
                    "type": "object",
                    "properties": {
                      "paymentContextCode": {
                        "type": "string",
                        "description": "Indicates type of Payment Context, can be one of BILLPAYMENT, ECOMMERCEGOODS, ECOMMERCESERVICES, OTHER, PARTYTOPARTY. If no value or paymentContext is provided, PARTYTOPARTY is considered the default value.",
                        "enum": [
                          "BILLPAYMENT",
                          "ECOMMERCEGOODS",
                          "ECOMMERCESERVICES",
                          "OTHER",
                          "PARTYTOPARTY",
                          "BILLPAYMENT",
                          "ECOMMERCEGOODS",
                          "ECOMMERCESERVICES",
                          "OTHER",
                          "PARTYTOPARTY"
                        ]
                      },
                      "deliveryAddress": {
                        "required": [
                          "addressLine1",
                          "country",
                          "postCode",
                          "postTown"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "maxLength": 70,
                            "minLength": 0,
                            "type": "string",
                            "description": "First line of the address"
                          },
                          "addressLine2": {
                            "maxLength": 70,
                            "minLength": 0,
                            "type": "string",
                            "description": "Second line of the address"
                          },
                          "postTown": {
                            "maxLength": 35,
                            "minLength": 0,
                            "type": "string",
                            "description": "The post town"
                          },
                          "postCode": {
                            "maxLength": 16,
                            "minLength": 0,
                            "type": "string",
                            "description": "The postcode"
                          },
                          "country": {
                            "type": "string",
                            "description": "The country"
                          }
                        },
                        "description": "Information that locates and identifies a specific address, as defined by postal services or in free format text, must be specified if paymentContextCode is ECOMMERCEGOODS"
                      },
                      "merchant": {
                        "type": "object",
                        "properties": {
                          "categoryCode": {
                            "maxLength": 4,
                            "minLength": 3,
                            "type": "string",
                            "description": "Merchant category code conform to ISO 18245, related to the type of services or goods provided for the transaction. Must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
                          },
                          "customerId": {
                            "maxLength": 70,
                            "minLength": 1,
                            "type": "string",
                            "description": "Merchant customer identification, must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
                          }
                        },
                        "description": "Merchant details for the payment context"
                      }
                    },
                    "description": "Payment context for the initiation request"
                  }
                },
                "description": "Request object to Initiate Standing Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "standingOrderInitiationId": {
                      "type": "string",
                      "description": "The unique identifier of the standing order initiation request at Modulr",
                      "example": "I000000001"
                    },
                    "redirectUrl": {
                      "type": "string",
                      "description": "A redirect URL for the user to authorise the standing order initiation request at the ASPSP",
                      "example": "https://www.bankofmoney.com/authorize"
                    }
                  },
                  "description": "Response object to Initiate Standing Order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/payment-initiations": {
      "post": {
        "tags": [
          "Payment Initiations"
        ],
        "summary": "Initiate payment from ASPSP",
        "description": "Initiate a payment to the specified destination account from an account held at an ASPSP.",
        "operationId": "createPaymentInitiation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "aspspId",
                  "destination",
                  "paymentAmount",
                  "paymentReference"
                ],
                "type": "object",
                "properties": {
                  "paymentAmount": {
                    "required": [
                      "currency",
                      "value"
                    ],
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "Currency of the account in ISO 4217 format. Only allowable value is GBP",
                        "enum": [
                          "GBP"
                        ]
                      },
                      "value": {
                        "maximum": 2147483647,
                        "minimum": 0.01,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "Amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                        "example": 100
                      }
                    },
                    "description": "The amount of the payment"
                  },
                  "paymentReference": {
                    "type": "string",
                    "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
                    "example": "Invoice ABC123"
                  },
                  "destination": {
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                        "enum": [
                          "ACCOUNT",
                          "SCAN",
                          "ACCOUNT",
                          "SCAN"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "description": "Identifier of the destination account if using ACCOUNT type",
                        "example": "A1100001"
                      },
                      "accountNumber": {
                        "pattern": "^[0-9]{8}$",
                        "type": "string",
                        "description": "Account Number of destination account if using SCAN type",
                        "example": "12345678"
                      },
                      "sortCode": {
                        "pattern": "^[0-9]{6}$",
                        "type": "string",
                        "description": "Sort Code of destination account if using SCAN type",
                        "example": "000000"
                      },
                      "name": {
                        "maxLength": 70,
                        "minLength": 0,
                        "type": "string",
                        "description": "Name of destination account if using SCAN type (this may be truncated)",
                        "example": "Test"
                      }
                    },
                    "description": "The destination account for the payment"
                  },
                  "aspspId": {
                    "type": "string",
                    "description": "Identifier for ASPSP being used for the payment",
                    "example": "H100000001"
                  },
                  "paymentContext": {
                    "type": "object",
                    "properties": {
                      "paymentContextCode": {
                        "type": "string",
                        "description": "Indicates type of Payment Context, can be one of BILLPAYMENT, ECOMMERCEGOODS, ECOMMERCESERVICES, OTHER, PARTYTOPARTY. If no value or paymentContext is provided, PARTYTOPARTY is considered the default value.",
                        "enum": [
                          "BILLPAYMENT",
                          "ECOMMERCEGOODS",
                          "ECOMMERCESERVICES",
                          "OTHER",
                          "PARTYTOPARTY",
                          "BILLPAYMENT",
                          "ECOMMERCEGOODS",
                          "ECOMMERCESERVICES",
                          "OTHER",
                          "PARTYTOPARTY"
                        ]
                      },
                      "deliveryAddress": {
                        "required": [
                          "addressLine1",
                          "country",
                          "postCode",
                          "postTown"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "maxLength": 70,
                            "minLength": 0,
                            "type": "string",
                            "description": "First line of the address"
                          },
                          "addressLine2": {
                            "maxLength": 70,
                            "minLength": 0,
                            "type": "string",
                            "description": "Second line of the address"
                          },
                          "postTown": {
                            "maxLength": 35,
                            "minLength": 0,
                            "type": "string",
                            "description": "The post town"
                          },
                          "postCode": {
                            "maxLength": 16,
                            "minLength": 0,
                            "type": "string",
                            "description": "The postcode"
                          },
                          "country": {
                            "type": "string",
                            "description": "The country"
                          }
                        },
                        "description": "Information that locates and identifies a specific address, as defined by postal services or in free format text, must be specified if paymentContextCode is ECOMMERCEGOODS"
                      },
                      "merchantCategoryCode": {
                        "maxLength": 4,
                        "minLength": 3,
                        "type": "string",
                        "description": "Merchant category code conform to ISO 18245, related to the type of services or goods provided for the transaction. Must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
                      },
                      "merchantCustomerIdentification": {
                        "maxLength": 70,
                        "minLength": 1,
                        "type": "string",
                        "description": "Merchant customer identification, must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
                      }
                    },
                    "description": "Payment context for the initiation request"
                  }
                },
                "description": "Request object to Initiate Payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentInitiationId": {
                      "type": "string",
                      "description": "The unique identifier of the payment initiation request at Modulr",
                      "example": "I000000001"
                    },
                    "redirectUrl": {
                      "type": "string",
                      "description": "A redirect URL for the user to authorise the payment initiation request at the ASPSP",
                      "example": "https://www.bankofmoney.com/authorize"
                    }
                  },
                  "description": "Response object to Initiate Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/vrp/{id}": {
      "get": {
        "tags": [
          "Variable Recurring Payments"
        ],
        "summary": "Get Variable Recurring Payment",
        "description": "Fetch the details of a payment initiated using Variable Recurring Payment (VRP) based on a unique payment ID.",
        "operationId": "getVrpPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "consentId",
                    "payment",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "consentId": {
                      "type": "string",
                      "description": "The unique identifier of the VRP consent initiation request at Modulr.",
                      "example": "E210000004"
                    },
                    "payment": {
                      "required": [
                        "currency",
                        "reference"
                      ],
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "description": "Currency of the payment amount. Must be specified in ISO 4217 format."
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 100
                        },
                        "reference": {
                          "type": "string",
                          "description": "A reference used to unambiguously refer to the payment transaction. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space."
                        }
                      },
                      "description": "Payment details for the VRP payment initiation request."
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of vrp payment. Must be one of âSUBMITTEDâ,âACCEPTEDCREDITSETTLEMENTCOMPLETEDâ,âACCEPTEDWITHOUTPOSTINGâ,âACCEPTEDSETTLEMENTCOMPLETEDâ,âACCEPTEDSETTLEMENTINPROCESSâ,âPENDINGâ,âREJECTEDâ,âER_GENERALâ,âER_EXTSYSâ"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The payment cannot be retrieved as it does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/vrp-consents/{consentId}": {
      "get": {
        "tags": [
          "Variable Recurring Payments"
        ],
        "summary": "Get VRP consent.",
        "description": "Returns information about a given Variable Recurring Payment consent.",
        "operationId": "getVrpConsent",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "description": "Vrp consent id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "aspspId",
                    "destination",
                    "paymentConstraints",
                    "reference",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "aspspId": {
                      "type": "string",
                      "description": "Identifier of the payerâs ASPSP where the consent will be created. The ASPSP must have the âSWEEPINGâ capability enabled (which can be checked using our API).",
                      "example": "H100000001"
                    },
                    "destination": {
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                          "enum": [
                            "ACCOUNT",
                            "SCAN",
                            "ACCOUNT",
                            "SCAN"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "description": "Identifier of the destination account if using ACCOUNT type",
                          "example": "A1100001"
                        },
                        "accountNumber": {
                          "pattern": "^[0-9]{8}$",
                          "type": "string",
                          "description": "Account Number of destination account if using SCAN type",
                          "example": "12345678"
                        },
                        "sortCode": {
                          "pattern": "^[0-9]{6}$",
                          "type": "string",
                          "description": "Sort Code of destination account if using SCAN type",
                          "example": "000000"
                        },
                        "name": {
                          "maxLength": 70,
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of destination account if using SCAN type (this may be truncated)",
                          "example": "Test"
                        }
                      },
                      "description": "The destination account for the payment"
                    },
                    "paymentConstraints": {
                      "required": [
                        "maximumIndividualAmount"
                      ],
                      "type": "object",
                      "properties": {
                        "maximumIndividualAmount": {
                          "required": [
                            "currency"
                          ],
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "Currency of the maximum individual amount. Must be specified in ISO 4217 format."
                            },
                            "amount": {
                              "type": "number",
                              "description": "Maximum amount of any single payment initiated using this consent - '1' = 1.00 GBP",
                              "example": 100
                            }
                          },
                          "description": "Maximum amount of any single payment initiated using this consent."
                        },
                        "periodicLimits": {
                          "type": "array",
                          "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days.",
                          "items": {
                            "required": [
                              "currency",
                              "periodAlignment",
                              "periodType"
                            ],
                            "type": "object",
                            "properties": {
                              "currency": {
                                "type": "string",
                                "description": "Currency of the maximum amount. Must be specified in ISO 4217 format."
                              },
                              "amount": {
                                "type": "number",
                                "description": "The maximum amount of all payments initiated using this consent in the specified period. At least one periodic limit is required - '1' = 1.00 GBP",
                                "example": 100
                              },
                              "periodAlignment": {
                                "type": "string",
                                "description": "Specifies whether the period starts on the date of consent creation or lines up with a calendar."
                              },
                              "periodType": {
                                "type": "string",
                                "description": "Period type. Must be one of âDAYâ,âWEEKâ,âFORTNIGHTâ,âMONTHâ,âHALF_YEARâ,âYEARâ."
                              }
                            },
                            "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days."
                          }
                        }
                      },
                      "description": "Limits that will apply to payments initiated using this consent. "
                    },
                    "reference": {
                      "type": "string",
                      "description": "Reference to be used for the Consent. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
                      "example": "Invoice ABC123"
                    },
                    "validFromDate": {
                      "type": "string",
                      "description": "Start date time from which payments can be initiated using this consent. Must be specified using YYYY-MM-DDTHH:mm:ssZ format.",
                      "format": "date-time",
                      "example": "2022-01-31T20:16:01.9Z"
                    },
                    "validToDate": {
                      "type": "string",
                      "description": "End date time after which payments cannot be initiated using this consent. Must be specified using YYYY-MM-DDTHH:mm:ssZ format.",
                      "format": "date-time",
                      "example": "2022-07-31T20:16:01.9Z"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of VRP consent that will be created. Must be one of âSWEEPINGâ or âNON_SWEEPINGâ. Note that âNON_SWEEPINGâ is not yet available."
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of vrp consent. Must be one of âAWAITING_AUTHORISATIONâ,âAUTHORISEDâ,âREJECTEDâ,âREVOKEDâ,âER_GENERALâ,âER_EXTSYSâ"
                    }
                  },
                  "description": "Response object of VRP Consent"
                }
              }
            }
          },
          "400": {
            "description": "The consent details cannot be retrieved as it does not exist",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Variable Recurring Payments"
        ],
        "summary": "Revoke a VRP consent.",
        "description": "Cancels a VRP consent and stops further variable recurring payments being made using it.",
        "operationId": "revokeVrpConsent",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "description": "Vrp consent id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Vrp consent revoked"
          },
          "400": {
            "description": "The consent cannot be revoked as it does not exist",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/standing-order-initiations/{standingOrderInitiationId}": {
      "get": {
        "tags": [
          "Payment Initiations"
        ],
        "summary": "Get standing order initiation request details",
        "description": "Retrieve the details of a specific standing order initiation request.",
        "operationId": "getStandingOrderInitiation",
        "parameters": [
          {
            "name": "standingOrderInitiationId",
            "in": "path",
            "description": "Standing order initiation ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Standing order initiation found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier of the standing order initiation",
                      "example": "I000000001"
                    },
                    "payment": {
                      "required": [
                        "amount",
                        "destination",
                        "reference"
                      ],
                      "type": "object",
                      "properties": {
                        "destination": {
                          "required": [
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                              "enum": [
                                "ACCOUNT",
                                "SCAN",
                                "ACCOUNT",
                                "SCAN"
                              ]
                            },
                            "id": {
                              "type": "string",
                              "description": "Identifier of the destination account if using ACCOUNT type",
                              "example": "A1100001"
                            },
                            "accountNumber": {
                              "pattern": "^[0-9]{8}$",
                              "type": "string",
                              "description": "Account Number of destination account if using SCAN type",
                              "example": "12345678"
                            },
                            "sortCode": {
                              "pattern": "^[0-9]{6}$",
                              "type": "string",
                              "description": "Sort Code of destination account if using SCAN type",
                              "example": "000000"
                            },
                            "name": {
                              "maxLength": 70,
                              "minLength": 0,
                              "type": "string",
                              "description": "Name of destination account if using SCAN type (this may be truncated)",
                              "example": "Test"
                            }
                          },
                          "description": "The destination account for the payment"
                        },
                        "amount": {
                          "required": [
                            "currency",
                            "recurringAmount"
                          ],
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "Currency of the account in ISO 4217 format. Default is GBP",
                              "enum": [
                                "GBP"
                              ]
                            },
                            "recurringAmount": {
                              "maximum": 2147483647,
                              "minimum": 0.01,
                              "exclusiveMinimum": false,
                              "type": "number",
                              "description": "Recurring amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                              "example": 100
                            }
                          },
                          "description": "The amount of the standing order"
                        },
                        "reference": {
                          "type": "string",
                          "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
                          "example": "Invoice ABC123"
                        }
                      },
                      "description": "The payment of the standing order"
                    },
                    "schedule": {
                      "required": [
                        "frequency",
                        "initialDate"
                      ],
                      "type": "object",
                      "properties": {
                        "frequency": {
                          "type": "string",
                          "description": "Type of the capability, can be one of WEEKLY, MONTHLY",
                          "enum": [
                            "WEEKLY",
                            "MONTHLY"
                          ]
                        },
                        "initialDate": {
                          "type": "string",
                          "description": "The date on which the standing order should begin. This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                          "example": "2021-03-25"
                        },
                        "finalDate": {
                          "type": "string",
                          "description": "The optional date on which the standing order should end. If unspecified, the standing order will continue until cancelled.This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                          "example": "2021-03-25"
                        }
                      },
                      "description": "The schedule of the standing order"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the standing order initiation, can be one of SUBMITTED, AWAITING_CONSENT, CONSENT_REJECTED, EXECUTED, ER_EXPIRED, ER_EXTSYS, ER_GENERAL",
                      "example": "AWAITING_CONSENT"
                    },
                    "aspspId": {
                      "type": "string",
                      "description": "The identifier of the ASPSP used for the standing order",
                      "example": "H100000001"
                    },
                    "standingOrderStatus": {
                      "type": "string",
                      "description": "The status of the standing order at the ASPSP. When available, this is passed through from the ASPSP without modification.",
                      "example": "InitiationCompleted"
                    }
                  },
                  "description": "Response object for Get Standing Order Initiation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standing order initiation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier of the standing order initiation",
                      "example": "I000000001"
                    },
                    "payment": {
                      "required": [
                        "amount",
                        "destination",
                        "reference"
                      ],
                      "type": "object",
                      "properties": {
                        "destination": {
                          "required": [
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                              "enum": [
                                "ACCOUNT",
                                "SCAN",
                                "ACCOUNT",
                                "SCAN"
                              ]
                            },
                            "id": {
                              "type": "string",
                              "description": "Identifier of the destination account if using ACCOUNT type",
                              "example": "A1100001"
                            },
                            "accountNumber": {
                              "pattern": "^[0-9]{8}$",
                              "type": "string",
                              "description": "Account Number of destination account if using SCAN type",
                              "example": "12345678"
                            },
                            "sortCode": {
                              "pattern": "^[0-9]{6}$",
                              "type": "string",
                              "description": "Sort Code of destination account if using SCAN type",
                              "example": "000000"
                            },
                            "name": {
                              "maxLength": 70,
                              "minLength": 0,
                              "type": "string",
                              "description": "Name of destination account if using SCAN type (this may be truncated)",
                              "example": "Test"
                            }
                          },
                          "description": "The destination account for the payment"
                        },
                        "amount": {
                          "required": [
                            "currency",
                            "recurringAmount"
                          ],
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "Currency of the account in ISO 4217 format. Default is GBP",
                              "enum": [
                                "GBP"
                              ]
                            },
                            "recurringAmount": {
                              "maximum": 2147483647,
                              "minimum": 0.01,
                              "exclusiveMinimum": false,
                              "type": "number",
                              "description": "Recurring amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                              "example": 100
                            }
                          },
                          "description": "The amount of the standing order"
                        },
                        "reference": {
                          "type": "string",
                          "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
                          "example": "Invoice ABC123"
                        }
                      },
                      "description": "The payment of the standing order"
                    },
                    "schedule": {
                      "required": [
                        "frequency",
                        "initialDate"
                      ],
                      "type": "object",
                      "properties": {
                        "frequency": {
                          "type": "string",
                          "description": "Type of the capability, can be one of WEEKLY, MONTHLY",
                          "enum": [
                            "WEEKLY",
                            "MONTHLY"
                          ]
                        },
                        "initialDate": {
                          "type": "string",
                          "description": "The date on which the standing order should begin. This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                          "example": "2021-03-25"
                        },
                        "finalDate": {
                          "type": "string",
                          "description": "The optional date on which the standing order should end. If unspecified, the standing order will continue until cancelled.This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                          "example": "2021-03-25"
                        }
                      },
                      "description": "The schedule of the standing order"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the standing order initiation, can be one of SUBMITTED, AWAITING_CONSENT, CONSENT_REJECTED, EXECUTED, ER_EXPIRED, ER_EXTSYS, ER_GENERAL",
                      "example": "AWAITING_CONSENT"
                    },
                    "aspspId": {
                      "type": "string",
                      "description": "The identifier of the ASPSP used for the standing order",
                      "example": "H100000001"
                    },
                    "standingOrderStatus": {
                      "type": "string",
                      "description": "The status of the standing order at the ASPSP. When available, this is passed through from the ASPSP without modification.",
                      "example": "InitiationCompleted"
                    }
                  },
                  "description": "Response object for Get Standing Order Initiation"
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/payment-initiations/{paymentInitiationId}": {
      "get": {
        "tags": [
          "Payment Initiations"
        ],
        "summary": "Get payment initiation request details",
        "description": "Retrieve the details of a specific payment initiation request.",
        "operationId": "getPaymentInitiation",
        "parameters": [
          {
            "name": "paymentInitiationId",
            "in": "path",
            "description": "Payment initiation ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment initiation found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier of the payment initiation",
                      "example": "I000000001"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the payment initiation, can be one of SUBMITTED, AWAITING_CONSENT, CONSENT_REJECTED, EXECUTED, ER_EXPIRED, ER_EXTSYS, ER_GENERAL",
                      "example": "AWAITING_CONSENT"
                    },
                    "paymentAmount": {
                      "required": [
                        "currency",
                        "value"
                      ],
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "description": "Currency of the account in ISO 4217 format. Only allowable value is GBP",
                          "enum": [
                            "GBP"
                          ]
                        },
                        "value": {
                          "maximum": 2147483647,
                          "minimum": 0.01,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                          "example": 100
                        }
                      },
                      "description": "The amount of the payment"
                    },
                    "paymentReference": {
                      "type": "string",
                      "description": "The payment reference"
                    },
                    "destination": {
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                          "enum": [
                            "ACCOUNT",
                            "SCAN",
                            "ACCOUNT",
                            "SCAN"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "description": "Identifier of the destination account if using ACCOUNT type",
                          "example": "A1100001"
                        },
                        "accountNumber": {
                          "pattern": "^[0-9]{8}$",
                          "type": "string",
                          "description": "Account Number of destination account if using SCAN type",
                          "example": "12345678"
                        },
                        "sortCode": {
                          "pattern": "^[0-9]{6}$",
                          "type": "string",
                          "description": "Sort Code of destination account if using SCAN type",
                          "example": "000000"
                        },
                        "name": {
                          "maxLength": 70,
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of destination account if using SCAN type (this may be truncated)",
                          "example": "Test"
                        }
                      },
                      "description": "The destination account for the payment"
                    },
                    "aspspId": {
                      "type": "string",
                      "description": "The identifier of the ASPSP used for the payment",
                      "example": "H100000001"
                    },
                    "aspspPaymentStatus": {
                      "type": "string",
                      "description": "The status of the payment at the ASPSP. When available, this is passed through from the ASPSP without modification.",
                      "example": "AcceptedSettlementCompleted"
                    }
                  },
                  "description": "Response object for Get Payment Initiation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Payment initiation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier of the payment initiation",
                      "example": "I000000001"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the payment initiation, can be one of SUBMITTED, AWAITING_CONSENT, CONSENT_REJECTED, EXECUTED, ER_EXPIRED, ER_EXTSYS, ER_GENERAL",
                      "example": "AWAITING_CONSENT"
                    },
                    "paymentAmount": {
                      "required": [
                        "currency",
                        "value"
                      ],
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "description": "Currency of the account in ISO 4217 format. Only allowable value is GBP",
                          "enum": [
                            "GBP"
                          ]
                        },
                        "value": {
                          "maximum": 2147483647,
                          "minimum": 0.01,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                          "example": 100
                        }
                      },
                      "description": "The amount of the payment"
                    },
                    "paymentReference": {
                      "type": "string",
                      "description": "The payment reference"
                    },
                    "destination": {
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                          "enum": [
                            "ACCOUNT",
                            "SCAN",
                            "ACCOUNT",
                            "SCAN"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "description": "Identifier of the destination account if using ACCOUNT type",
                          "example": "A1100001"
                        },
                        "accountNumber": {
                          "pattern": "^[0-9]{8}$",
                          "type": "string",
                          "description": "Account Number of destination account if using SCAN type",
                          "example": "12345678"
                        },
                        "sortCode": {
                          "pattern": "^[0-9]{6}$",
                          "type": "string",
                          "description": "Sort Code of destination account if using SCAN type",
                          "example": "000000"
                        },
                        "name": {
                          "maxLength": 70,
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of destination account if using SCAN type (this may be truncated)",
                          "example": "Test"
                        }
                      },
                      "description": "The destination account for the payment"
                    },
                    "aspspId": {
                      "type": "string",
                      "description": "The identifier of the ASPSP used for the payment",
                      "example": "H100000001"
                    },
                    "aspspPaymentStatus": {
                      "type": "string",
                      "description": "The status of the payment at the ASPSP. When available, this is passed through from the ASPSP without modification.",
                      "example": "AcceptedSettlementCompleted"
                    }
                  },
                  "description": "Response object for Get Payment Initiation"
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/aspsps": {
      "get": {
        "tags": [
          "Payment Initiations"
        ],
        "summary": "Get supported ASPSPs",
        "description": "Gets a list of all supported Account Servicing Payment Service Providers (ASPSPs).",
        "operationId": "getAspsProviders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier (within Modulr) of the ASPSP",
                        "example": "H100000001"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the ASPSP",
                        "example": "Bank of Money"
                      },
                      "capabilities": {
                        "type": "array",
                        "description": "Capability list of the ASPSP",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of the capability, can be one of SINGLE_IMMEDIATE, STANDING_ORDER",
                              "example": "SINGLE_IMMEDIATE",
                              "enum": [
                                "SINGLE_IMMEDIATE",
                                "STANDING_ORDER",
                                "SWEEPING_VRP"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the capability, can be one of ENABLED, DISABLED",
                              "example": "ENABLED",
                              "enum": [
                                "ENABLED",
                                "DISABLED"
                              ]
                            }
                          },
                          "description": "Capability list of the ASPSP"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    },
    "/documents": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Uploads and stores document",
        "description": "Uploads and stores document in a repository. Gives back Url encoded document path in the repository",
        "operationId": "upload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "content",
                  "fileName",
                  "group"
                ],
                "type": "object",
                "properties": {
                  "fileName": {
                    "maxLength": 100,
                    "minLength": 0,
                    "pattern": "^[\\w,\\s-.]+\\.(\\w){3,4}$",
                    "type": "string"
                  },
                  "content": {
                    "type": "string",
                    "description": "Needs to be Base64 encoded"
                  },
                  "group": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Use to group documents together. Combination of group+filename should be unique else the files will be overwritten"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "enum": [
                          "GENERAL",
                          "BUSINESSRULE",
                          "MFASTATUS",
                          "MFAERROR",
                          "MFATIMEOUT",
                          "MFADEVICEMM",
                          "MFAMESSAGEINVALID",
                          "NOTFOUND",
                          "DUPLICATE",
                          "INVALID",
                          "CONNECTION",
                          "RETRY",
                          "RATELIMIT",
                          "PERMISSION",
                          "NOTACCEPTABLE",
                          "MFAVERIFICATION"
                        ]
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sourceService": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": []
          },
          {
            "TOKEN": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "account.IdentifierResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string",
            "description": "Bank account Sort Code",
            "example": "12345678"
          },
          "accountType": {
            "type": "string",
            "description": "Bank account type like PERSONAL/BUSINESS",
            "enum": [
              "PERSONAL",
              "BUSINESS"
            ]
          },
          "sortCode": {
            "type": "string",
            "description": "Bank account Sort Code",
            "example": "000000"
          },
          "iban": {
            "type": "string",
            "example": "GB20MODR04001401100000"
          },
          "bic": {
            "type": "string",
            "example": "MODRGB21"
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "countrySpecificDetails": {
            "type": "object",
            "properties": {
              "bankName": {
                "type": "string",
                "description": "The name of the destination bank.",
                "example": "Apple Bank"
              },
              "bankAddress": {
                "type": "string",
                "description": "The address of the destination bank.",
                "example": "2100 Broadway"
              },
              "bankCity": {
                "type": "string",
                "description": "The city in which the destination bank resides.",
                "example": "New York City"
              },
              "bankBranchName": {
                "type": "string",
                "description": "The name of the destination bank's branch.",
                "example": "New York"
              },
              "bankBranchCode": {
                "type": "string",
                "description": "The code of the destination bank's branch.",
                "example": "44-04"
              },
              "bankCode": {
                "type": "string",
                "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
              },
              "chineseId": {
                "type": "string",
                "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                "example": "01101201901018889"
              },
              "province": {
                "type": "string",
                "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                "example": "Zhejiang"
              },
              "business": {
                "type": "boolean",
                "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                "example": true
              },
              "bankCodeType": {
                "type": "string",
                "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                "example": "ABA",
                "enum": [
                  "ABA",
                  "CHIPS"
                ]
              },
              "bankCountry": {
                "type": "string",
                "description": "The country in which the destination bank resides.",
                "example": "US",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "GB",
                  "MQ",
                  "YT",
                  "GP",
                  "GF",
                  "RE",
                  "MF",
                  "GI",
                  "GG",
                  "IM",
                  "JE",
                  "MC",
                  "CH",
                  "AD",
                  "SM",
                  "VA",
                  "AX",
                  "PM",
                  "BL",
                  "AF",
                  "AL",
                  "DZ",
                  "AS",
                  "AO",
                  "AI",
                  "AQ",
                  "AG",
                  "AR",
                  "AM",
                  "AW",
                  "AU",
                  "AZ",
                  "BS",
                  "BH",
                  "BD",
                  "BB",
                  "BY",
                  "BZ",
                  "BJ",
                  "BM",
                  "BT",
                  "BO",
                  "BQ",
                  "BA",
                  "BW",
                  "BV",
                  "BR",
                  "IO",
                  "VG",
                  "BN",
                  "BF",
                  "BI",
                  "KH",
                  "CM",
                  "CA",
                  "CV",
                  "KY",
                  "CF",
                  "TD",
                  "CL",
                  "CN",
                  "CX",
                  "CC",
                  "CO",
                  "KM",
                  "CK",
                  "CR",
                  "CU",
                  "CW",
                  "CD",
                  "DJ",
                  "DM",
                  "DO",
                  "TL",
                  "EC",
                  "EG",
                  "SV",
                  "GQ",
                  "ER",
                  "SZ",
                  "ET",
                  "FK",
                  "FO",
                  "FJ",
                  "PF",
                  "TF",
                  "GA",
                  "GM",
                  "GE",
                  "GH",
                  "GL",
                  "GD",
                  "GU",
                  "GT",
                  "GN",
                  "GW",
                  "GY",
                  "HT",
                  "HM",
                  "HN",
                  "HK",
                  "IN",
                  "ID",
                  "IR",
                  "IQ",
                  "IL",
                  "CI",
                  "JM",
                  "JP",
                  "JO",
                  "KZ",
                  "KE",
                  "KI",
                  "XK",
                  "KW",
                  "KG",
                  "LA",
                  "LB",
                  "LS",
                  "LR",
                  "LY",
                  "MO",
                  "MG",
                  "MW",
                  "MY",
                  "MV",
                  "ML",
                  "MH",
                  "MR",
                  "MU",
                  "MX",
                  "FM",
                  "MD",
                  "MN",
                  "ME",
                  "MS",
                  "MA",
                  "MZ",
                  "MM",
                  "NA",
                  "NR",
                  "NP",
                  "AN",
                  "NC",
                  "NZ",
                  "NI",
                  "NE",
                  "NG",
                  "NU",
                  "NF",
                  "KP",
                  "MK",
                  "MP",
                  "OM",
                  "PK",
                  "PW",
                  "PS",
                  "PA",
                  "PG",
                  "PY",
                  "PE",
                  "PH",
                  "PN",
                  "PR",
                  "QA",
                  "CG",
                  "RU",
                  "RW",
                  "SH",
                  "KN",
                  "LC",
                  "VC",
                  "WS",
                  "ST",
                  "SA",
                  "SN",
                  "RS",
                  "SC",
                  "SL",
                  "SG",
                  "SX",
                  "SB",
                  "SO",
                  "ZA",
                  "KR",
                  "GS",
                  "SS",
                  "LK",
                  "SD",
                  "SR",
                  "SY",
                  "SJ",
                  "TW",
                  "TJ",
                  "TZ",
                  "TH",
                  "TG",
                  "TK",
                  "TO",
                  "TT",
                  "TN",
                  "TR",
                  "TM",
                  "TC",
                  "TV",
                  "UG",
                  "UA",
                  "AE",
                  "UM",
                  "US",
                  "UY",
                  "UZ",
                  "VU",
                  "VE",
                  "VN",
                  "VI",
                  "WF",
                  "EH",
                  "YE",
                  "ZM",
                  "ZW"
                ]
              },
              "abaRoutingNumber": {
                "type": "string",
                "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                "example": "123456789"
              }
            },
            "example": {
              "branchCode": "123456789"
            }
          }
        },
        "description": "Account Identifier"
      },
      "account.AssociateComplianceDataResponse": {
        "type": "object",
        "properties": {
          "relationship": {
            "type": "string"
          }
        },
        "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
      },
      "account.BeneficiaryPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "created",
                "customerId",
                "defaultReference",
                "destinationIdentifier",
                "id",
                "name",
                "status",
                "updated"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique reference for the Beneficiary.",
                  "example": "B00000001A"
                },
                "name": {
                  "type": "string",
                  "description": "Name for the Beneficiary"
                },
                "birthdate": {
                  "type": "string",
                  "description": "Date of birth for the Beneficiary in yyyy-MM-dd format",
                  "format": "date"
                },
                "emailAddress": {
                  "type": "string",
                  "description": "Email address for the Beneficiary"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number for the Beneficiary in international pattern"
                },
                "destinationIdentifier": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "accountNumber": {
                      "type": "string",
                      "description": "Bank account Sort Code",
                      "example": "12345678"
                    },
                    "accountType": {
                      "type": "string",
                      "description": "Bank account type like PERSONAL/BUSINESS",
                      "enum": [
                        "PERSONAL",
                        "BUSINESS"
                      ]
                    },
                    "sortCode": {
                      "type": "string",
                      "description": "Bank account Sort Code",
                      "example": "000000"
                    },
                    "iban": {
                      "type": "string",
                      "example": "GB20MODR04001401100000"
                    },
                    "bic": {
                      "type": "string",
                      "example": "MODRGB21"
                    },
                    "currency": {
                      "type": "string",
                      "example": "GBP"
                    },
                    "countrySpecificDetails": {
                      "type": "object",
                      "properties": {
                        "bankName": {
                          "type": "string",
                          "description": "The name of the destination bank.",
                          "example": "Apple Bank"
                        },
                        "bankAddress": {
                          "type": "string",
                          "description": "The address of the destination bank.",
                          "example": "2100 Broadway"
                        },
                        "bankCity": {
                          "type": "string",
                          "description": "The city in which the destination bank resides.",
                          "example": "New York City"
                        },
                        "bankBranchName": {
                          "type": "string",
                          "description": "The name of the destination bank's branch.",
                          "example": "New York"
                        },
                        "bankBranchCode": {
                          "type": "string",
                          "description": "The code of the destination bank's branch.",
                          "example": "44-04"
                        },
                        "bankCode": {
                          "type": "string",
                          "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                        },
                        "chineseId": {
                          "type": "string",
                          "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                          "example": "01101201901018889"
                        },
                        "province": {
                          "type": "string",
                          "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                          "example": "Zhejiang"
                        },
                        "business": {
                          "type": "boolean",
                          "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                          "example": true
                        },
                        "bankCodeType": {
                          "type": "string",
                          "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                          "example": "ABA",
                          "enum": [
                            "ABA",
                            "CHIPS"
                          ]
                        },
                        "bankCountry": {
                          "type": "string",
                          "description": "The country in which the destination bank resides.",
                          "example": "US",
                          "enum": [
                            "AT",
                            "BE",
                            "BG",
                            "CY",
                            "CZ",
                            "DK",
                            "EE",
                            "FI",
                            "FR",
                            "DE",
                            "GR",
                            "HR",
                            "HU",
                            "IS",
                            "IE",
                            "IT",
                            "LV",
                            "LI",
                            "LT",
                            "LU",
                            "MT",
                            "NL",
                            "NO",
                            "PL",
                            "PT",
                            "RO",
                            "SK",
                            "SI",
                            "ES",
                            "SE",
                            "GB",
                            "MQ",
                            "YT",
                            "GP",
                            "GF",
                            "RE",
                            "MF",
                            "GI",
                            "GG",
                            "IM",
                            "JE",
                            "MC",
                            "CH",
                            "AD",
                            "SM",
                            "VA",
                            "AX",
                            "PM",
                            "BL",
                            "AF",
                            "AL",
                            "DZ",
                            "AS",
                            "AO",
                            "AI",
                            "AQ",
                            "AG",
                            "AR",
                            "AM",
                            "AW",
                            "AU",
                            "AZ",
                            "BS",
                            "BH",
                            "BD",
                            "BB",
                            "BY",
                            "BZ",
                            "BJ",
                            "BM",
                            "BT",
                            "BO",
                            "BQ",
                            "BA",
                            "BW",
                            "BV",
                            "BR",
                            "IO",
                            "VG",
                            "BN",
                            "BF",
                            "BI",
                            "KH",
                            "CM",
                            "CA",
                            "CV",
                            "KY",
                            "CF",
                            "TD",
                            "CL",
                            "CN",
                            "CX",
                            "CC",
                            "CO",
                            "KM",
                            "CK",
                            "CR",
                            "CU",
                            "CW",
                            "CD",
                            "DJ",
                            "DM",
                            "DO",
                            "TL",
                            "EC",
                            "EG",
                            "SV",
                            "GQ",
                            "ER",
                            "SZ",
                            "ET",
                            "FK",
                            "FO",
                            "FJ",
                            "PF",
                            "TF",
                            "GA",
                            "GM",
                            "GE",
                            "GH",
                            "GL",
                            "GD",
                            "GU",
                            "GT",
                            "GN",
                            "GW",
                            "GY",
                            "HT",
                            "HM",
                            "HN",
                            "HK",
                            "IN",
                            "ID",
                            "IR",
                            "IQ",
                            "IL",
                            "CI",
                            "JM",
                            "JP",
                            "JO",
                            "KZ",
                            "KE",
                            "KI",
                            "XK",
                            "KW",
                            "KG",
                            "LA",
                            "LB",
                            "LS",
                            "LR",
                            "LY",
                            "MO",
                            "MG",
                            "MW",
                            "MY",
                            "MV",
                            "ML",
                            "MH",
                            "MR",
                            "MU",
                            "MX",
                            "FM",
                            "MD",
                            "MN",
                            "ME",
                            "MS",
                            "MA",
                            "MZ",
                            "MM",
                            "NA",
                            "NR",
                            "NP",
                            "AN",
                            "NC",
                            "NZ",
                            "NI",
                            "NE",
                            "NG",
                            "NU",
                            "NF",
                            "KP",
                            "MK",
                            "MP",
                            "OM",
                            "PK",
                            "PW",
                            "PS",
                            "PA",
                            "PG",
                            "PY",
                            "PE",
                            "PH",
                            "PN",
                            "PR",
                            "QA",
                            "CG",
                            "RU",
                            "RW",
                            "SH",
                            "KN",
                            "LC",
                            "VC",
                            "WS",
                            "ST",
                            "SA",
                            "SN",
                            "RS",
                            "SC",
                            "SL",
                            "SG",
                            "SX",
                            "SB",
                            "SO",
                            "ZA",
                            "KR",
                            "GS",
                            "SS",
                            "LK",
                            "SD",
                            "SR",
                            "SY",
                            "SJ",
                            "TW",
                            "TJ",
                            "TZ",
                            "TH",
                            "TG",
                            "TK",
                            "TO",
                            "TT",
                            "TN",
                            "TR",
                            "TM",
                            "TC",
                            "TV",
                            "UG",
                            "UA",
                            "AE",
                            "UM",
                            "US",
                            "UY",
                            "UZ",
                            "VU",
                            "VE",
                            "VN",
                            "VI",
                            "WF",
                            "EH",
                            "YE",
                            "ZM",
                            "ZW"
                          ]
                        },
                        "abaRoutingNumber": {
                          "type": "string",
                          "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                          "example": "123456789"
                        }
                      },
                      "example": {
                        "branchCode": "123456789"
                      }
                    }
                  },
                  "description": "Account Identifier"
                },
                "redirectedDestination": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "accountNumber": {
                      "type": "string",
                      "description": "Bank account Sort Code",
                      "example": "12345678"
                    },
                    "accountType": {
                      "type": "string",
                      "description": "Bank account type like PERSONAL/BUSINESS",
                      "enum": [
                        "PERSONAL",
                        "BUSINESS"
                      ]
                    },
                    "sortCode": {
                      "type": "string",
                      "description": "Bank account Sort Code",
                      "example": "000000"
                    },
                    "iban": {
                      "type": "string",
                      "example": "GB20MODR04001401100000"
                    },
                    "bic": {
                      "type": "string",
                      "example": "MODRGB21"
                    },
                    "currency": {
                      "type": "string",
                      "example": "GBP"
                    },
                    "countrySpecificDetails": {
                      "type": "object",
                      "properties": {
                        "bankName": {
                          "type": "string",
                          "description": "The name of the destination bank.",
                          "example": "Apple Bank"
                        },
                        "bankAddress": {
                          "type": "string",
                          "description": "The address of the destination bank.",
                          "example": "2100 Broadway"
                        },
                        "bankCity": {
                          "type": "string",
                          "description": "The city in which the destination bank resides.",
                          "example": "New York City"
                        },
                        "bankBranchName": {
                          "type": "string",
                          "description": "The name of the destination bank's branch.",
                          "example": "New York"
                        },
                        "bankBranchCode": {
                          "type": "string",
                          "description": "The code of the destination bank's branch.",
                          "example": "44-04"
                        },
                        "bankCode": {
                          "type": "string",
                          "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                        },
                        "chineseId": {
                          "type": "string",
                          "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                          "example": "01101201901018889"
                        },
                        "province": {
                          "type": "string",
                          "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                          "example": "Zhejiang"
                        },
                        "business": {
                          "type": "boolean",
                          "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                          "example": true
                        },
                        "bankCodeType": {
                          "type": "string",
                          "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                          "example": "ABA",
                          "enum": [
                            "ABA",
                            "CHIPS"
                          ]
                        },
                        "bankCountry": {
                          "type": "string",
                          "description": "The country in which the destination bank resides.",
                          "example": "US",
                          "enum": [
                            "AT",
                            "BE",
                            "BG",
                            "CY",
                            "CZ",
                            "DK",
                            "EE",
                            "FI",
                            "FR",
                            "DE",
                            "GR",
                            "HR",
                            "HU",
                            "IS",
                            "IE",
                            "IT",
                            "LV",
                            "LI",
                            "LT",
                            "LU",
                            "MT",
                            "NL",
                            "NO",
                            "PL",
                            "PT",
                            "RO",
                            "SK",
                            "SI",
                            "ES",
                            "SE",
                            "GB",
                            "MQ",
                            "YT",
                            "GP",
                            "GF",
                            "RE",
                            "MF",
                            "GI",
                            "GG",
                            "IM",
                            "JE",
                            "MC",
                            "CH",
                            "AD",
                            "SM",
                            "VA",
                            "AX",
                            "PM",
                            "BL",
                            "AF",
                            "AL",
                            "DZ",
                            "AS",
                            "AO",
                            "AI",
                            "AQ",
                            "AG",
                            "AR",
                            "AM",
                            "AW",
                            "AU",
                            "AZ",
                            "BS",
                            "BH",
                            "BD",
                            "BB",
                            "BY",
                            "BZ",
                            "BJ",
                            "BM",
                            "BT",
                            "BO",
                            "BQ",
                            "BA",
                            "BW",
                            "BV",
                            "BR",
                            "IO",
                            "VG",
                            "BN",
                            "BF",
                            "BI",
                            "KH",
                            "CM",
                            "CA",
                            "CV",
                            "KY",
                            "CF",
                            "TD",
                            "CL",
                            "CN",
                            "CX",
                            "CC",
                            "CO",
                            "KM",
                            "CK",
                            "CR",
                            "CU",
                            "CW",
                            "CD",
                            "DJ",
                            "DM",
                            "DO",
                            "TL",
                            "EC",
                            "EG",
                            "SV",
                            "GQ",
                            "ER",
                            "SZ",
                            "ET",
                            "FK",
                            "FO",
                            "FJ",
                            "PF",
                            "TF",
                            "GA",
                            "GM",
                            "GE",
                            "GH",
                            "GL",
                            "GD",
                            "GU",
                            "GT",
                            "GN",
                            "GW",
                            "GY",
                            "HT",
                            "HM",
                            "HN",
                            "HK",
                            "IN",
                            "ID",
                            "IR",
                            "IQ",
                            "IL",
                            "CI",
                            "JM",
                            "JP",
                            "JO",
                            "KZ",
                            "KE",
                            "KI",
                            "XK",
                            "KW",
                            "KG",
                            "LA",
                            "LB",
                            "LS",
                            "LR",
                            "LY",
                            "MO",
                            "MG",
                            "MW",
                            "MY",
                            "MV",
                            "ML",
                            "MH",
                            "MR",
                            "MU",
                            "MX",
                            "FM",
                            "MD",
                            "MN",
                            "ME",
                            "MS",
                            "MA",
                            "MZ",
                            "MM",
                            "NA",
                            "NR",
                            "NP",
                            "AN",
                            "NC",
                            "NZ",
                            "NI",
                            "NE",
                            "NG",
                            "NU",
                            "NF",
                            "KP",
                            "MK",
                            "MP",
                            "OM",
                            "PK",
                            "PW",
                            "PS",
                            "PA",
                            "PG",
                            "PY",
                            "PE",
                            "PH",
                            "PN",
                            "PR",
                            "QA",
                            "CG",
                            "RU",
                            "RW",
                            "SH",
                            "KN",
                            "LC",
                            "VC",
                            "WS",
                            "ST",
                            "SA",
                            "SN",
                            "RS",
                            "SC",
                            "SL",
                            "SG",
                            "SX",
                            "SB",
                            "SO",
                            "ZA",
                            "KR",
                            "GS",
                            "SS",
                            "LK",
                            "SD",
                            "SR",
                            "SY",
                            "SJ",
                            "TW",
                            "TJ",
                            "TZ",
                            "TH",
                            "TG",
                            "TK",
                            "TO",
                            "TT",
                            "TN",
                            "TR",
                            "TM",
                            "TC",
                            "TV",
                            "UG",
                            "UA",
                            "AE",
                            "UM",
                            "US",
                            "UY",
                            "UZ",
                            "VU",
                            "VE",
                            "VN",
                            "VI",
                            "WF",
                            "EH",
                            "YE",
                            "ZM",
                            "ZW"
                          ]
                        },
                        "abaRoutingNumber": {
                          "type": "string",
                          "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                          "example": "123456789"
                        }
                      },
                      "example": {
                        "branchCode": "123456789"
                      }
                    }
                  },
                  "description": "Account Identifier"
                },
                "defaultReference": {
                  "type": "string",
                  "description": "Default reference used for payments to the Beneficiary."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the Beneficiary. Can be:"
                },
                "created": {
                  "type": "string",
                  "description": "Datetime the Beneficiary was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "format": "date-time"
                },
                "accountId": {
                  "type": "string",
                  "description": "Id of the account if this beneficiary is a Modulr account, null otherwise"
                },
                "externalReference": {
                  "type": "string",
                  "description": "External system reference for the Beneficiary"
                },
                "approvalRequired": {
                  "type": "boolean",
                  "description": "Indicates if the beneficiary creation is pending approval"
                },
                "customerId": {
                  "type": "string",
                  "description": "Id of the customer than owns this beneficiary",
                  "example": "C0000001"
                },
                "updated": {
                  "type": "string",
                  "description": "Datetime the Beneficiary was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "format": "date-time"
                },
                "address": {
                  "required": [
                    "addressLine1",
                    "country",
                    "postCode",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string"
                    },
                    "addressLine2": {
                      "type": "string"
                    },
                    "postTown": {
                      "type": "string"
                    },
                    "postCode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "countrySubDivision": {
                      "type": "string"
                    }
                  },
                  "description": "Address"
                },
                "qualifier": {
                  "type": "string",
                  "description": "Qualifier for this beneficiary"
                },
                "approvalRequestId": {
                  "type": "string",
                  "description": "Approval request ID for pending records."
                },
                "approvalStatus": {
                  "type": "string",
                  "description": "Approval status of item.",
                  "enum": [
                    "NOTNEEDED",
                    "PENDING",
                    "APPROVED",
                    "REJECTED",
                    "DELETED"
                  ]
                },
                "accessGroups": {
                  "uniqueItems": true,
                  "type": "array",
                  "description": "Access groups associated with beneficiary.",
                  "items": {
                    "type": "string",
                    "description": "Access groups associated with beneficiary."
                  }
                },
                "createdBy": {
                  "type": "string",
                  "description": "System or person who created the beneficiary"
                }
              },
              "description": "Beneficiary"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "account.CustomerPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "createdDate",
                "id",
                "name",
                "status",
                "type",
                "verificationStatus"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for a Customer. Begins with 'C'",
                  "example": "C00000001"
                },
                "name": {
                  "type": "string",
                  "description": "Customer's company name - must be unique across the Modulr platform."
                },
                "brandNames": {
                  "type": "array",
                  "description": "The customers brand name(s)",
                  "items": {
                    "required": [
                      "id",
                      "name"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique id for the Brand Name"
                      },
                      "name": {
                        "type": "string",
                        "description": "The Brand Name"
                      }
                    },
                    "description": "BrandName"
                  }
                },
                "type": {
                  "type": "string",
                  "description": "Type of the customer, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the Customer. Customers must be 'Active' for Accounts to be created for them.",
                  "enum": [
                    "ACTIVE",
                    "CLOSED",
                    "BLOCKED"
                  ]
                },
                "verificationStatus": {
                  "type": "string",
                  "description": "How the identity of the Customer has been verified. Can be:\n1. UNVERIFIED -> no verification checks have been completed\n2. VERIFIED -> verification checks completed satisfactorily\n3. EXVERIFIED -> verification completed externally\n4. REFERRED -> verification is pending manual review\n5. DECLINED -> verification is complete with a negative result\n6. REVIEWED -> verification check has been reviewed"
                },
                "companyRegNumber": {
                  "type": "string",
                  "description": "The company registration / incorporation number of the company. Only applicable for companies registered with Companies House"
                },
                "expectedMonthlySpend": {
                  "type": "integer",
                  "description": "Indication of the monthly spend of the customer.",
                  "format": "int32"
                },
                "registeredAddress": {
                  "required": [
                    "addressLine1",
                    "country",
                    "postCode",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string"
                    },
                    "addressLine2": {
                      "type": "string"
                    },
                    "postTown": {
                      "type": "string"
                    },
                    "postCode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "countrySubDivision": {
                      "type": "string"
                    }
                  },
                  "description": "Address"
                },
                "tradingAddress": {
                  "required": [
                    "addressLine1",
                    "country",
                    "postCode",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string"
                    },
                    "addressLine2": {
                      "type": "string"
                    },
                    "postTown": {
                      "type": "string"
                    },
                    "postCode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "countrySubDivision": {
                      "type": "string"
                    }
                  },
                  "description": "Address"
                },
                "partnerId": {
                  "type": "string",
                  "description": "The owning partner identifier"
                },
                "associates": {
                  "type": "array",
                  "description": "Array of associate objects that link to the Customer. For example, this could contain the details of the company directors for a Limited company, or or the partners for a partnership.",
                  "items": {
                    "required": [
                      "dateOfBirth",
                      "firstName",
                      "id",
                      "lastName",
                      "type",
                      "verificationStatus"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique id for the Associate"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "Associate's first name(s)"
                      },
                      "middleName": {
                        "type": "string",
                        "description": "Associate's middle name"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Associate's surname"
                      },
                      "email": {
                        "type": "string",
                        "description": "Associate's email address"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Associate's phone number, in international number format"
                      },
                      "applicant": {
                        "type": "boolean",
                        "description": "Indicates which Associate originally applied for the Modulr account"
                      },
                      "ownership": {
                        "type": "integer",
                        "description": "The Associate's percentage ownership of the Customer",
                        "format": "int32"
                      },
                      "type": {
                        "type": "string",
                        "description": "Describes the relation between the Associate and the Customer. Can be one of "
                      },
                      "dateOfBirth": {
                        "type": "string",
                        "description": "Associate's date of birth in format yyyy-MM-dd, or format yyyy-MM where day is unknown"
                      },
                      "verificationStatus": {
                        "type": "string",
                        "description": "How the Associate was verified. Can be one of "
                      },
                      "homeAddress": {
                        "required": [
                          "addressLine1",
                          "country",
                          "postCode",
                          "postTown"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "type": "string"
                          },
                          "addressLine2": {
                            "type": "string"
                          },
                          "postTown": {
                            "type": "string"
                          },
                          "postCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "countrySubDivision": {
                            "type": "string"
                          }
                        },
                        "description": "Address"
                      },
                      "documentInfo": {
                        "type": "array",
                        "description": "Documents gathered during Customer Due Diligence checks on an Associate.",
                        "items": {
                          "required": [
                            "fileName",
                            "path",
                            "uploadedDate"
                          ],
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string"
                            },
                            "fileName": {
                              "type": "string"
                            },
                            "uploadedDate": {
                              "type": "string",
                              "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                              "example": "2017-01-28T01:01:01+0000"
                            }
                          },
                          "description": "Document"
                        }
                      },
                      "additionalPersonalIdentifiers": {
                        "type": "array",
                        "description": "Additional personal identifier(s)",
                        "items": {
                          "required": [
                            "type",
                            "value"
                          ],
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The type of Additional Personal Identifier",
                              "enum": [
                                "BSN"
                              ]
                            },
                            "value": {
                              "type": "string",
                              "description": "Additional Personal Identifier value"
                            }
                          },
                          "description": "AdditionalPersonalIdentifier"
                        }
                      },
                      "complianceData": {
                        "type": "object",
                        "properties": {
                          "relationship": {
                            "type": "string"
                          }
                        },
                        "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
                      }
                    },
                    "description": "Associate"
                  }
                },
                "industryCode": {
                  "type": "string"
                },
                "tcsVersion": {
                  "type": "integer",
                  "description": "Version of the Modulr Account Terms and Conditions the Customer has agreed to.",
                  "format": "int32"
                },
                "documentInfo": {
                  "type": "array",
                  "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement.",
                  "items": {
                    "required": [
                      "fileName",
                      "path",
                      "uploadedDate"
                    ],
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "uploadedDate": {
                        "type": "string",
                        "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                        "example": "2017-01-28T01:01:01+0000"
                      }
                    },
                    "description": "Document"
                  }
                },
                "externalReference": {
                  "type": "string"
                },
                "createdDate": {
                  "type": "string",
                  "description": "Datetime when the customer was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "format": "date-time"
                },
                "delegate": {
                  "required": [
                    "created",
                    "id",
                    "name",
                    "roleId",
                    "status",
                    "updated"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique reference for the Delegate.",
                      "example": "D0000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name for the Delegate"
                    },
                    "address": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "type": "string"
                        },
                        "addressLine2": {
                          "type": "string"
                        },
                        "postTown": {
                          "type": "string"
                        },
                        "postCode": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "countrySubDivision": {
                          "type": "string"
                        }
                      },
                      "description": "Address"
                    },
                    "roleId": {
                      "type": "string",
                      "description": "The id of the Role assigned to the delegate",
                      "example": "R02002M5"
                    },
                    "externalReference": {
                      "type": "string",
                      "description": "External system reference for the Delegate"
                    },
                    "partner": {
                      "type": "string",
                      "description": "Partner Bid.",
                      "example": "R0000001"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the Delegate."
                    },
                    "created": {
                      "type": "string",
                      "description": "Datetime the Delegate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "description": "Datetime the Delegate was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    }
                  },
                  "description": "Delegate"
                },
                "legalEntity": {
                  "type": "string",
                  "description": "Legal entity of the customer",
                  "enum": [
                    "GB",
                    "NL",
                    "IE"
                  ]
                },
                "customerTrust": {
                  "type": "object",
                  "properties": {
                    "trustNature": {
                      "type": "string",
                      "enum": [
                        "BARE_TRUSTS",
                        "INTEREST_IN_POSSESSION_TRUSTS",
                        "DISCRETIONARY_TRUSTS",
                        "ACCUMULATION_TRUSTS",
                        "MIXED_TRUSTS",
                        "SETTLOR_INTERESTED_TRUSTS",
                        "NON_RESIDENT_TRUSTS",
                        "OFFSHORE_TRUSTS",
                        "FAMILY_LIVING_TRUST",
                        "PILOT_TRUST",
                        "VULNERABLE_BENEFICIARY_TRUST",
                        "CHARITABLE_TRUSTS",
                        "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                        "TESTAMENTARY_TRUSTS",
                        "OTHER"
                      ]
                    }
                  },
                  "description": "Trust nature for customers of type trust. Mandatory for type Trust, not to be set for non-trust customers."
                },
                "taxProfile": {
                  "required": [
                    "taxIdentifier"
                  ],
                  "type": "object",
                  "properties": {
                    "taxIdentifier": {
                      "type": "string",
                      "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                    }
                  },
                  "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
                },
                "complianceData": {
                  "type": "object",
                  "properties": {
                    "typeDescription": {
                      "type": "string"
                    },
                    "riskLevel": {
                      "type": "string",
                      "enum": [
                        "LOW",
                        "MEDIUM",
                        "HIGH",
                        "UNDETERMINED"
                      ]
                    },
                    "vulnerabilityReasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "LIFE_EVENTS",
                          "HEALTH",
                          "RESILIENCE",
                          "CAPABILITY",
                          "FINANCIAL_DIFFICULTY"
                        ]
                      }
                    }
                  },
                  "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
                },
                "complianceSector": {
                  "type": "string",
                  "example": "Agency Lite Consumer"
                },
                "generateStatements": {
                  "type": "boolean",
                  "description": "True if the customer is configured to generate statements"
                }
              },
              "description": "A Customer is a single legal entity that can have 1 or more accounts"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "payment.BatchPaymentsResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for the Batch Payment. 10 characters long",
                  "example": "D920000001"
                },
                "externalReference": {
                  "type": "string",
                  "description": "External reference, if provided",
                  "example": "aReference_00001"
                },
                "status": {
                  "type": "string",
                  "description": "Current status of batch.",
                  "example": "ACCEPTED",
                  "enum": [
                    "ACCEPTED",
                    "REJECTED",
                    "SUBMITTED",
                    "CANCELLED"
                  ]
                },
                "totalPayments": {
                  "type": "integer",
                  "description": "Total count of payments in this batch",
                  "format": "int32",
                  "example": 9123
                },
                "currentUserCanApprove": {
                  "type": "boolean",
                  "description": "Whether the user is allowed to approve this batch, based on their approval limits, and applicable configuration",
                  "example": true
                },
                "paymentDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "totalPaymentCount": {
                        "type": "integer",
                        "description": "Total count of payments",
                        "format": "int32",
                        "example": 10
                      },
                      "totalAmount": {
                        "type": "number",
                        "description": "Sum total of payment amounts",
                        "example": 100
                      },
                      "pendingApprovalCount": {
                        "type": "integer",
                        "description": "Count of payments currently pending approval",
                        "format": "int32",
                        "example": 5
                      },
                      "pendingApprovalAmount": {
                        "type": "number",
                        "description": "Sum total of payment amounts currently pending approval",
                        "example": 50
                      }
                    },
                    "description": "Summary of payments and approvals"
                  },
                  "description": "Summary of payments and approvals, per currency (as a 3-alpha currency code)"
                },
                "approvals": {
                  "type": "array",
                  "description": "List of batch-level approvals",
                  "items": {
                    "type": "object",
                    "properties": {
                      "approvedBy": {
                        "type": "string",
                        "description": "ID of user who approved this batch payment request",
                        "example": "U2100021"
                      },
                      "approvedOn": {
                        "type": "string",
                        "description": "Date this approval was applied",
                        "format": "date",
                        "example": "2022-06-25"
                      }
                    },
                    "description": "A single approval against a batch payment request"
                  }
                },
                "currentUserCanCancel": {
                  "type": "boolean",
                  "description": "Whether the user is allowed and currently able to cancel at least one of the payments in this batch"
                },
                "createdDate": {
                  "type": "string",
                  "description": "Datetime when the batch payment was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "format": "date-time"
                },
                "processingDateFrom": {
                  "type": "string",
                  "description": "Earliest processing date in the batch file or the batch creation date if the file does not have any dates. Date format 'yyyy-MM-dd'",
                  "format": "date",
                  "example": "2017-01-28"
                },
                "processingDateTo": {
                  "type": "string",
                  "description": "Last processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
                  "format": "date",
                  "example": "2017-01-28"
                },
                "earliestScheduledPaymentDate": {
                  "type": "string",
                  "description": "Earliest processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
                  "format": "date",
                  "example": "2017-01-28"
                },
                "requiredApprovalCount": {
                  "type": "integer",
                  "description": "The number of required approvals for the batch.  Applicable to batch payments of submissionType BATCH",
                  "format": "int32"
                }
              },
              "description": "List of responses on the current page"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "pispgateway.VrpConfirmationOfFundsResponse": {
        "type": "object",
        "properties": {
          "fundsAvailable": {
            "type": "boolean",
            "description": "The result of funds availability check, can be one of 'true' or 'false'"
          },
          "fundsAvailabilityCheckDateTime": {
            "type": "string",
            "description": "The time that the funds availability check occurred",
            "format": "date-time"
          }
        }
      },
      "rule.SplitConfig": {
        "required": [
          "destinationId",
          "percent"
        ],
        "type": "object",
        "properties": {
          "destinationId": {
            "type": "string",
            "description": "Id of destination beneficiary. e.g. B1000001."
          },
          "percent": {
            "type": "string",
            "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
          }
        },
        "description": "Configuration for a Split Rule"
      },
      "card.CreatePhysicalCardRequest": {
        "required": [
          "authentication",
          "design",
          "expiry",
          "externalRef",
          "holder",
          "limit",
          "printedName",
          "productCode"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "minimum": 1,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Total card authorisation limit.",
            "format": "double",
            "example": 1000
          },
          "expiry": {
            "type": "string",
            "description": "ISO 8601 date with year & month components only. The supplied value must be in the future (cannot be the current month) and is _inclusive_ of the specified month.",
            "example": "2018-12"
          },
          "productCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the _type_ of card to create (GBP consumer, GBP business, etc). Modulr will supply a list of possible values."
          },
          "externalRef": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "[\\w -]*",
            "type": "string",
            "description": "Client reference for the newly created card. Maximum of 50 alphanumeric characters (including underscore, hyphen and space)."
          },
          "constraints": {
            "type": "object",
            "properties": {
              "authorisation": {
                "type": "object",
                "properties": {
                  "spend": {
                    "type": "array",
                    "description": "Spending constraints",
                    "items": {
                      "required": [
                        "currency"
                      ],
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "description": "A 3 letter ISO 4217 code representing the transaction currency",
                          "example": "GBP",
                          "enum": [
                            "GBP",
                            "EUR",
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BOV",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHE",
                            "CHF",
                            "CHW",
                            "CLF",
                            "CLP",
                            "CNY",
                            "COP",
                            "COU",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "FJD",
                            "FKP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MXV",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SLE",
                            "SLL",
                            "SOS",
                            "SRD",
                            "SSP",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "SHP",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "USN",
                            "UYI",
                            "UYU",
                            "UYW",
                            "UZS",
                            "VES",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XAG",
                            "XAU",
                            "XBA",
                            "XBB",
                            "XBC",
                            "XBD",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPD",
                            "XPF",
                            "XPT",
                            "XSU",
                            "XTS",
                            "XUA",
                            "XXX",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWL"
                          ]
                        },
                        "min": {
                          "type": "number",
                          "description": "Minimum spend amount (inclusive)",
                          "example": 5
                        },
                        "max": {
                          "type": "number",
                          "description": "Maximum spend amount (inclusive)",
                          "example": 2000
                        }
                      },
                      "description": "Spending constraints"
                    }
                  }
                },
                "description": "Authorisation constraints"
              }
            },
            "description": "Constraints"
          },
          "authentication": {
            "required": [
              "knowledgeBase"
            ],
            "type": "object",
            "properties": {
              "knowledgeBase": {
                "type": "array",
                "description": "3DS knowledge-based authentication (KBA) answers",
                "items": {
                  "required": [
                    "answer",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "3DS knowledge-based authentication answer type",
                      "enum": [
                        "FIRST_PET_NAME",
                        "MATERNAL_GRANDMOTHER_MAIDEN_NAME",
                        "FAVOURITE_CHILDHOOD_FRIEND",
                        "FIRST_CAR",
                        "CITY_PARENTS_MET"
                      ]
                    },
                    "answer": {
                      "maxLength": 45,
                      "minLength": 1,
                      "type": "string",
                      "description": "3DS knowledge-based authentication answer"
                    }
                  },
                  "description": "3DS Knowledge-Based Authentication (KBA) answers"
                }
              }
            },
            "description": "Authentication. Required by default, optional for Virtual Business Travel Cards only"
          },
          "cancellationDate": {
            "type": "string",
            "description": "Date for card to be cancelled on",
            "example": "2025-01-01"
          },
          "customFields": {
            "maxItems": 20,
            "minItems": 0,
            "type": "array",
            "description": "Custom fields of card",
            "items": {
              "required": [
                "key",
                "value"
              ],
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Custom field key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom field value"
                }
              },
              "description": "Custom fields"
            }
          },
          "authorisationWindow": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "example": "2025-01-01"
              },
              "endDate": {
                "type": "string",
                "example": "2025-01-01"
              }
            },
            "description": "Authorisation Windows allow the card holder to add a period of time where the card can ONLY be used, if an Authorisation Window set then transactions outside this window will decline. ISO 8601 date with year, month & day components only."
          },
          "holder": {
            "required": [
              "billingAddress",
              "dateOfBirth",
              "firstName",
              "lastName",
              "mobileNumber"
            ],
            "type": "object",
            "properties": {
              "title": {
                "pattern": "^[0-9a-zA-Z]{1,4}$",
                "type": "string",
                "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                "example": "Mr"
              },
              "firstName": {
                "pattern": "[\\x20-\\x7e]{1,20}",
                "type": "string",
                "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                "example": "Joe"
              },
              "lastName": {
                "pattern": "[\\x20-\\x7e]{1,20}",
                "type": "string",
                "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                "example": "Bloggs"
              },
              "billingAddress": {
                "required": [
                  "addressLine1",
                  "country",
                  "postCode",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "First line of address",
                    "example": "Floor 10"
                  },
                  "addressLine2": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Second line of address",
                    "example": "80 George Street"
                  },
                  "postTown": {
                    "maxLength": 20,
                    "minLength": 1,
                    "type": "string",
                    "description": "Post town",
                    "example": "EDINBURGH"
                  },
                  "postCode": {
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string",
                    "description": "Postcode",
                    "example": "EH2 3BU"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country (ISO 3166 alpha-2 country code)",
                    "example": "GB",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "AX",
                      "AW",
                      "BL",
                      "CW",
                      "GF",
                      "GL",
                      "GP",
                      "ME",
                      "MF",
                      "MQ",
                      "NC",
                      "PF",
                      "PM",
                      "RE",
                      "SX",
                      "TF",
                      "WF",
                      "YT",
                      "AI",
                      "BM",
                      "FK",
                      "GB",
                      "GG",
                      "GI",
                      "GS",
                      "IO",
                      "JE",
                      "KY",
                      "MS",
                      "PN",
                      "SH",
                      "TC",
                      "VG"
                    ]
                  }
                },
                "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
              },
              "dateOfBirth": {
                "type": "string",
                "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                "format": "date",
                "example": "2001-01-01"
              },
              "mobileNumber": {
                "type": "string",
                "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                "example": "+447123456000"
              },
              "email": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Cardholder email",
                "example": "cardholder@example.com"
              }
            },
            "description": "CardHolder"
          },
          "shippingAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string",
                "description": "First line of address",
                "example": "Floor 10"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Second line of address",
                "example": "80 George Street"
              },
              "postTown": {
                "maxLength": 20,
                "minLength": 1,
                "type": "string",
                "description": "Post town",
                "example": "EDINBURGH"
              },
              "postCode": {
                "maxLength": 10,
                "minLength": 1,
                "type": "string",
                "description": "Postcode",
                "example": "EH2 3BU"
              },
              "country": {
                "type": "string",
                "description": "Country (ISO 3166 alpha-2 country code)",
                "example": "GB",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "AX",
                  "AW",
                  "BL",
                  "CW",
                  "GF",
                  "GL",
                  "GP",
                  "ME",
                  "MF",
                  "MQ",
                  "NC",
                  "PF",
                  "PM",
                  "RE",
                  "SX",
                  "TF",
                  "WF",
                  "YT",
                  "AI",
                  "BM",
                  "FK",
                  "GB",
                  "GG",
                  "GI",
                  "GS",
                  "IO",
                  "JE",
                  "KY",
                  "MS",
                  "PN",
                  "SH",
                  "TC",
                  "VG"
                ]
              }
            },
            "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
          },
          "design": {
            "required": [
              "cardRef",
              "packagingRef"
            ],
            "type": "object",
            "properties": {
              "cardRef": {
                "type": "string",
                "description": "Design reference for card"
              },
              "packagingRef": {
                "type": "string",
                "description": "Design reference for card packaging"
              }
            },
            "description": "Design references for physical card and packaging"
          },
          "printedName": {
            "maxLength": 27,
            "minLength": 1,
            "pattern": "[a-zA-Z 0-9Ã-Å½ÈÈ'â.,^-]{1,27}",
            "type": "string",
            "description": "Name to be printed on the card. Maximum of 27 alphanumeric characters (including full stop, hyphen, apostrophe, caret and space). Please add business name to this field if you wish to have it on the card.",
            "example": "Joe Bloggs"
          }
        },
        "description": "Card"
      },
      "account.BeneficiaryLockPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "ownerId",
                "ownerType"
              ],
              "type": "object",
              "properties": {
                "ownerId": {
                  "type": "string",
                  "description": "Reference for the entity owning the lock.",
                  "example": "R00000001A"
                },
                "ownerType": {
                  "type": "string",
                  "description": "Entity type owning the lock.",
                  "enum": [
                    "RULE",
                    "PAYMENT"
                  ]
                }
              },
              "description": "BeneficiaryLock"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "pispgateway.CreatePaymentInitiationResponse": {
        "type": "object",
        "properties": {
          "paymentInitiationId": {
            "type": "string",
            "description": "The unique identifier of the payment initiation request at Modulr",
            "example": "I000000001"
          },
          "redirectUrl": {
            "type": "string",
            "description": "A redirect URL for the user to authorise the payment initiation request at the ASPSP",
            "example": "https://www.bankofmoney.com/authorize"
          }
        },
        "description": "Response object to Initiate Payment"
      },
      "card.UpdateCardHolder": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string",
                "description": "First line of address",
                "example": "Floor 10"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Second line of address",
                "example": "80 George Street"
              },
              "postTown": {
                "maxLength": 20,
                "minLength": 1,
                "type": "string",
                "description": "Post town",
                "example": "EDINBURGH"
              },
              "postCode": {
                "maxLength": 10,
                "minLength": 1,
                "type": "string",
                "description": "Postcode",
                "example": "EH2 3BU"
              },
              "country": {
                "type": "string",
                "description": "Country (ISO 3166 alpha-2 country code)",
                "example": "GB",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "AX",
                  "AW",
                  "BL",
                  "CW",
                  "GF",
                  "GL",
                  "GP",
                  "ME",
                  "MF",
                  "MQ",
                  "NC",
                  "PF",
                  "PM",
                  "RE",
                  "SX",
                  "TF",
                  "WF",
                  "YT",
                  "AI",
                  "BM",
                  "FK",
                  "GB",
                  "GG",
                  "GI",
                  "GS",
                  "IO",
                  "JE",
                  "KY",
                  "MS",
                  "PN",
                  "SH",
                  "TC",
                  "VG"
                ]
              }
            },
            "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
          },
          "shippingAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string",
                "description": "First line of address",
                "example": "Floor 10"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Second line of address",
                "example": "80 George Street"
              },
              "postTown": {
                "maxLength": 20,
                "minLength": 1,
                "type": "string",
                "description": "Post town",
                "example": "EDINBURGH"
              },
              "postCode": {
                "maxLength": 10,
                "minLength": 1,
                "type": "string",
                "description": "Postcode",
                "example": "EH2 3BU"
              },
              "country": {
                "type": "string",
                "description": "Country (ISO 3166 alpha-2 country code)",
                "example": "GB",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "AX",
                  "AW",
                  "BL",
                  "CW",
                  "GF",
                  "GL",
                  "GP",
                  "ME",
                  "MF",
                  "MQ",
                  "NC",
                  "PF",
                  "PM",
                  "RE",
                  "SX",
                  "TF",
                  "WF",
                  "YT",
                  "AI",
                  "BM",
                  "FK",
                  "GB",
                  "GG",
                  "GI",
                  "GS",
                  "IO",
                  "JE",
                  "KY",
                  "MS",
                  "PN",
                  "SH",
                  "TC",
                  "VG"
                ]
              }
            },
            "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Must be NULL for individual customers.",
            "format": "date",
            "example": "2001-01-01"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
            "example": "+447123456000"
          },
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Cardholder email",
            "example": "cardholder@example.com"
          }
        },
        "description": "CardHolder"
      },
      "account.AccessGroupResponse": {
        "required": [
          "countOfAccounts",
          "id",
          "name",
          "status",
          "type",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the access group",
            "example": "G0000001"
          },
          "name": {
            "type": "string",
            "description": "Access group name"
          },
          "type": {
            "type": "string",
            "description": "The type of access group",
            "enum": [
              "SERVICE_PARTNER",
              "SERVICE_CUSTOMER",
              "DELEGATE",
              "USER_DEFINED"
            ]
          },
          "typeId": {
            "type": "string",
            "description": "The identifier of the linked entity implied by the type, e.g. the partner ID"
          },
          "status": {
            "type": "string",
            "description": "Status of the access group",
            "enum": [
              "ACTIVE",
              "DELETED"
            ]
          },
          "countOfAccounts": {
            "type": "integer",
            "description": "The number of accounts in this group",
            "format": "int64",
            "deprecated": true
          }
        },
        "description": "AccessGroup"
      },
      "onboarding.CreateAssociateRequest": {
        "required": [
          "firstName",
          "homeAddress",
          "lastName",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of associate"
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[\\p{L}' -]+$",
            "type": "string",
            "description": "Letters, hyphens and apostrophes"
          },
          "middleName": {
            "pattern": "^[\\p{L}' -]*$",
            "type": "string",
            "description": "Letters, hyphens and apostrophes"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[\\p{L}' -]+$",
            "type": "string",
            "description": "Letters, hyphens and apostrophes"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date in yyyy-MM-dd format. If associate is a non-applicant director or partner, then partial DOB of yyyy-MM format is allowed. Valid age is from 16 to 100 years. If Applicant then minimum age required is 18 years for specific partners. Required for all associate types except PCM_INDIVIDUAL."
          },
          "ownership": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Ownership percentage for Partners",
            "format": "int32"
          },
          "homeAddress": {
            "required": [
              "addressLine1",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postTown": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postCode": {
                "maxLength": 10,
                "type": "string"
              },
              "country": {
                "type": "string",
                "description": "Mandatory for international payments."
              },
              "countrySubDivision": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Home address"
          },
          "applicant": {
            "type": "boolean",
            "description": "Indicates if the associate is the applicant. Only one associate can be marked as such."
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
            "type": "string",
            "description": "Contact email address for applicants"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone number for applicants, will be formatted into international number pattern"
          },
          "documentInfo": {
            "type": "array",
            "description": "Information on uploaded documents",
            "items": {
              "required": [
                "fileName",
                "path",
                "uploadedDate"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "uploadedDate": {
                  "type": "string",
                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "example": "2017-01-28T01:01:01+0000"
                }
              },
              "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
            }
          },
          "additionalIdentifiers": {
            "type": "array",
            "description": "Additional identifiers",
            "items": {
              "required": [
                "type",
                "value"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of additional personal identifier",
                  "enum": [
                    "BSN"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "Personal identifier value"
                }
              },
              "description": "Additional identifiers"
            }
          },
          "complianceData": {
            "required": [
              "relationship"
            ],
            "type": "object",
            "properties": {
              "relationship": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
          }
        },
        "description": "Mandatory for all types except 'PCM_BUSINESS'"
      },
      "onboarding.CustomerTrustRequest": {
        "required": [
          "trustNature"
        ],
        "type": "object",
        "properties": {
          "trustNature": {
            "type": "string",
            "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers.",
            "enum": [
              "BARE_TRUSTS",
              "INTEREST_IN_POSSESSION_TRUSTS",
              "DISCRETIONARY_TRUSTS",
              "ACCUMULATION_TRUSTS",
              "MIXED_TRUSTS",
              "SETTLOR_INTERESTED_TRUSTS",
              "NON_RESIDENT_TRUSTS",
              "OFFSHORE_TRUSTS",
              "FAMILY_LIVING_TRUST",
              "PILOT_TRUST",
              "VULNERABLE_BENEFICIARY_TRUST",
              "CHARITABLE_TRUSTS",
              "IRREVOCABLE_LIFE_INSURANCE_TRUST",
              "TESTAMENTARY_TRUSTS",
              "OTHER"
            ]
          }
        },
        "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers."
      },
      "account.AccountSecuredFundingRequest": {
        "required": [
          "limit"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "minimum": 0,
            "type": "number",
            "description": "Secured funding limit"
          }
        }
      },
      "account.AdditionalPersonalIdentifierResponse": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of Additional Personal Identifier",
            "enum": [
              "BSN"
            ]
          },
          "value": {
            "type": "string",
            "description": "Additional Personal Identifier value"
          }
        },
        "description": "AdditionalPersonalIdentifier"
      },
      "directdebit.accountId": {
        "type": "array",
        "description": "Id(s) of account to fetch Mandates for.",
        "items": {
          "type": "string",
          "description": "Id(s) of account to fetch Mandates for."
        }
      },
      "paymentfileupload.FileUploadResponse": {
        "required": [
          "fileId"
        ],
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string",
            "description": "Unique id of the uploaded file",
            "example": "F1100001"
          }
        }
      },
      "account.AccountPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "availableBalance",
                "balance",
                "createdDate",
                "currency",
                "customerId",
                "id",
                "identifiers",
                "name",
                "status"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for the account",
                  "example": "A0000001"
                },
                "name": {
                  "type": "string",
                  "description": "Name for the account"
                },
                "balance": {
                  "type": "string",
                  "description": "Balance of the account in format 'NN.NN'",
                  "example": "10000.0"
                },
                "availableBalance": {
                  "type": "string",
                  "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
                  "example": "10000.0"
                },
                "currency": {
                  "type": "string",
                  "description": "Currency of the account in ISO 4217 format",
                  "example": "GBP"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
                  "example": "ACTIVE"
                },
                "identifiers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "accountNumber": {
                        "type": "string",
                        "description": "Bank account Sort Code",
                        "example": "12345678"
                      },
                      "accountType": {
                        "type": "string",
                        "description": "Bank account type like PERSONAL/BUSINESS",
                        "enum": [
                          "PERSONAL",
                          "BUSINESS"
                        ]
                      },
                      "sortCode": {
                        "type": "string",
                        "description": "Bank account Sort Code",
                        "example": "000000"
                      },
                      "iban": {
                        "type": "string",
                        "example": "GB20MODR04001401100000"
                      },
                      "bic": {
                        "type": "string",
                        "example": "MODRGB21"
                      },
                      "currency": {
                        "type": "string",
                        "example": "GBP"
                      },
                      "countrySpecificDetails": {
                        "type": "object",
                        "properties": {
                          "bankName": {
                            "type": "string",
                            "description": "The name of the destination bank.",
                            "example": "Apple Bank"
                          },
                          "bankAddress": {
                            "type": "string",
                            "description": "The address of the destination bank.",
                            "example": "2100 Broadway"
                          },
                          "bankCity": {
                            "type": "string",
                            "description": "The city in which the destination bank resides.",
                            "example": "New York City"
                          },
                          "bankBranchName": {
                            "type": "string",
                            "description": "The name of the destination bank's branch.",
                            "example": "New York"
                          },
                          "bankBranchCode": {
                            "type": "string",
                            "description": "The code of the destination bank's branch.",
                            "example": "44-04"
                          },
                          "bankCode": {
                            "type": "string",
                            "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                          },
                          "chineseId": {
                            "type": "string",
                            "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                            "example": "01101201901018889"
                          },
                          "province": {
                            "type": "string",
                            "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                            "example": "Zhejiang"
                          },
                          "business": {
                            "type": "boolean",
                            "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                            "example": true
                          },
                          "bankCodeType": {
                            "type": "string",
                            "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                            "example": "ABA",
                            "enum": [
                              "ABA",
                              "CHIPS"
                            ]
                          },
                          "bankCountry": {
                            "type": "string",
                            "description": "The country in which the destination bank resides.",
                            "example": "US",
                            "enum": [
                              "AT",
                              "BE",
                              "BG",
                              "CY",
                              "CZ",
                              "DK",
                              "EE",
                              "FI",
                              "FR",
                              "DE",
                              "GR",
                              "HR",
                              "HU",
                              "IS",
                              "IE",
                              "IT",
                              "LV",
                              "LI",
                              "LT",
                              "LU",
                              "MT",
                              "NL",
                              "NO",
                              "PL",
                              "PT",
                              "RO",
                              "SK",
                              "SI",
                              "ES",
                              "SE",
                              "GB",
                              "MQ",
                              "YT",
                              "GP",
                              "GF",
                              "RE",
                              "MF",
                              "GI",
                              "GG",
                              "IM",
                              "JE",
                              "MC",
                              "CH",
                              "AD",
                              "SM",
                              "VA",
                              "AX",
                              "PM",
                              "BL",
                              "AF",
                              "AL",
                              "DZ",
                              "AS",
                              "AO",
                              "AI",
                              "AQ",
                              "AG",
                              "AR",
                              "AM",
                              "AW",
                              "AU",
                              "AZ",
                              "BS",
                              "BH",
                              "BD",
                              "BB",
                              "BY",
                              "BZ",
                              "BJ",
                              "BM",
                              "BT",
                              "BO",
                              "BQ",
                              "BA",
                              "BW",
                              "BV",
                              "BR",
                              "IO",
                              "VG",
                              "BN",
                              "BF",
                              "BI",
                              "KH",
                              "CM",
                              "CA",
                              "CV",
                              "KY",
                              "CF",
                              "TD",
                              "CL",
                              "CN",
                              "CX",
                              "CC",
                              "CO",
                              "KM",
                              "CK",
                              "CR",
                              "CU",
                              "CW",
                              "CD",
                              "DJ",
                              "DM",
                              "DO",
                              "TL",
                              "EC",
                              "EG",
                              "SV",
                              "GQ",
                              "ER",
                              "SZ",
                              "ET",
                              "FK",
                              "FO",
                              "FJ",
                              "PF",
                              "TF",
                              "GA",
                              "GM",
                              "GE",
                              "GH",
                              "GL",
                              "GD",
                              "GU",
                              "GT",
                              "GN",
                              "GW",
                              "GY",
                              "HT",
                              "HM",
                              "HN",
                              "HK",
                              "IN",
                              "ID",
                              "IR",
                              "IQ",
                              "IL",
                              "CI",
                              "JM",
                              "JP",
                              "JO",
                              "KZ",
                              "KE",
                              "KI",
                              "XK",
                              "KW",
                              "KG",
                              "LA",
                              "LB",
                              "LS",
                              "LR",
                              "LY",
                              "MO",
                              "MG",
                              "MW",
                              "MY",
                              "MV",
                              "ML",
                              "MH",
                              "MR",
                              "MU",
                              "MX",
                              "FM",
                              "MD",
                              "MN",
                              "ME",
                              "MS",
                              "MA",
                              "MZ",
                              "MM",
                              "NA",
                              "NR",
                              "NP",
                              "AN",
                              "NC",
                              "NZ",
                              "NI",
                              "NE",
                              "NG",
                              "NU",
                              "NF",
                              "KP",
                              "MK",
                              "MP",
                              "OM",
                              "PK",
                              "PW",
                              "PS",
                              "PA",
                              "PG",
                              "PY",
                              "PE",
                              "PH",
                              "PN",
                              "PR",
                              "QA",
                              "CG",
                              "RU",
                              "RW",
                              "SH",
                              "KN",
                              "LC",
                              "VC",
                              "WS",
                              "ST",
                              "SA",
                              "SN",
                              "RS",
                              "SC",
                              "SL",
                              "SG",
                              "SX",
                              "SB",
                              "SO",
                              "ZA",
                              "KR",
                              "GS",
                              "SS",
                              "LK",
                              "SD",
                              "SR",
                              "SY",
                              "SJ",
                              "TW",
                              "TJ",
                              "TZ",
                              "TH",
                              "TG",
                              "TK",
                              "TO",
                              "TT",
                              "TN",
                              "TR",
                              "TM",
                              "TC",
                              "TV",
                              "UG",
                              "UA",
                              "AE",
                              "UM",
                              "US",
                              "UY",
                              "UZ",
                              "VU",
                              "VE",
                              "VN",
                              "VI",
                              "WF",
                              "EH",
                              "YE",
                              "ZM",
                              "ZW"
                            ]
                          },
                          "abaRoutingNumber": {
                            "type": "string",
                            "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                            "example": "123456789"
                          }
                        },
                        "example": {
                          "branchCode": "123456789"
                        }
                      }
                    },
                    "description": "Account Identifier"
                  }
                },
                "customerId": {
                  "type": "string",
                  "description": "Unique id of the Customer",
                  "example": "C0000001"
                },
                "customerName": {
                  "type": "string",
                  "description": "Customer Name"
                },
                "externalReference": {
                  "type": "string",
                  "description": "Your reference for an account",
                  "example": "aReference_00001"
                },
                "accessGroups": {
                  "type": "array",
                  "description": "Ids of Access Groups this account belongs to",
                  "items": {
                    "type": "string",
                    "description": "Ids of Access Groups this account belongs to"
                  }
                },
                "createdDate": {
                  "type": "string",
                  "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "format": "date-time"
                },
                "directDebit": {
                  "type": "boolean",
                  "description": "Direct Debit Enabled"
                },
                "securedFundingLimit": {
                  "type": "string",
                  "description": "Limit of funds available below a balance of zero"
                }
              },
              "description": "Account"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "account.CreateAccountRequest": {
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w \\-]*",
            "type": "string",
            "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
          },
          "currency": {
            "type": "string",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "productCode": {
            "type": "string",
            "description": "Product associated with the account. Contact your account manager for correct code to use."
          },
          "identifier": {
            "required": [
              "accountNumber",
              "sortCode",
              "type"
            ],
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "SCAN"
                ]
              },
              "sortCode": {
                "pattern": "^\\d{6}$",
                "type": "string"
              },
              "accountNumber": {
                "pattern": "^\\d{8}$",
                "type": "string"
              }
            },
            "description": "The identifier to assign to the account. Only available to selected partners."
          }
        },
        "description": "Details of account to create"
      },
      "pispgateway.StandingOrderPaymentAmount": {
        "required": [
          "currency",
          "recurringAmount"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency of the account in ISO 4217 format. Default is GBP",
            "enum": [
              "GBP"
            ]
          },
          "recurringAmount": {
            "maximum": 2147483647,
            "minimum": 0.01,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Recurring amount of the payment in Major Currency Units - '1' = 1.00 GBP",
            "example": 100
          }
        },
        "description": "The amount of the standing order"
      },
      "onboarding.CustomerComplianceDataRequest": {
        "type": "object",
        "properties": {
          "typeDescription": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
          },
          "riskLevel": {
            "type": "string",
            "description": "Risk level of the customer",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "UNDETERMINED"
            ]
          },
          "vulnerabilityReasons": {
            "type": "array",
            "description": "Vulnerability Reasons of the customer",
            "items": {
              "type": "string",
              "description": "Vulnerability Reasons of the customer",
              "enum": [
                "LIFE_EVENTS",
                "HEALTH",
                "RESILIENCE",
                "CAPABILITY",
                "FINANCIAL_DIFFICULTY"
              ]
            }
          }
        },
        "description": "Required for customers of type PREQUALIFIED."
      },
      "account.UpdateBrandNameRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the Brand Name"
          },
          "name": {
            "type": "string",
            "description": "The Brand Name"
          }
        },
        "description": "The customers brand name(s)"
      },
      "pispgateway.MerchantDetails": {
        "type": "object",
        "properties": {
          "categoryCode": {
            "maxLength": 4,
            "minLength": 3,
            "type": "string",
            "description": "Merchant category code conform to ISO 18245, related to the type of services or goods provided for the transaction. Must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
          },
          "customerId": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Merchant customer identification, must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
          }
        },
        "description": "Merchant details for the payment context"
      },
      "account.CustomerComplianceDataRequest": {
        "type": "object",
        "properties": {
          "typeDescription": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
          },
          "riskLevel": {
            "type": "string",
            "description": "Risk level of the customer",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "UNDETERMINED"
            ]
          },
          "vulnerabilityReasons": {
            "type": "array",
            "description": "Vulnerability Reasons of the customer",
            "items": {
              "type": "string",
              "description": "Vulnerability Reasons of the customer",
              "enum": [
                "LIFE_EVENTS",
                "HEALTH",
                "RESILIENCE",
                "CAPABILITY",
                "FINANCIAL_DIFFICULTY"
              ]
            }
          }
        },
        "description": "Required for customers of type PREQUALIFIED"
      },
      "payment.BatchPaymentSummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total count of payment requests in this batch",
            "format": "int32"
          },
          "invalid": {
            "type": "integer",
            "description": "Count of invalid payment requests",
            "format": "int32"
          },
          "inprogress": {
            "type": "integer",
            "description": "Count of payment requests in progress",
            "format": "int32"
          },
          "completed": {
            "type": "integer",
            "description": "Count of completed payments",
            "format": "int32"
          },
          "errors": {
            "type": "integer",
            "description": "Count of failed payment requests",
            "format": "int32"
          },
          "info": {
            "type": "string",
            "description": "Additional information or error message regarding this batch payment request"
          },
          "strict": {
            "type": "boolean"
          }
        },
        "description": "Summary of the state of payment requests in this batch"
      },
      "payment.currency": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Currency of the payment in ISO 4217 format, multiple currencies can be specified by repeating the parameter.",
          "enum": [
            "GBP",
            "EUR",
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "FJD",
            "FKP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "SHP",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWL"
          ]
        }
      },
      "pispgateway.VrpConsentResponse": {
        "required": [
          "aspspId",
          "destination",
          "paymentConstraints",
          "reference",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "aspspId": {
            "type": "string",
            "description": "Identifier of the payerâs ASPSP where the consent will be created. The ASPSP must have the âSWEEPINGâ capability enabled (which can be checked using our API).",
            "example": "H100000001"
          },
          "destination": {
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                "enum": [
                  "ACCOUNT",
                  "SCAN",
                  "ACCOUNT",
                  "SCAN"
                ]
              },
              "id": {
                "type": "string",
                "description": "Identifier of the destination account if using ACCOUNT type",
                "example": "A1100001"
              },
              "accountNumber": {
                "pattern": "^[0-9]{8}$",
                "type": "string",
                "description": "Account Number of destination account if using SCAN type",
                "example": "12345678"
              },
              "sortCode": {
                "pattern": "^[0-9]{6}$",
                "type": "string",
                "description": "Sort Code of destination account if using SCAN type",
                "example": "000000"
              },
              "name": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Name of destination account if using SCAN type (this may be truncated)",
                "example": "Test"
              }
            },
            "description": "The destination account for the payment"
          },
          "paymentConstraints": {
            "required": [
              "maximumIndividualAmount"
            ],
            "type": "object",
            "properties": {
              "maximumIndividualAmount": {
                "required": [
                  "currency"
                ],
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Currency of the maximum individual amount. Must be specified in ISO 4217 format."
                  },
                  "amount": {
                    "type": "number",
                    "description": "Maximum amount of any single payment initiated using this consent - '1' = 1.00 GBP",
                    "example": 100
                  }
                },
                "description": "Maximum amount of any single payment initiated using this consent."
              },
              "periodicLimits": {
                "type": "array",
                "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days.",
                "items": {
                  "required": [
                    "currency",
                    "periodAlignment",
                    "periodType"
                  ],
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "description": "Currency of the maximum amount. Must be specified in ISO 4217 format."
                    },
                    "amount": {
                      "type": "number",
                      "description": "The maximum amount of all payments initiated using this consent in the specified period. At least one periodic limit is required - '1' = 1.00 GBP",
                      "example": 100
                    },
                    "periodAlignment": {
                      "type": "string",
                      "description": "Specifies whether the period starts on the date of consent creation or lines up with a calendar."
                    },
                    "periodType": {
                      "type": "string",
                      "description": "Period type. Must be one of âDAYâ,âWEEKâ,âFORTNIGHTâ,âMONTHâ,âHALF_YEARâ,âYEARâ."
                    }
                  },
                  "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days."
                }
              }
            },
            "description": "Limits that will apply to payments initiated using this consent. "
          },
          "reference": {
            "type": "string",
            "description": "Reference to be used for the Consent. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
            "example": "Invoice ABC123"
          },
          "validFromDate": {
            "type": "string",
            "description": "Start date time from which payments can be initiated using this consent. Must be specified using YYYY-MM-DDTHH:mm:ssZ format.",
            "format": "date-time",
            "example": "2022-01-31T20:16:01.9Z"
          },
          "validToDate": {
            "type": "string",
            "description": "End date time after which payments cannot be initiated using this consent. Must be specified using YYYY-MM-DDTHH:mm:ssZ format.",
            "format": "date-time",
            "example": "2022-07-31T20:16:01.9Z"
          },
          "type": {
            "type": "string",
            "description": "Type of VRP consent that will be created. Must be one of âSWEEPINGâ or âNON_SWEEPINGâ. Note that âNON_SWEEPINGâ is not yet available."
          },
          "status": {
            "type": "string",
            "description": "The current status of vrp consent. Must be one of âAWAITING_AUTHORISATIONâ,âAUTHORISEDâ,âREJECTEDâ,âREVOKEDâ,âER_GENERALâ,âER_EXTSYSâ"
          }
        },
        "description": "Response object of VRP Consent"
      },
      "card.CardCustomFieldKeyResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Custom field key"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the custom field is required or not"
          }
        },
        "description": "List of responses on the current page"
      },
      "card.CardPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Card identifier. Maximum of 10 alphanumeric characters",
                  "example": "V000000001"
                },
                "holder": {
                  "required": [
                    "billingAddress",
                    "dateOfBirth",
                    "firstName",
                    "lastName",
                    "mobileNumber"
                  ],
                  "type": "object",
                  "properties": {
                    "title": {
                      "pattern": "^[0-9a-zA-Z]{1,4}$",
                      "type": "string",
                      "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                      "example": "Mr"
                    },
                    "firstName": {
                      "pattern": "[\\x20-\\x7e]{1,20}",
                      "type": "string",
                      "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                      "example": "Joe"
                    },
                    "lastName": {
                      "pattern": "[\\x20-\\x7e]{1,20}",
                      "type": "string",
                      "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                      "example": "Bloggs"
                    },
                    "billingAddress": {
                      "required": [
                        "addressLine1",
                        "country",
                        "postCode",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "maxLength": 50,
                          "minLength": 1,
                          "type": "string",
                          "description": "First line of address",
                          "example": "Floor 10"
                        },
                        "addressLine2": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Second line of address",
                          "example": "80 George Street"
                        },
                        "postTown": {
                          "maxLength": 20,
                          "minLength": 1,
                          "type": "string",
                          "description": "Post town",
                          "example": "EDINBURGH"
                        },
                        "postCode": {
                          "maxLength": 10,
                          "minLength": 1,
                          "type": "string",
                          "description": "Postcode",
                          "example": "EH2 3BU"
                        },
                        "country": {
                          "type": "string",
                          "description": "Country (ISO 3166 alpha-2 country code)",
                          "example": "GB",
                          "enum": [
                            "AT",
                            "BE",
                            "BG",
                            "CY",
                            "CZ",
                            "DK",
                            "EE",
                            "FI",
                            "FR",
                            "DE",
                            "GR",
                            "HR",
                            "HU",
                            "IS",
                            "IE",
                            "IT",
                            "LV",
                            "LI",
                            "LT",
                            "LU",
                            "MT",
                            "NL",
                            "NO",
                            "PL",
                            "PT",
                            "RO",
                            "SK",
                            "SI",
                            "ES",
                            "SE",
                            "AX",
                            "AW",
                            "BL",
                            "CW",
                            "GF",
                            "GL",
                            "GP",
                            "ME",
                            "MF",
                            "MQ",
                            "NC",
                            "PF",
                            "PM",
                            "RE",
                            "SX",
                            "TF",
                            "WF",
                            "YT",
                            "AI",
                            "BM",
                            "FK",
                            "GB",
                            "GG",
                            "GI",
                            "GS",
                            "IO",
                            "JE",
                            "KY",
                            "MS",
                            "PN",
                            "SH",
                            "TC",
                            "VG"
                          ]
                        }
                      },
                      "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                      "format": "date",
                      "example": "2001-01-01"
                    },
                    "mobileNumber": {
                      "type": "string",
                      "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                      "example": "+447123456000"
                    },
                    "email": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string",
                      "description": "Cardholder email",
                      "example": "cardholder@example.com"
                    }
                  },
                  "description": "CardHolder"
                },
                "expiry": {
                  "type": "string",
                  "description": "An ISO 8601 date with year & month components only",
                  "example": "2018-12"
                },
                "status": {
                  "type": "string",
                  "description": "The current state of the card."
                },
                "currency": {
                  "type": "string",
                  "description": "A 3 letter ISO 4217 code representing the card currency",
                  "example": "GBP"
                },
                "limit": {
                  "type": "string",
                  "description": "Total card authorisation limit",
                  "example": "1000.0"
                },
                "maxLimit": {
                  "type": "string",
                  "description": "Maximum limit which can be set on this card and is the maximum lifetime spend the card can have",
                  "example": "4000.0"
                },
                "spend": {
                  "type": "string",
                  "description": "Current total of all authorisations on this card",
                  "example": "250.0"
                },
                "externalRef": {
                  "type": "string",
                  "description": "Client reference for the newly created card. Maximum of 50 characters.",
                  "example": "TTQ_51211"
                },
                "maskedPan": {
                  "type": "string",
                  "description": "Masked card PAN",
                  "example": "527095******3544"
                },
                "cardType": {
                  "type": "string",
                  "description": "Card product type",
                  "example": "Business"
                },
                "cardScheme": {
                  "type": "string",
                  "description": "Card scheme. MASTERCARD or VISA",
                  "example": "MASTERCARD"
                },
                "accountBid": {
                  "type": "string",
                  "description": "Account identifier",
                  "example": "A020N8PD"
                },
                "productId": {
                  "type": "string",
                  "description": "Product identifier",
                  "example": "O210003A"
                },
                "format": {
                  "type": "string",
                  "description": "The format of the card.  PHYSICAL or VIRTUAL",
                  "example": "PHYSICAL",
                  "enum": [
                    "PHYSICAL",
                    "VIRTUAL"
                  ]
                },
                "constraints": {
                  "required": [
                    "mccWhitelist"
                  ],
                  "type": "object",
                  "properties": {
                    "mccWhitelist": {
                      "type": "array",
                      "description": "mccWhitelist",
                      "example": [
                        "1000",
                        "1002-3000",
                        "5060"
                      ],
                      "items": {
                        "type": "string",
                        "description": "mccWhitelist",
                        "example": "[\"1000\",\"1002-3000\",\"5060\"]"
                      }
                    },
                    "authorisation": {
                      "type": "object",
                      "properties": {
                        "spend": {
                          "type": "array",
                          "description": "Spending constraints",
                          "items": {
                            "required": [
                              "currency"
                            ],
                            "type": "object",
                            "properties": {
                              "currency": {
                                "type": "string",
                                "description": "A 3 letter ISO 4217 code representing the transaction currency",
                                "example": "GBP",
                                "enum": [
                                  "GBP",
                                  "EUR",
                                  "AED",
                                  "AFN",
                                  "ALL",
                                  "AMD",
                                  "ANG",
                                  "AOA",
                                  "ARS",
                                  "AUD",
                                  "AWG",
                                  "AZN",
                                  "BAM",
                                  "BBD",
                                  "BDT",
                                  "BGN",
                                  "BHD",
                                  "BIF",
                                  "BMD",
                                  "BND",
                                  "BOB",
                                  "BOV",
                                  "BRL",
                                  "BSD",
                                  "BTN",
                                  "BWP",
                                  "BYN",
                                  "BZD",
                                  "CAD",
                                  "CDF",
                                  "CHE",
                                  "CHF",
                                  "CHW",
                                  "CLF",
                                  "CLP",
                                  "CNY",
                                  "COP",
                                  "COU",
                                  "CRC",
                                  "CUC",
                                  "CUP",
                                  "CVE",
                                  "CZK",
                                  "DJF",
                                  "DKK",
                                  "DOP",
                                  "DZD",
                                  "EGP",
                                  "ERN",
                                  "ETB",
                                  "FJD",
                                  "FKP",
                                  "GEL",
                                  "GHS",
                                  "GIP",
                                  "GMD",
                                  "GNF",
                                  "GTQ",
                                  "GYD",
                                  "HKD",
                                  "HNL",
                                  "HRK",
                                  "HTG",
                                  "HUF",
                                  "IDR",
                                  "ILS",
                                  "INR",
                                  "IQD",
                                  "IRR",
                                  "ISK",
                                  "JMD",
                                  "JOD",
                                  "JPY",
                                  "KES",
                                  "KGS",
                                  "KHR",
                                  "KMF",
                                  "KPW",
                                  "KRW",
                                  "KWD",
                                  "KYD",
                                  "KZT",
                                  "LAK",
                                  "LBP",
                                  "LKR",
                                  "LRD",
                                  "LSL",
                                  "LYD",
                                  "MAD",
                                  "MDL",
                                  "MGA",
                                  "MKD",
                                  "MMK",
                                  "MNT",
                                  "MOP",
                                  "MRU",
                                  "MUR",
                                  "MVR",
                                  "MWK",
                                  "MXN",
                                  "MXV",
                                  "MYR",
                                  "MZN",
                                  "NAD",
                                  "NGN",
                                  "NIO",
                                  "NOK",
                                  "NPR",
                                  "NZD",
                                  "OMR",
                                  "PAB",
                                  "PEN",
                                  "PGK",
                                  "PHP",
                                  "PKR",
                                  "PLN",
                                  "PYG",
                                  "QAR",
                                  "RON",
                                  "RSD",
                                  "RUB",
                                  "RWF",
                                  "SAR",
                                  "SBD",
                                  "SCR",
                                  "SDG",
                                  "SEK",
                                  "SGD",
                                  "SLE",
                                  "SLL",
                                  "SOS",
                                  "SRD",
                                  "SSP",
                                  "STN",
                                  "SVC",
                                  "SYP",
                                  "SZL",
                                  "SHP",
                                  "THB",
                                  "TJS",
                                  "TMT",
                                  "TND",
                                  "TOP",
                                  "TRY",
                                  "TTD",
                                  "TWD",
                                  "TZS",
                                  "UAH",
                                  "UGX",
                                  "USD",
                                  "USN",
                                  "UYI",
                                  "UYU",
                                  "UYW",
                                  "UZS",
                                  "VES",
                                  "VND",
                                  "VUV",
                                  "WST",
                                  "XAF",
                                  "XAG",
                                  "XAU",
                                  "XBA",
                                  "XBB",
                                  "XBC",
                                  "XBD",
                                  "XCD",
                                  "XDR",
                                  "XOF",
                                  "XPD",
                                  "XPF",
                                  "XPT",
                                  "XSU",
                                  "XTS",
                                  "XUA",
                                  "XXX",
                                  "YER",
                                  "ZAR",
                                  "ZMW",
                                  "ZWL"
                                ]
                              },
                              "min": {
                                "type": "number",
                                "description": "Minimum spend amount (inclusive)",
                                "example": 5
                              },
                              "max": {
                                "type": "number",
                                "description": "Maximum spend amount (inclusive)",
                                "example": 2000
                              }
                            },
                            "description": "Spending constraints"
                          }
                        }
                      },
                      "description": "Authorisation constraints"
                    }
                  },
                  "description": "CardConstraints"
                },
                "design": {
                  "required": [
                    "cardRef",
                    "packagingRef"
                  ],
                  "type": "object",
                  "properties": {
                    "cardRef": {
                      "type": "string",
                      "description": "Design reference for card"
                    },
                    "packagingRef": {
                      "type": "string",
                      "description": "Design reference for card packaging"
                    }
                  },
                  "description": "Design references for physical card and packaging"
                },
                "printedName": {
                  "type": "string",
                  "description": "Name printed on the card. Will only be returned for physical cards. Maximum of 20 alphanumeric characters (including full stop, hyphen, apostrophe, caret and space)"
                },
                "cancellationDate": {
                  "type": "string",
                  "description": "Date card will be cancelled on",
                  "example": "2025-01-01"
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "threeDSecureStatus": {
                  "type": "string",
                  "description": "The 3DS status of the card, based on the SMS one time password",
                  "example": "ENROLLED",
                  "deprecated": true,
                  "enum": [
                    "NOT_ENROLLED",
                    "ENROLLED",
                    "UNENROLLED"
                  ]
                },
                "authentication": {
                  "type": "object",
                  "properties": {
                    "otpSmsStatus": {
                      "type": "string",
                      "description": "The SMS one time password authentication status",
                      "example": "ENROLLED",
                      "enum": [
                        "NOT_ENROLLED",
                        "ENROLLED",
                        "UNENROLLED"
                      ]
                    },
                    "knowledgeBaseStatus": {
                      "type": "string",
                      "description": "The knowledge based authentication (KBA) status",
                      "example": "ENROLLED",
                      "enum": [
                        "NOT_ENROLLED",
                        "ENROLLED",
                        "UNENROLLED"
                      ]
                    }
                  },
                  "description": "The 3DS authentication method statuses"
                },
                "shippingAddress": {
                  "required": [
                    "addressLine1",
                    "country",
                    "postCode",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "maxLength": 50,
                      "minLength": 1,
                      "type": "string",
                      "description": "First line of address",
                      "example": "Floor 10"
                    },
                    "addressLine2": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string",
                      "description": "Second line of address",
                      "example": "80 George Street"
                    },
                    "postTown": {
                      "maxLength": 20,
                      "minLength": 1,
                      "type": "string",
                      "description": "Post town",
                      "example": "EDINBURGH"
                    },
                    "postCode": {
                      "maxLength": 10,
                      "minLength": 1,
                      "type": "string",
                      "description": "Postcode",
                      "example": "EH2 3BU"
                    },
                    "country": {
                      "type": "string",
                      "description": "Country (ISO 3166 alpha-2 country code)",
                      "example": "GB",
                      "enum": [
                        "AT",
                        "BE",
                        "BG",
                        "CY",
                        "CZ",
                        "DK",
                        "EE",
                        "FI",
                        "FR",
                        "DE",
                        "GR",
                        "HR",
                        "HU",
                        "IS",
                        "IE",
                        "IT",
                        "LV",
                        "LI",
                        "LT",
                        "LU",
                        "MT",
                        "NL",
                        "NO",
                        "PL",
                        "PT",
                        "RO",
                        "SK",
                        "SI",
                        "ES",
                        "SE",
                        "AX",
                        "AW",
                        "BL",
                        "CW",
                        "GF",
                        "GL",
                        "GP",
                        "ME",
                        "MF",
                        "MQ",
                        "NC",
                        "PF",
                        "PM",
                        "RE",
                        "SX",
                        "TF",
                        "WF",
                        "YT",
                        "AI",
                        "BM",
                        "FK",
                        "GB",
                        "GG",
                        "GI",
                        "GS",
                        "IO",
                        "JE",
                        "KY",
                        "MS",
                        "PN",
                        "SH",
                        "TC",
                        "VG"
                      ]
                    }
                  },
                  "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
                },
                "customFields": {
                  "type": "array",
                  "description": "Custom fields currently defined for card",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Custom field key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom field value"
                      }
                    },
                    "description": "Custom fields currently defined for card"
                  }
                },
                "authWindow": {
                  "type": "object",
                  "properties": {
                    "startDate": {
                      "type": "string",
                      "description": "Authorisation window start date",
                      "format": "date-time"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "Authorisation window end date",
                      "format": "date-time"
                    }
                  },
                  "description": "Authorisation window defined for card"
                },
                "channelManagerId": {
                  "type": "string",
                  "description": "Channel Manager identifier",
                  "example": "M883412312"
                }
              }
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "card.CustomFields": {
        "required": [
          "key",
          "required"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Custom field key"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the custom field is required or not"
          }
        },
        "description": "Custom fields"
      },
      "card.ResetCardPinRequest": {
        "required": [
          "currentPin",
          "newPin"
        ],
        "type": "object",
        "properties": {
          "currentPin": {
            "pattern": "^[0-9]{4}$",
            "type": "string",
            "description": "Card's current PIN required to reset"
          },
          "newPin": {
            "pattern": "^[0-9]{4}$",
            "type": "string",
            "description": "Card's new PIN to update"
          }
        },
        "description": "Reset PIN"
      },
      "account.BeneficiaryResponse": {
        "required": [
          "created",
          "customerId",
          "defaultReference",
          "destinationIdentifier",
          "id",
          "name",
          "status",
          "updated"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique reference for the Beneficiary.",
            "example": "B00000001A"
          },
          "name": {
            "type": "string",
            "description": "Name for the Beneficiary"
          },
          "birthdate": {
            "type": "string",
            "description": "Date of birth for the Beneficiary in yyyy-MM-dd format",
            "format": "date"
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address for the Beneficiary"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number for the Beneficiary in international pattern"
          },
          "destinationIdentifier": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "accountNumber": {
                "type": "string",
                "description": "Bank account Sort Code",
                "example": "12345678"
              },
              "accountType": {
                "type": "string",
                "description": "Bank account type like PERSONAL/BUSINESS",
                "enum": [
                  "PERSONAL",
                  "BUSINESS"
                ]
              },
              "sortCode": {
                "type": "string",
                "description": "Bank account Sort Code",
                "example": "000000"
              },
              "iban": {
                "type": "string",
                "example": "GB20MODR04001401100000"
              },
              "bic": {
                "type": "string",
                "example": "MODRGB21"
              },
              "currency": {
                "type": "string",
                "example": "GBP"
              },
              "countrySpecificDetails": {
                "type": "object",
                "properties": {
                  "bankName": {
                    "type": "string",
                    "description": "The name of the destination bank.",
                    "example": "Apple Bank"
                  },
                  "bankAddress": {
                    "type": "string",
                    "description": "The address of the destination bank.",
                    "example": "2100 Broadway"
                  },
                  "bankCity": {
                    "type": "string",
                    "description": "The city in which the destination bank resides.",
                    "example": "New York City"
                  },
                  "bankBranchName": {
                    "type": "string",
                    "description": "The name of the destination bank's branch.",
                    "example": "New York"
                  },
                  "bankBranchCode": {
                    "type": "string",
                    "description": "The code of the destination bank's branch.",
                    "example": "44-04"
                  },
                  "bankCode": {
                    "type": "string",
                    "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                  },
                  "chineseId": {
                    "type": "string",
                    "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                    "example": "01101201901018889"
                  },
                  "province": {
                    "type": "string",
                    "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                    "example": "Zhejiang"
                  },
                  "business": {
                    "type": "boolean",
                    "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                    "example": true
                  },
                  "bankCodeType": {
                    "type": "string",
                    "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                    "example": "ABA",
                    "enum": [
                      "ABA",
                      "CHIPS"
                    ]
                  },
                  "bankCountry": {
                    "type": "string",
                    "description": "The country in which the destination bank resides.",
                    "example": "US",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "GB",
                      "MQ",
                      "YT",
                      "GP",
                      "GF",
                      "RE",
                      "MF",
                      "GI",
                      "GG",
                      "IM",
                      "JE",
                      "MC",
                      "CH",
                      "AD",
                      "SM",
                      "VA",
                      "AX",
                      "PM",
                      "BL",
                      "AF",
                      "AL",
                      "DZ",
                      "AS",
                      "AO",
                      "AI",
                      "AQ",
                      "AG",
                      "AR",
                      "AM",
                      "AW",
                      "AU",
                      "AZ",
                      "BS",
                      "BH",
                      "BD",
                      "BB",
                      "BY",
                      "BZ",
                      "BJ",
                      "BM",
                      "BT",
                      "BO",
                      "BQ",
                      "BA",
                      "BW",
                      "BV",
                      "BR",
                      "IO",
                      "VG",
                      "BN",
                      "BF",
                      "BI",
                      "KH",
                      "CM",
                      "CA",
                      "CV",
                      "KY",
                      "CF",
                      "TD",
                      "CL",
                      "CN",
                      "CX",
                      "CC",
                      "CO",
                      "KM",
                      "CK",
                      "CR",
                      "CU",
                      "CW",
                      "CD",
                      "DJ",
                      "DM",
                      "DO",
                      "TL",
                      "EC",
                      "EG",
                      "SV",
                      "GQ",
                      "ER",
                      "SZ",
                      "ET",
                      "FK",
                      "FO",
                      "FJ",
                      "PF",
                      "TF",
                      "GA",
                      "GM",
                      "GE",
                      "GH",
                      "GL",
                      "GD",
                      "GU",
                      "GT",
                      "GN",
                      "GW",
                      "GY",
                      "HT",
                      "HM",
                      "HN",
                      "HK",
                      "IN",
                      "ID",
                      "IR",
                      "IQ",
                      "IL",
                      "CI",
                      "JM",
                      "JP",
                      "JO",
                      "KZ",
                      "KE",
                      "KI",
                      "XK",
                      "KW",
                      "KG",
                      "LA",
                      "LB",
                      "LS",
                      "LR",
                      "LY",
                      "MO",
                      "MG",
                      "MW",
                      "MY",
                      "MV",
                      "ML",
                      "MH",
                      "MR",
                      "MU",
                      "MX",
                      "FM",
                      "MD",
                      "MN",
                      "ME",
                      "MS",
                      "MA",
                      "MZ",
                      "MM",
                      "NA",
                      "NR",
                      "NP",
                      "AN",
                      "NC",
                      "NZ",
                      "NI",
                      "NE",
                      "NG",
                      "NU",
                      "NF",
                      "KP",
                      "MK",
                      "MP",
                      "OM",
                      "PK",
                      "PW",
                      "PS",
                      "PA",
                      "PG",
                      "PY",
                      "PE",
                      "PH",
                      "PN",
                      "PR",
                      "QA",
                      "CG",
                      "RU",
                      "RW",
                      "SH",
                      "KN",
                      "LC",
                      "VC",
                      "WS",
                      "ST",
                      "SA",
                      "SN",
                      "RS",
                      "SC",
                      "SL",
                      "SG",
                      "SX",
                      "SB",
                      "SO",
                      "ZA",
                      "KR",
                      "GS",
                      "SS",
                      "LK",
                      "SD",
                      "SR",
                      "SY",
                      "SJ",
                      "TW",
                      "TJ",
                      "TZ",
                      "TH",
                      "TG",
                      "TK",
                      "TO",
                      "TT",
                      "TN",
                      "TR",
                      "TM",
                      "TC",
                      "TV",
                      "UG",
                      "UA",
                      "AE",
                      "UM",
                      "US",
                      "UY",
                      "UZ",
                      "VU",
                      "VE",
                      "VN",
                      "VI",
                      "WF",
                      "EH",
                      "YE",
                      "ZM",
                      "ZW"
                    ]
                  },
                  "abaRoutingNumber": {
                    "type": "string",
                    "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                    "example": "123456789"
                  }
                },
                "example": {
                  "branchCode": "123456789"
                }
              }
            },
            "description": "Account Identifier"
          },
          "redirectedDestination": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "accountNumber": {
                "type": "string",
                "description": "Bank account Sort Code",
                "example": "12345678"
              },
              "accountType": {
                "type": "string",
                "description": "Bank account type like PERSONAL/BUSINESS",
                "enum": [
                  "PERSONAL",
                  "BUSINESS"
                ]
              },
              "sortCode": {
                "type": "string",
                "description": "Bank account Sort Code",
                "example": "000000"
              },
              "iban": {
                "type": "string",
                "example": "GB20MODR04001401100000"
              },
              "bic": {
                "type": "string",
                "example": "MODRGB21"
              },
              "currency": {
                "type": "string",
                "example": "GBP"
              },
              "countrySpecificDetails": {
                "type": "object",
                "properties": {
                  "bankName": {
                    "type": "string",
                    "description": "The name of the destination bank.",
                    "example": "Apple Bank"
                  },
                  "bankAddress": {
                    "type": "string",
                    "description": "The address of the destination bank.",
                    "example": "2100 Broadway"
                  },
                  "bankCity": {
                    "type": "string",
                    "description": "The city in which the destination bank resides.",
                    "example": "New York City"
                  },
                  "bankBranchName": {
                    "type": "string",
                    "description": "The name of the destination bank's branch.",
                    "example": "New York"
                  },
                  "bankBranchCode": {
                    "type": "string",
                    "description": "The code of the destination bank's branch.",
                    "example": "44-04"
                  },
                  "bankCode": {
                    "type": "string",
                    "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                  },
                  "chineseId": {
                    "type": "string",
                    "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                    "example": "01101201901018889"
                  },
                  "province": {
                    "type": "string",
                    "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                    "example": "Zhejiang"
                  },
                  "business": {
                    "type": "boolean",
                    "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                    "example": true
                  },
                  "bankCodeType": {
                    "type": "string",
                    "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                    "example": "ABA",
                    "enum": [
                      "ABA",
                      "CHIPS"
                    ]
                  },
                  "bankCountry": {
                    "type": "string",
                    "description": "The country in which the destination bank resides.",
                    "example": "US",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "GB",
                      "MQ",
                      "YT",
                      "GP",
                      "GF",
                      "RE",
                      "MF",
                      "GI",
                      "GG",
                      "IM",
                      "JE",
                      "MC",
                      "CH",
                      "AD",
                      "SM",
                      "VA",
                      "AX",
                      "PM",
                      "BL",
                      "AF",
                      "AL",
                      "DZ",
                      "AS",
                      "AO",
                      "AI",
                      "AQ",
                      "AG",
                      "AR",
                      "AM",
                      "AW",
                      "AU",
                      "AZ",
                      "BS",
                      "BH",
                      "BD",
                      "BB",
                      "BY",
                      "BZ",
                      "BJ",
                      "BM",
                      "BT",
                      "BO",
                      "BQ",
                      "BA",
                      "BW",
                      "BV",
                      "BR",
                      "IO",
                      "VG",
                      "BN",
                      "BF",
                      "BI",
                      "KH",
                      "CM",
                      "CA",
                      "CV",
                      "KY",
                      "CF",
                      "TD",
                      "CL",
                      "CN",
                      "CX",
                      "CC",
                      "CO",
                      "KM",
                      "CK",
                      "CR",
                      "CU",
                      "CW",
                      "CD",
                      "DJ",
                      "DM",
                      "DO",
                      "TL",
                      "EC",
                      "EG",
                      "SV",
                      "GQ",
                      "ER",
                      "SZ",
                      "ET",
                      "FK",
                      "FO",
                      "FJ",
                      "PF",
                      "TF",
                      "GA",
                      "GM",
                      "GE",
                      "GH",
                      "GL",
                      "GD",
                      "GU",
                      "GT",
                      "GN",
                      "GW",
                      "GY",
                      "HT",
                      "HM",
                      "HN",
                      "HK",
                      "IN",
                      "ID",
                      "IR",
                      "IQ",
                      "IL",
                      "CI",
                      "JM",
                      "JP",
                      "JO",
                      "KZ",
                      "KE",
                      "KI",
                      "XK",
                      "KW",
                      "KG",
                      "LA",
                      "LB",
                      "LS",
                      "LR",
                      "LY",
                      "MO",
                      "MG",
                      "MW",
                      "MY",
                      "MV",
                      "ML",
                      "MH",
                      "MR",
                      "MU",
                      "MX",
                      "FM",
                      "MD",
                      "MN",
                      "ME",
                      "MS",
                      "MA",
                      "MZ",
                      "MM",
                      "NA",
                      "NR",
                      "NP",
                      "AN",
                      "NC",
                      "NZ",
                      "NI",
                      "NE",
                      "NG",
                      "NU",
                      "NF",
                      "KP",
                      "MK",
                      "MP",
                      "OM",
                      "PK",
                      "PW",
                      "PS",
                      "PA",
                      "PG",
                      "PY",
                      "PE",
                      "PH",
                      "PN",
                      "PR",
                      "QA",
                      "CG",
                      "RU",
                      "RW",
                      "SH",
                      "KN",
                      "LC",
                      "VC",
                      "WS",
                      "ST",
                      "SA",
                      "SN",
                      "RS",
                      "SC",
                      "SL",
                      "SG",
                      "SX",
                      "SB",
                      "SO",
                      "ZA",
                      "KR",
                      "GS",
                      "SS",
                      "LK",
                      "SD",
                      "SR",
                      "SY",
                      "SJ",
                      "TW",
                      "TJ",
                      "TZ",
                      "TH",
                      "TG",
                      "TK",
                      "TO",
                      "TT",
                      "TN",
                      "TR",
                      "TM",
                      "TC",
                      "TV",
                      "UG",
                      "UA",
                      "AE",
                      "UM",
                      "US",
                      "UY",
                      "UZ",
                      "VU",
                      "VE",
                      "VN",
                      "VI",
                      "WF",
                      "EH",
                      "YE",
                      "ZM",
                      "ZW"
                    ]
                  },
                  "abaRoutingNumber": {
                    "type": "string",
                    "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                    "example": "123456789"
                  }
                },
                "example": {
                  "branchCode": "123456789"
                }
              }
            },
            "description": "Account Identifier"
          },
          "defaultReference": {
            "type": "string",
            "description": "Default reference used for payments to the Beneficiary."
          },
          "status": {
            "type": "string",
            "description": "Status of the Beneficiary. Can be:"
          },
          "created": {
            "type": "string",
            "description": "Datetime the Beneficiary was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "accountId": {
            "type": "string",
            "description": "Id of the account if this beneficiary is a Modulr account, null otherwise"
          },
          "externalReference": {
            "type": "string",
            "description": "External system reference for the Beneficiary"
          },
          "approvalRequired": {
            "type": "boolean",
            "description": "Indicates if the beneficiary creation is pending approval"
          },
          "customerId": {
            "type": "string",
            "description": "Id of the customer than owns this beneficiary",
            "example": "C0000001"
          },
          "updated": {
            "type": "string",
            "description": "Datetime the Beneficiary was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "address": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countrySubDivision": {
                "type": "string"
              }
            },
            "description": "Address"
          },
          "qualifier": {
            "type": "string",
            "description": "Qualifier for this beneficiary"
          },
          "approvalRequestId": {
            "type": "string",
            "description": "Approval request ID for pending records."
          },
          "approvalStatus": {
            "type": "string",
            "description": "Approval status of item.",
            "enum": [
              "NOTNEEDED",
              "PENDING",
              "APPROVED",
              "REJECTED",
              "DELETED"
            ]
          },
          "accessGroups": {
            "uniqueItems": true,
            "type": "array",
            "description": "Access groups associated with beneficiary.",
            "items": {
              "type": "string",
              "description": "Access groups associated with beneficiary."
            }
          },
          "createdBy": {
            "type": "string",
            "description": "System or person who created the beneficiary"
          }
        },
        "description": "Beneficiary"
      },
      "card.SpendConstraintDetail": {
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "A 3 letter ISO 4217 code representing the transaction currency",
            "example": "GBP",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "min": {
            "type": "number",
            "description": "Minimum spend amount (inclusive)",
            "example": 5
          },
          "max": {
            "type": "number",
            "description": "Maximum spend amount (inclusive)",
            "example": 2000
          }
        },
        "description": "Spending constraints"
      },
      "account.IdentifierCountrySpecificDetailsRequest": {
        "type": "object",
        "properties": {
          "bankName": {
            "maxLength": 140,
            "minLength": 0,
            "type": "string",
            "description": "The name of the destination bank.",
            "example": "Apple Bank"
          },
          "bankAddress": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "The address of the destination bank.",
            "example": "2100 Broadway"
          },
          "bankCity": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "The city in which the destination bank resides.",
            "example": "New York City"
          },
          "bankBranchName": {
            "type": "string",
            "description": "The name of the destination bank's branch.",
            "example": "New York"
          },
          "bankBranchCode": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "The code of the destination bank's branch.",
            "example": "44-04"
          },
          "bankCode": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
          },
          "chineseId": {
            "type": "string",
            "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
            "example": "01101201901018889"
          },
          "province": {
            "type": "string",
            "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
            "example": "Zhejiang"
          },
          "business": {
            "type": "boolean",
            "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
            "example": true
          },
          "bankCodeType": {
            "type": "string",
            "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
            "example": "ABA",
            "enum": [
              "ABA",
              "CHIPS"
            ]
          },
          "bankCountry": {
            "type": "string",
            "description": "The country in which the destination bank resides.",
            "example": "US",
            "enum": [
              "AT",
              "BE",
              "BG",
              "CY",
              "CZ",
              "DK",
              "EE",
              "FI",
              "FR",
              "DE",
              "GR",
              "HR",
              "HU",
              "IS",
              "IE",
              "IT",
              "LV",
              "LI",
              "LT",
              "LU",
              "MT",
              "NL",
              "NO",
              "PL",
              "PT",
              "RO",
              "SK",
              "SI",
              "ES",
              "SE",
              "GB",
              "MQ",
              "YT",
              "GP",
              "GF",
              "RE",
              "MF",
              "GI",
              "GG",
              "IM",
              "JE",
              "MC",
              "CH",
              "AD",
              "SM",
              "VA",
              "AX",
              "PM",
              "BL",
              "AF",
              "AL",
              "DZ",
              "AS",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "VG",
              "BN",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CK",
              "CR",
              "CU",
              "CW",
              "CD",
              "DJ",
              "DM",
              "DO",
              "TL",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "SZ",
              "ET",
              "FK",
              "FO",
              "FJ",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "GH",
              "GL",
              "GD",
              "GU",
              "GT",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "HN",
              "HK",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IL",
              "CI",
              "JM",
              "JP",
              "JO",
              "KZ",
              "KE",
              "KI",
              "XK",
              "KW",
              "KG",
              "LA",
              "LB",
              "LS",
              "LR",
              "LY",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MH",
              "MR",
              "MU",
              "MX",
              "FM",
              "MD",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "KP",
              "MK",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PR",
              "QA",
              "CG",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "VC",
              "WS",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SB",
              "SO",
              "ZA",
              "KR",
              "GS",
              "SS",
              "LK",
              "SD",
              "SR",
              "SY",
              "SJ",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UM",
              "US",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "abaRoutingNumber": {
            "pattern": "^\\d{9}$",
            "type": "string",
            "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
            "example": "123456789"
          }
        },
        "example": {
          "branchCode": "123456789"
        }
      },
      "payment.PaymentApproval": {
        "type": "object",
        "properties": {
          "approvedBy": {
            "type": "string",
            "description": "ID of user who approved this batch payment request",
            "example": "U2100021"
          },
          "approvedOn": {
            "type": "string",
            "description": "Date this approval was applied",
            "format": "date",
            "example": "2022-06-25"
          }
        },
        "description": "A single approval against a batch payment request"
      },
      "account.UpdateAccountRequest": {
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w \\-]*",
            "type": "string",
            "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
          },
          "name": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Name for the account, only applicable for 'PCM_INDIVIDUAL' and 'PCM_BUSINESS' customer types"
          }
        },
        "description": "Details of account to edit"
      },
      "payment.Address": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "First line of the ultimate payers address",
            "example": "2nd Floor"
          },
          "addressLine2": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Second line of the ultimate payers address",
            "example": "123 High Street"
          },
          "postTown": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Postal town of the ultimate payers address",
            "example": "Edinburgh"
          },
          "postCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "Post code of the ultimate payers address",
            "example": "AB12 3XX"
          },
          "country": {
            "type": "string",
            "description": "ISO 3166 country code of the ultimate payers address",
            "example": "GB"
          }
        }
      },
      "card.AuthorisationWindow": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Authorisation window start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Authorisation window end date",
            "format": "date-time"
          }
        },
        "description": "Authorisation window defined for card"
      },
      "pispgateway.LegacyPaymentContext": {
        "type": "object",
        "properties": {
          "paymentContextCode": {
            "type": "string",
            "description": "Indicates type of Payment Context, can be one of BILLPAYMENT, ECOMMERCEGOODS, ECOMMERCESERVICES, OTHER, PARTYTOPARTY. If no value or paymentContext is provided, PARTYTOPARTY is considered the default value.",
            "enum": [
              "BILLPAYMENT",
              "ECOMMERCEGOODS",
              "ECOMMERCESERVICES",
              "OTHER",
              "PARTYTOPARTY",
              "BILLPAYMENT",
              "ECOMMERCEGOODS",
              "ECOMMERCESERVICES",
              "OTHER",
              "PARTYTOPARTY"
            ]
          },
          "deliveryAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "First line of the address"
              },
              "addressLine2": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Second line of the address"
              },
              "postTown": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "The post town"
              },
              "postCode": {
                "maxLength": 16,
                "minLength": 0,
                "type": "string",
                "description": "The postcode"
              },
              "country": {
                "type": "string",
                "description": "The country"
              }
            },
            "description": "Information that locates and identifies a specific address, as defined by postal services or in free format text, must be specified if paymentContextCode is ECOMMERCEGOODS"
          },
          "merchantCategoryCode": {
            "maxLength": 4,
            "minLength": 3,
            "type": "string",
            "description": "Merchant category code conform to ISO 18245, related to the type of services or goods provided for the transaction. Must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
          },
          "merchantCustomerIdentification": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Merchant customer identification, must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
          }
        },
        "description": "Payment context for the initiation request"
      },
      "onboarding.CreateCustomerRequest": {
        "required": [
          "legalEntity",
          "type"
        ],
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w \\-]*",
            "type": "string",
            "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^([_'@,&()Â£$â¬Â¥=#%\\â\\â:;/<>Â«Â»\\\"!\\â\\â\\â.\\?\\-\\s\\*\\{\\}\\[\\]\\+\\%\\\\]*?[\\p{L}0-9])+[_'@,&()Â£$â¬Â¥=#%\\â\\â:;/<>Â«Â»\\\"!\\â\\â\\â.\\?\\-\\s\\*\\{\\}\\[\\]\\+\\%\\\\]*",
            "type": "string",
            "description": "AlphaNumeric characters plus [ _ ' @ , & Â£ $ â¬ Â¥ = # % â â : ; \\ / < > Â« Â»  ! â â â . ? - *{ }  + % ( )]. Mandatory for all types except 'INDIVIDUAL and PCM_INDIVIDUAL'"
          },
          "companyRegNumber": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Company registration number. Mandatory for 'LLC' and 'PLC'"
          },
          "registeredAddress": {
            "required": [
              "addressLine1",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postTown": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postCode": {
                "maxLength": 10,
                "type": "string"
              },
              "country": {
                "type": "string",
                "description": "Mandatory for international payments."
              },
              "countrySubDivision": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Home address"
          },
          "tradingAddress": {
            "required": [
              "addressLine1",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postTown": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postCode": {
                "maxLength": 10,
                "type": "string"
              },
              "country": {
                "type": "string",
                "description": "Mandatory for international payments."
              },
              "countrySubDivision": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Home address"
          },
          "industryCode": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Mandatory for all types except 'INDIVIDUAL', 'PCM_INDIVIDUAL' and 'PCM_BUSINESS'. In-house KYC partners -> Refer to Modulr Industry Code list. Outsourced KYC partners -> custom codes allowed."
          },
          "tcsVersion": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "description": "Terms and conditions version. Mandatory for all types except 'PCM_INDIVIDUAL' and 'PCM_BUSINESS'",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Type of the customer, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer\n11. TRUST -> trust customer\n12. PREQUALIFIED -> only for use by customers who have been pre-authorised by Modulr"
          },
          "expectedMonthlySpend": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Mandatory for all types except 'PCM_INDIVIDUAL' and 'PCM_BUSINESS'",
            "format": "int32"
          },
          "associates": {
            "type": "array",
            "description": "Mandatory for all types except 'PCM_BUSINESS'",
            "items": {
              "required": [
                "firstName",
                "homeAddress",
                "lastName",
                "type"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of associate"
                },
                "firstName": {
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": "^[\\p{L}' -]+$",
                  "type": "string",
                  "description": "Letters, hyphens and apostrophes"
                },
                "middleName": {
                  "pattern": "^[\\p{L}' -]*$",
                  "type": "string",
                  "description": "Letters, hyphens and apostrophes"
                },
                "lastName": {
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": "^[\\p{L}' -]+$",
                  "type": "string",
                  "description": "Letters, hyphens and apostrophes"
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "Date in yyyy-MM-dd format. If associate is a non-applicant director or partner, then partial DOB of yyyy-MM format is allowed. Valid age is from 16 to 100 years. If Applicant then minimum age required is 18 years for specific partners. Required for all associate types except PCM_INDIVIDUAL."
                },
                "ownership": {
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer",
                  "description": "Ownership percentage for Partners",
                  "format": "int32"
                },
                "homeAddress": {
                  "required": [
                    "addressLine1",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "addressLine2": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "postTown": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "postCode": {
                      "maxLength": 10,
                      "type": "string"
                    },
                    "country": {
                      "type": "string",
                      "description": "Mandatory for international payments."
                    },
                    "countrySubDivision": {
                      "maxLength": 35,
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "description": "Home address"
                },
                "applicant": {
                  "type": "boolean",
                  "description": "Indicates if the associate is the applicant. Only one associate can be marked as such."
                },
                "email": {
                  "maxLength": 100,
                  "minLength": 0,
                  "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
                  "type": "string",
                  "description": "Contact email address for applicants"
                },
                "phone": {
                  "type": "string",
                  "description": "Contact phone number for applicants, will be formatted into international number pattern"
                },
                "documentInfo": {
                  "type": "array",
                  "description": "Information on uploaded documents",
                  "items": {
                    "required": [
                      "fileName",
                      "path",
                      "uploadedDate"
                    ],
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "uploadedDate": {
                        "type": "string",
                        "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                        "example": "2017-01-28T01:01:01+0000"
                      }
                    },
                    "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
                  }
                },
                "additionalIdentifiers": {
                  "type": "array",
                  "description": "Additional identifiers",
                  "items": {
                    "required": [
                      "type",
                      "value"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of additional personal identifier",
                        "enum": [
                          "BSN"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Personal identifier value"
                      }
                    },
                    "description": "Additional identifiers"
                  }
                },
                "complianceData": {
                  "required": [
                    "relationship"
                  ],
                  "type": "object",
                  "properties": {
                    "relationship": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
                }
              },
              "description": "Mandatory for all types except 'PCM_BUSINESS'"
            }
          },
          "documentInfo": {
            "type": "array",
            "description": "information on uploaded documents",
            "items": {
              "required": [
                "fileName",
                "path",
                "uploadedDate"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "uploadedDate": {
                  "type": "string",
                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "example": "2017-01-28T01:01:01+0000"
                }
              },
              "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
            }
          },
          "legalEntity": {
            "type": "string",
            "description": "Legal entity of the customer",
            "enum": [
              "GB",
              "NL",
              "IE"
            ]
          },
          "provisionalCustomerId": {
            "type": "string",
            "description": "Reference to provisional customer in onboarding flow"
          },
          "customerTrust": {
            "required": [
              "trustNature"
            ],
            "type": "object",
            "properties": {
              "trustNature": {
                "type": "string",
                "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers.",
                "enum": [
                  "BARE_TRUSTS",
                  "INTEREST_IN_POSSESSION_TRUSTS",
                  "DISCRETIONARY_TRUSTS",
                  "ACCUMULATION_TRUSTS",
                  "MIXED_TRUSTS",
                  "SETTLOR_INTERESTED_TRUSTS",
                  "NON_RESIDENT_TRUSTS",
                  "OFFSHORE_TRUSTS",
                  "FAMILY_LIVING_TRUST",
                  "PILOT_TRUST",
                  "VULNERABLE_BENEFICIARY_TRUST",
                  "CHARITABLE_TRUSTS",
                  "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                  "TESTAMENTARY_TRUSTS",
                  "OTHER"
                ]
              }
            },
            "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers."
          },
          "taxProfile": {
            "required": [
              "taxIdentifier"
            ],
            "type": "object",
            "properties": {
              "taxIdentifier": {
                "maxLength": 15,
                "minLength": 0,
                "type": "string",
                "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
              }
            },
            "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
          },
          "complianceData": {
            "type": "object",
            "properties": {
              "typeDescription": {
                "maxLength": 200,
                "minLength": 0,
                "type": "string",
                "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
              },
              "riskLevel": {
                "type": "string",
                "description": "Risk level of the customer",
                "enum": [
                  "LOW",
                  "MEDIUM",
                  "HIGH",
                  "UNDETERMINED"
                ]
              },
              "vulnerabilityReasons": {
                "type": "array",
                "description": "Vulnerability Reasons of the customer",
                "items": {
                  "type": "string",
                  "description": "Vulnerability Reasons of the customer",
                  "enum": [
                    "LIFE_EVENTS",
                    "HEALTH",
                    "RESILIENCE",
                    "CAPABILITY",
                    "FINANCIAL_DIFFICULTY"
                  ]
                }
              }
            },
            "description": "Required for customers of type PREQUALIFIED."
          },
          "consumerDuty": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "enum": [
                  "IN_SCOPE",
                  "NOT_IN_SCOPE"
                ]
              },
              "numberOfEmployees": {
                "type": "integer",
                "format": "int32"
              },
              "netAssets": {
                "type": "number"
              },
              "turnover": {
                "type": "number"
              }
            },
            "description": "Consumer Duty data of the customer"
          }
        },
        "description": "Details of customer to create"
      },
      "directdebit.MandatePageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "accountId",
                "accountNumber",
                "createdDate",
                "externalReference",
                "id",
                "nextValidCollectionDate",
                "reference",
                "sortCode",
                "status"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for direct-debit-mandate.",
                  "example": "G0000001"
                },
                "accountId": {
                  "type": "string",
                  "description": "Unique id for account for this mandate.",
                  "example": "A0000001"
                },
                "reference": {
                  "type": "string",
                  "description": "DDI reference that was used during creation."
                },
                "externalReference": {
                  "type": "string",
                  "description": "External reference that was used during creation (appears on the bank statement)."
                },
                "createdDate": {
                  "type": "string",
                  "description": "Datetime when direct-debit-mandate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "format": "date-time"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the direct-debit-mandate. mandates must be 'ACTIVE' to make collections. Can be one of ",
                  "example": "ACTIVE"
                },
                "nextValidCollectionDate": {
                  "type": "string",
                  "description": "The earliest date a collection can be created. Format is yyyy-MM-dd.",
                  "example": "2018-01-10"
                },
                "Name given on Mandate": {
                  "type": "string"
                },
                "Address given on Mandate": {
                  "required": [
                    "addressLine1",
                    "country",
                    "postCode",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "addressLine2": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "postTown": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "postCode": {
                      "maxLength": 8,
                      "minLength": 0,
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                },
                "sortCode": {
                  "type": "string",
                  "description": "Sort Code of the account for which direct-debit-mandate has been created.",
                  "example": "123456"
                },
                "accountNumber": {
                  "type": "string",
                  "description": "Account Number for which direct-debit-mandate has been created.",
                  "example": "87654321"
                },
                "payeeAccountBid": {
                  "type": "string",
                  "description": "Unique id for individual recipient account used for internal transfers",
                  "example": "A0000001"
                },
                "bulkCreateRequestId": {
                  "type": "string",
                  "description": "Id associate to the bulk create request of this mandate.",
                  "example": "R210000005"
                },
                "bulkCancelRequestId": {
                  "type": "string",
                  "description": "Id associate to the bulk cancel request of this mandate.",
                  "example": "R210000006"
                }
              }
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "inboundpayment.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "account.id": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "ID of the account(s) to fetch"
        }
      },
      "confirmationofpayee.CopPageResponseJsonSrdAccount": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "sortCode"
              ],
              "type": "object",
              "properties": {
                "sortCode": {
                  "type": "string",
                  "description": "The sort code of one or more accounts that requires Secondary Reference Data to be provided when making account name check requests.\n",
                  "example": "123456"
                },
                "accountNumbers": {
                  "type": "array",
                  "description": "Account numbers that require Secondary Reference Data. If empty, Secondary Reference Data is required for all name check requests for this sort code.",
                  "example": [
                    "11111111",
                    "22222222"
                  ],
                  "items": {
                    "type": "string",
                    "description": "The account number of a specific account that requires Secondary Reference Data to be provided when making account name check requests.",
                    "example": "11111111"
                  }
                }
              },
              "description": "List of responses on the current page"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "pispgateway.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "account.AddressRequest": {
        "required": [
          "addressLine1",
          "postTown"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "postTown": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "postCode": {
            "maxLength": 10,
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "Mandatory for international payments."
          },
          "countrySubDivision": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": "Applicable to all types except 'INDIVIDUAL' and 'PCM_INDIVIDUAL'"
      },
      "pispgateway.StandingOrderSchedule": {
        "required": [
          "frequency",
          "initialDate"
        ],
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "description": "Type of the capability, can be one of WEEKLY, MONTHLY",
            "enum": [
              "WEEKLY",
              "MONTHLY"
            ]
          },
          "initialDate": {
            "type": "string",
            "description": "The date on which the standing order should begin. This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
            "example": "2021-03-25"
          },
          "finalDate": {
            "type": "string",
            "description": "The optional date on which the standing order should end. If unspecified, the standing order will continue until cancelled.This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
            "example": "2021-03-25"
          }
        },
        "description": "The schedule of the standing order"
      },
      "paymentfileupload.FileCreatePaymentsResponse": {
        "required": [
          "batchPaymentId",
          "fileId",
          "status"
        ],
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string",
            "description": "Unique id of the uploaded file",
            "example": "F1100001"
          },
          "status": {
            "type": "string",
            "description": "Status of the uploaded file",
            "example": "INVALID",
            "enum": [
              "SUBMITTED",
              "INVALID",
              "VALID",
              "DUPLICATE",
              "REJECTED",
              "ACCEPTED",
              "PROCESSED",
              "SENDING"
            ]
          },
          "fileName": {
            "type": "string",
            "description": "File name of the uploaded file",
            "example": "file1"
          },
          "batchPaymentId": {
            "type": "string",
            "description": "Unique id for the Batch Payment",
            "example": "B1100001"
          }
        },
        "description": "File create payments response"
      },
      "pispgateway.StandingOrderPayment": {
        "required": [
          "amount",
          "destination",
          "reference"
        ],
        "type": "object",
        "properties": {
          "destination": {
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                "enum": [
                  "ACCOUNT",
                  "SCAN",
                  "ACCOUNT",
                  "SCAN"
                ]
              },
              "id": {
                "type": "string",
                "description": "Identifier of the destination account if using ACCOUNT type",
                "example": "A1100001"
              },
              "accountNumber": {
                "pattern": "^[0-9]{8}$",
                "type": "string",
                "description": "Account Number of destination account if using SCAN type",
                "example": "12345678"
              },
              "sortCode": {
                "pattern": "^[0-9]{6}$",
                "type": "string",
                "description": "Sort Code of destination account if using SCAN type",
                "example": "000000"
              },
              "name": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Name of destination account if using SCAN type (this may be truncated)",
                "example": "Test"
              }
            },
            "description": "The destination account for the payment"
          },
          "amount": {
            "required": [
              "currency",
              "recurringAmount"
            ],
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency of the account in ISO 4217 format. Default is GBP",
                "enum": [
                  "GBP"
                ]
              },
              "recurringAmount": {
                "maximum": 2147483647,
                "minimum": 0.01,
                "exclusiveMinimum": false,
                "type": "number",
                "description": "Recurring amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                "example": 100
              }
            },
            "description": "The amount of the standing order"
          },
          "reference": {
            "type": "string",
            "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
            "example": "Invoice ABC123"
          }
        },
        "description": "The payment of the standing order"
      },
      "card.SecureCardDetails": {
        "required": [
          "cvv2",
          "pan"
        ],
        "type": "object",
        "properties": {
          "pan": {
            "type": "string",
            "description": "PAN",
            "example": "4567123412341234"
          },
          "cvv2": {
            "type": "string",
            "description": "CVV",
            "example": "123"
          },
          "pin": {
            "type": "string",
            "description": "PIN",
            "example": "1234"
          }
        }
      },
      "account.AccessGroupRequest": {
        "required": [
          "accountIds",
          "action",
          "beneficiaryIds",
          "name"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to apply for the supplied account bid",
            "enum": [
              "ADD",
              "REMOVE"
            ]
          },
          "accountIds": {
            "type": "array",
            "description": "Bids of the accounts to be added/removed",
            "items": {
              "type": "string",
              "description": "Bids of the accounts to be added/removed"
            }
          },
          "beneficiaryIds": {
            "type": "array",
            "description": "Bids of the beneficiaries to be added/removed",
            "items": {
              "type": "string",
              "description": "Bids of the beneficiaries to be added/removed"
            }
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w \\-]*",
            "type": "string",
            "description": "The name of the account group to create. Must match: [\\w \\-]*"
          }
        }
      },
      "card.CardTokenDevice": {
        "required": [
          "id",
          "ip",
          "name",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Device ID",
            "example": "D110000001"
          },
          "type": {
            "type": "string",
            "description": "Device type",
            "example": "MOBILE_PHONE",
            "enum": [
              "CLOTHING",
              "MEDIA_GAMING",
              "CARD",
              "DOMESTIC_APPLIANCE",
              "FOB",
              "MOBILE_TAG",
              "FASHION",
              "JEWELRY",
              "MOBILE_PHONE",
              "PERSONAL_COMPUTER",
              "WRISTBAND",
              "STICKER",
              "TABLET",
              "UNKNOWN",
              "VEHICLE",
              "WATCH",
              "MOBILE_PHONE_OR_TABLET"
            ]
          },
          "ip": {
            "type": "string",
            "description": "IPv4 address of the device. Either in hex format (i.e FFFFFFFF) or decimal format (i.e. 255.255.255.255)",
            "example": "255.255.255.255"
          },
          "name": {
            "type": "string",
            "description": "Device name, as given by the cardholder",
            "example": "iPhone 12"
          },
          "status": {
            "type": "string",
            "description": "Device status",
            "example": "ACTIVE",
            "enum": [
              "PENDING_PROVISIONING",
              "PROVISIONED",
              "DELETED",
              "UNKNOWN"
            ]
          }
        }
      },
      "directdebitoutbound.CollectionRejectRequest": {
        "required": [
          "claimBId",
          "rejectCode"
        ],
        "type": "object",
        "properties": {
          "claimBId": {
            "pattern": "[A-Za-z]{1}[0-9]{2}([A-Za-z0-9]){5}",
            "type": "string",
            "description": "Collection Claim Business ID",
            "example": "A123456B"
          },
          "rejectCode": {
            "type": "string",
            "enum": [
              "ADVANCE_NOTICE_DISPUTED",
              "AMOUNT_DIFFERS",
              "AMOUNT_NOT_YET_DUE",
              "PRESENTATION_OVERDUE",
              "SKIP_DEBIT_ATTEMPT"
            ]
          }
        },
        "description": "Collection reject request"
      },
      "rule.CreateRuleRequest": {
        "required": [
          "accountId",
          "data",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of Rule. Can be one of the following {SWEEP, SPLIT, FUNDING}",
            "enum": [
              "SPLIT",
              "SWEEP",
              "FUNDING"
            ]
          },
          "name": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Rule's name",
            "example": "My new rule"
          },
          "accountId": {
            "type": "string",
            "description": "The Account which the Rule is created on.",
            "example": "A1000001"
          },
          "data": {
            "type": "object",
            "properties": {
              "daysToRun": {
                "type": "array",
                "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                "items": {
                  "type": "string",
                  "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                  "enum": [
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY",
                    "SUNDAY"
                  ]
                }
              },
              "frequency": {
                "type": "string",
                "description": "Frequency of the rule. Sweep Rule Only",
                "enum": [
                  "Daily"
                ]
              },
              "destinationId": {
                "type": "string",
                "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
              },
              "balanceToLeave": {
                "type": "number",
                "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
              },
              "triggerBalance": {
                "type": "number",
                "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
              },
              "splits": {
                "type": "array",
                "items": {
                  "required": [
                    "destinationId",
                    "percent"
                  ],
                  "type": "object",
                  "properties": {
                    "destinationId": {
                      "type": "string",
                      "description": "Id of destination beneficiary. e.g. B1000001."
                    },
                    "percent": {
                      "type": "string",
                      "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                    }
                  },
                  "description": "Configuration for a Split Rule"
                }
              },
              "conditionalSplits": {
                "type": "array",
                "items": {
                  "required": [
                    "destinationId",
                    "percent"
                  ],
                  "type": "object",
                  "properties": {
                    "destinationId": {
                      "type": "string",
                      "description": "Id of destination beneficiary. e.g. B1000001."
                    },
                    "percent": {
                      "type": "string",
                      "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                    }
                  },
                  "description": "Configuration for a Split Rule"
                }
              },
              "conditionalSplitConfig": {
                "required": [
                  "conditionAmount",
                  "destinationId",
                  "percent"
                ],
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "description": "Id of destination beneficiary. e.g. B1000001."
                  },
                  "percent": {
                    "type": "string",
                    "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                  },
                  "conditionAmount": {
                    "maximum": 2147483647,
                    "minimum": 0.01,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
                  },
                  "conditionDone": {
                    "type": "boolean",
                    "description": "Whether the condition amount has been met. e.g. true or false"
                  }
                },
                "description": "Configuration for a Conditional Split Rule"
              },
              "sourceId": {
                "type": "string",
                "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
              }
            },
            "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
          }
        },
        "description": "create rule request"
      },
      "account.delegateId": {
        "type": "array",
        "description": "List of delegate IDs to retrieve linked customers",
        "items": {
          "type": "string",
          "description": "Delegate id to retrieve linked customers"
        }
      },
      "payment.approvalStatus": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Filter batch payments which contain payments with the specified approval statuses",
          "enum": [
            "NOTNEEDED",
            "PENDING",
            "APPROVED",
            "REJECTED",
            "DELETED"
          ]
        }
      },
      "payment.OfficialOrganisationIdentity": {
        "type": "object",
        "properties": {
          "bankPartyIdentification": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Bank party identification",
            "example": "12345"
          },
          "centralBankIdNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Central bank identification number",
            "example": "678910"
          },
          "clearingIdNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Clearing identification Number",
            "example": "xx15402"
          },
          "certificateOfIncorporationNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Certification of the incorporation number",
            "example": "1100010"
          },
          "countryIdCode": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Country identification code",
            "example": "111111"
          },
          "customerNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Customer number",
            "example": "00221133"
          },
          "dataUniversalNumberingSystem": {
            "pattern": "^[0-9]{9,9}?$",
            "type": "string",
            "description": "Data universal numbering system",
            "example": "002211330"
          },
          "employerIdNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Employer identification number",
            "example": "00221133"
          },
          "gs1glnIdentifier": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "GS1GLN identifier",
            "example": "00221133"
          },
          "sirenCode": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "SIREN code",
            "example": "00221133"
          },
          "siretCode": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "SIRET code",
            "example": "00221133"
          },
          "taxIdNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Tax identification number",
            "example": "00221133"
          },
          "bicIdentifier": {
            "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
            "type": "string",
            "description": "BICI identification",
            "example": "MGALODJAO7A"
          },
          "ibeiIdentifier": {
            "pattern": "^[A-Z]{2,2}[B-DF-HJ-NP-TV-XZ0-9]{7,7}[0-9]{1,1}?$",
            "type": "string",
            "description": "IBEI identification",
            "example": "HIZFTMTT59"
          },
          "beiIdentifier": {
            "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
            "type": "string",
            "description": "BEI identification",
            "example": "MHIHISVZUMH"
          },
          "eanglnIdentifier": {
            "pattern": "^[0-9]{13,13}?$",
            "type": "string",
            "description": "EANGLN identification",
            "example": "7516164953429"
          },
          "chipsUniversalIdentifier": {
            "pattern": "^CH[0-9]{6,6}?$",
            "type": "string",
            "description": "CHIPS universal identification",
            "example": "CH157373"
          },
          "genericIdentification3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Generic identification 3",
            "example": "123456788"
          },
          "genericIdentificationIssr": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Generic identification issr",
            "example": "13143225"
          }
        },
        "description": "Organisation's official identification. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
      },
      "card.Remove": {
        "required": [
          "op",
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "example": "/{nameOfTheField}"
          },
          "op": {
            "type": "string",
            "default": "remove"
          }
        },
        "description": "Remove field"
      },
      "pispgateway.VrpPaymentRequest": {
        "required": [
          "consentId",
          "payment"
        ],
        "type": "object",
        "properties": {
          "consentId": {
            "type": "string",
            "description": "The unique identifier of the VRP consent initiation request at Modulr.",
            "example": "E210000004"
          },
          "payment": {
            "required": [
              "currency",
              "reference"
            ],
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency of the payment amount. Must be specified in ISO 4217 format."
              },
              "amount": {
                "type": "number",
                "description": "Payment amount",
                "example": 100
              },
              "reference": {
                "type": "string",
                "description": "A reference used to unambiguously refer to the payment transaction. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space."
              }
            },
            "description": "Payment details for the VRP payment initiation request."
          }
        }
      },
      "account.CustomerTrustResponse": {
        "type": "object",
        "properties": {
          "trustNature": {
            "type": "string",
            "enum": [
              "BARE_TRUSTS",
              "INTEREST_IN_POSSESSION_TRUSTS",
              "DISCRETIONARY_TRUSTS",
              "ACCUMULATION_TRUSTS",
              "MIXED_TRUSTS",
              "SETTLOR_INTERESTED_TRUSTS",
              "NON_RESIDENT_TRUSTS",
              "OFFSHORE_TRUSTS",
              "FAMILY_LIVING_TRUST",
              "PILOT_TRUST",
              "VULNERABLE_BENEFICIARY_TRUST",
              "CHARITABLE_TRUSTS",
              "IRREVOCABLE_LIFE_INSURANCE_TRUST",
              "TESTAMENTARY_TRUSTS",
              "OTHER"
            ]
          }
        },
        "description": "Trust nature for customers of type trust. Mandatory for type Trust, not to be set for non-trust customers."
      },
      "account.UpdateAssociateRequest": {
        "required": [
          "firstName",
          "homeAddress",
          "lastName",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of associate"
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[\\p{L}' -]+$",
            "type": "string",
            "description": "Letters, hyphens and apostrophes"
          },
          "middleName": {
            "pattern": "^[\\p{L}' -]*$",
            "type": "string",
            "description": "Letters, hyphens and apostrophes"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[\\p{L}' -]+$",
            "type": "string",
            "description": "Letters, hyphens and apostrophes"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date in yyyy-MM-dd format. If associate is a non-applicant director or partner, then partial DOB of yyyy-MM format is allowed. Valid age is from 16 to 100 years. If Applicant then minimum age required is 18 years for specific partners. Required for all associate types except PCM_INDIVIDUAL."
          },
          "ownership": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Ownership percentage for Partners",
            "format": "int32"
          },
          "homeAddress": {
            "required": [
              "addressLine1",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postTown": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postCode": {
                "maxLength": 10,
                "type": "string"
              },
              "country": {
                "type": "string",
                "description": "Mandatory for international payments."
              },
              "countrySubDivision": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Applicable to all types except 'INDIVIDUAL' and 'PCM_INDIVIDUAL'"
          },
          "id": {
            "type": "string",
            "description": "ID of associate"
          }
        },
        "description": "Applicable to all types except 'PCM_BUSINESS'"
      },
      "paymentfileupload.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "payment.BatchPaymentDetailsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the Batch Payment. 10 characters long",
            "example": "D920000001"
          },
          "externalReference": {
            "type": "string",
            "description": "External reference, if provided",
            "example": "aReference_00001"
          },
          "status": {
            "type": "string",
            "description": "Current status of batch.",
            "example": "ACCEPTED",
            "enum": [
              "ACCEPTED",
              "REJECTED",
              "SUBMITTED",
              "CANCELLED"
            ]
          },
          "totalPayments": {
            "type": "integer",
            "description": "Total count of payments in this batch",
            "format": "int32",
            "example": 9123
          },
          "currentUserCanApprove": {
            "type": "boolean",
            "description": "Whether the user is allowed to approve this batch, based on their approval limits, and applicable configuration",
            "example": true
          },
          "paymentDetails": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "totalPaymentCount": {
                  "type": "integer",
                  "description": "Total count of payments",
                  "format": "int32",
                  "example": 10
                },
                "totalAmount": {
                  "type": "number",
                  "description": "Sum total of payment amounts",
                  "example": 100
                },
                "pendingApprovalCount": {
                  "type": "integer",
                  "description": "Count of payments currently pending approval",
                  "format": "int32",
                  "example": 5
                },
                "pendingApprovalAmount": {
                  "type": "number",
                  "description": "Sum total of payment amounts currently pending approval",
                  "example": 50
                }
              },
              "description": "Summary of payments and approvals"
            },
            "description": "Summary of payments and approvals, per currency (as a 3-alpha currency code)"
          },
          "approvals": {
            "type": "array",
            "description": "List of batch-level approvals",
            "items": {
              "type": "object",
              "properties": {
                "approvedBy": {
                  "type": "string",
                  "description": "ID of user who approved this batch payment request",
                  "example": "U2100021"
                },
                "approvedOn": {
                  "type": "string",
                  "description": "Date this approval was applied",
                  "format": "date",
                  "example": "2022-06-25"
                }
              },
              "description": "A single approval against a batch payment request"
            }
          },
          "currentUserCanCancel": {
            "type": "boolean",
            "description": "Whether the user is allowed and currently able to cancel at least one of the payments in this batch"
          },
          "createdDate": {
            "type": "string",
            "description": "Datetime when the batch payment was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "processingDateFrom": {
            "type": "string",
            "description": "Earliest processing date in the batch file or the batch creation date if the file does not have any dates. Date format 'yyyy-MM-dd'",
            "format": "date",
            "example": "2017-01-28"
          },
          "processingDateTo": {
            "type": "string",
            "description": "Last processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
            "format": "date",
            "example": "2017-01-28"
          },
          "earliestScheduledPaymentDate": {
            "type": "string",
            "description": "Earliest processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
            "format": "date",
            "example": "2017-01-28"
          },
          "requiredApprovalCount": {
            "type": "integer",
            "description": "The number of required approvals for the batch.  Applicable to batch payments of submissionType BATCH",
            "format": "int32"
          },
          "summary": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total count of payment requests in this batch",
                "format": "int32"
              },
              "invalid": {
                "type": "integer",
                "description": "Count of invalid payment requests",
                "format": "int32"
              },
              "inprogress": {
                "type": "integer",
                "description": "Count of payment requests in progress",
                "format": "int32"
              },
              "completed": {
                "type": "integer",
                "description": "Count of completed payments",
                "format": "int32"
              },
              "errors": {
                "type": "integer",
                "description": "Count of failed payment requests",
                "format": "int32"
              },
              "info": {
                "type": "string",
                "description": "Additional information or error message regarding this batch payment request"
              },
              "strict": {
                "type": "boolean"
              }
            },
            "description": "Summary of the state of payment requests in this batch"
          }
        }
      },
      "card.AddressDetail": {
        "required": [
          "addressLine1",
          "country",
          "postCode",
          "postTown"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "First line of address",
            "example": "Floor 10"
          },
          "addressLine2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Second line of address",
            "example": "80 George Street"
          },
          "postTown": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Post town",
            "example": "EDINBURGH"
          },
          "postCode": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Postcode",
            "example": "EH2 3BU"
          },
          "country": {
            "type": "string",
            "description": "Country (ISO 3166 alpha-2 country code)",
            "example": "GB",
            "enum": [
              "AT",
              "BE",
              "BG",
              "CY",
              "CZ",
              "DK",
              "EE",
              "FI",
              "FR",
              "DE",
              "GR",
              "HR",
              "HU",
              "IS",
              "IE",
              "IT",
              "LV",
              "LI",
              "LT",
              "LU",
              "MT",
              "NL",
              "NO",
              "PL",
              "PT",
              "RO",
              "SK",
              "SI",
              "ES",
              "SE",
              "AX",
              "AW",
              "BL",
              "CW",
              "GF",
              "GL",
              "GP",
              "ME",
              "MF",
              "MQ",
              "NC",
              "PF",
              "PM",
              "RE",
              "SX",
              "TF",
              "WF",
              "YT",
              "AI",
              "BM",
              "FK",
              "GB",
              "GG",
              "GI",
              "GS",
              "IO",
              "JE",
              "KY",
              "MS",
              "PN",
              "SH",
              "TC",
              "VG"
            ]
          }
        },
        "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
      },
      "confirmationofpayee.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "pispgateway.MaximumIndividualVrPayment": {
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency of the maximum individual amount. Must be specified in ISO 4217 format."
          },
          "amount": {
            "type": "number",
            "description": "Maximum amount of any single payment initiated using this consent - '1' = 1.00 GBP",
            "example": 100
          }
        },
        "description": "Maximum amount of any single payment initiated using this consent."
      },
      "onboarding.CustomerTrustResponse": {
        "type": "object",
        "properties": {
          "trustNature": {
            "type": "string",
            "enum": [
              "BARE_TRUSTS",
              "INTEREST_IN_POSSESSION_TRUSTS",
              "DISCRETIONARY_TRUSTS",
              "ACCUMULATION_TRUSTS",
              "MIXED_TRUSTS",
              "SETTLOR_INTERESTED_TRUSTS",
              "NON_RESIDENT_TRUSTS",
              "OFFSHORE_TRUSTS",
              "FAMILY_LIVING_TRUST",
              "PILOT_TRUST",
              "VULNERABLE_BENEFICIARY_TRUST",
              "CHARITABLE_TRUSTS",
              "IRREVOCABLE_LIFE_INSURANCE_TRUST",
              "TESTAMENTARY_TRUSTS",
              "OTHER"
            ]
          }
        },
        "description": "Trust nature for customers of type trust. Mandatory for type Trust, not to be set for non-trust customers."
      },
      "onboarding.Customer": {
        "required": [
          "createdDate",
          "id",
          "name",
          "status",
          "type",
          "verificationStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for a Customer. Begins with 'C'",
            "example": "C00000001"
          },
          "name": {
            "type": "string",
            "description": "Customer's company name - must be unique across the Modulr platform."
          },
          "brandNames": {
            "type": "array",
            "description": "The customers brand name(s)",
            "items": {
              "required": [
                "id",
                "name"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for the Brand Name"
                },
                "name": {
                  "type": "string",
                  "description": "The Brand Name"
                }
              },
              "description": "BrandName"
            }
          },
          "type": {
            "type": "string",
            "description": "Type of the customer, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer"
          },
          "status": {
            "type": "string",
            "description": "Status of the Customer. Customers must be 'Active' for Accounts to be created for them.",
            "enum": [
              "ACTIVE",
              "CLOSED",
              "BLOCKED"
            ]
          },
          "verificationStatus": {
            "type": "string",
            "description": "How the identity of the Customer has been verified. Can be:\n1. UNVERIFIED -> no verification checks have been completed\n2. VERIFIED -> verification checks completed satisfactorily\n3. EXVERIFIED -> verification completed externally\n4. REFERRED -> verification is pending manual review\n5. DECLINED -> verification is complete with a negative result\n6. REVIEWED -> verification check has been reviewed"
          },
          "companyRegNumber": {
            "type": "string",
            "description": "The company registration / incorporation number of the company. Only applicable for companies registered with Companies House"
          },
          "expectedMonthlySpend": {
            "type": "integer",
            "description": "Indication of the monthly spend of the customer.",
            "format": "int32"
          },
          "registeredAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countrySubDivision": {
                "type": "string"
              }
            },
            "description": "Address"
          },
          "tradingAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countrySubDivision": {
                "type": "string"
              }
            },
            "description": "Address"
          },
          "partnerId": {
            "type": "string",
            "description": "The owning partner identifier"
          },
          "associates": {
            "type": "array",
            "description": "Array of associate objects that link to the Customer. For example, this could contain the details of the company directors for a Limited company, or or the partners for a partnership.",
            "items": {
              "required": [
                "dateOfBirth",
                "firstName",
                "id",
                "lastName",
                "type",
                "verificationStatus"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for the Associate"
                },
                "firstName": {
                  "type": "string",
                  "description": "Associate's first name(s)"
                },
                "middleName": {
                  "type": "string",
                  "description": "Associate's middle name"
                },
                "lastName": {
                  "type": "string",
                  "description": "Associate's surname"
                },
                "email": {
                  "type": "string",
                  "description": "Associate's email address"
                },
                "phone": {
                  "type": "string",
                  "description": "Associate's phone number, in international number format"
                },
                "applicant": {
                  "type": "boolean",
                  "description": "Indicates which Associate originally applied for the Modulr account"
                },
                "ownership": {
                  "type": "integer",
                  "description": "The Associate's percentage ownership of the Customer",
                  "format": "int32"
                },
                "type": {
                  "type": "string",
                  "description": "Describes the relation between the Associate and the Customer. Can be one of "
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "Associate's date of birth in format yyyy-MM-dd, or format yyyy-MM where day is unknown"
                },
                "verificationStatus": {
                  "type": "string",
                  "description": "How the Associate was verified. Can be one of "
                },
                "homeAddress": {
                  "required": [
                    "addressLine1",
                    "country",
                    "postCode",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string"
                    },
                    "addressLine2": {
                      "type": "string"
                    },
                    "postTown": {
                      "type": "string"
                    },
                    "postCode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "countrySubDivision": {
                      "type": "string"
                    }
                  },
                  "description": "Address"
                },
                "documentInfo": {
                  "type": "array",
                  "description": "Documents gathered during Customer Due Diligence checks on an Associate.",
                  "items": {
                    "required": [
                      "fileName",
                      "path",
                      "uploadedDate"
                    ],
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "uploadedDate": {
                        "type": "string",
                        "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                        "example": "2017-01-28T01:01:01+0000"
                      }
                    },
                    "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
                  }
                },
                "additionalPersonalIdentifiers": {
                  "type": "array",
                  "description": "Additional personal identifier(s)",
                  "items": {
                    "required": [
                      "type",
                      "value"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of Additional Personal Identifier",
                        "enum": [
                          "BSN"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Additional Personal Identifier value"
                      }
                    },
                    "description": "AdditionalPersonalIdentifier"
                  }
                },
                "complianceData": {
                  "type": "object",
                  "properties": {
                    "relationship": {
                      "type": "string"
                    }
                  },
                  "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
                }
              },
              "description": "Associate"
            }
          },
          "industryCode": {
            "type": "string"
          },
          "tcsVersion": {
            "type": "integer",
            "description": "Version of the Modulr Account Terms and Conditions the Customer has agreed to.",
            "format": "int32"
          },
          "documentInfo": {
            "type": "array",
            "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement.",
            "items": {
              "required": [
                "fileName",
                "path",
                "uploadedDate"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "uploadedDate": {
                  "type": "string",
                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "example": "2017-01-28T01:01:01+0000"
                }
              },
              "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
            }
          },
          "externalReference": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "description": "Datetime when the customer was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "delegate": {
            "required": [
              "created",
              "id",
              "name",
              "roleId",
              "status",
              "updated"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique reference for the Delegate.",
                "example": "D0000001"
              },
              "name": {
                "type": "string",
                "description": "Name for the Delegate"
              },
              "address": {
                "required": [
                  "addressLine1",
                  "country",
                  "postCode",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "postTown": {
                    "type": "string"
                  },
                  "postCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countrySubDivision": {
                    "type": "string"
                  }
                },
                "description": "Address"
              },
              "roleId": {
                "type": "string",
                "description": "The id of the Role assigned to the delegate",
                "example": "R02002M5"
              },
              "externalReference": {
                "type": "string",
                "description": "External system reference for the Delegate"
              },
              "partner": {
                "type": "string",
                "description": "Partner Bid.",
                "example": "R0000001"
              },
              "status": {
                "type": "string",
                "description": "Status of the Delegate."
              },
              "created": {
                "type": "string",
                "description": "Datetime the Delegate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                "format": "date-time"
              },
              "updated": {
                "type": "string",
                "description": "Datetime the Delegate was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                "format": "date-time"
              }
            },
            "description": "Delegate"
          },
          "legalEntity": {
            "type": "string",
            "description": "Legal entity of the customer",
            "enum": [
              "GB",
              "NL",
              "IE"
            ]
          },
          "customerTrust": {
            "type": "object",
            "properties": {
              "trustNature": {
                "type": "string",
                "enum": [
                  "BARE_TRUSTS",
                  "INTEREST_IN_POSSESSION_TRUSTS",
                  "DISCRETIONARY_TRUSTS",
                  "ACCUMULATION_TRUSTS",
                  "MIXED_TRUSTS",
                  "SETTLOR_INTERESTED_TRUSTS",
                  "NON_RESIDENT_TRUSTS",
                  "OFFSHORE_TRUSTS",
                  "FAMILY_LIVING_TRUST",
                  "PILOT_TRUST",
                  "VULNERABLE_BENEFICIARY_TRUST",
                  "CHARITABLE_TRUSTS",
                  "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                  "TESTAMENTARY_TRUSTS",
                  "OTHER"
                ]
              }
            },
            "description": "Trust nature for customers of type trust. Mandatory for type Trust, not to be set for non-trust customers."
          },
          "taxProfile": {
            "required": [
              "taxIdentifier"
            ],
            "type": "object",
            "properties": {
              "taxIdentifier": {
                "type": "string",
                "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
              }
            },
            "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
          },
          "complianceData": {
            "type": "object",
            "properties": {
              "typeDescription": {
                "type": "string"
              },
              "riskLevel": {
                "type": "string",
                "enum": [
                  "LOW",
                  "MEDIUM",
                  "HIGH",
                  "UNDETERMINED"
                ]
              },
              "vulnerabilityReasons": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "LIFE_EVENTS",
                    "HEALTH",
                    "RESILIENCE",
                    "CAPABILITY",
                    "FINANCIAL_DIFFICULTY"
                  ]
                }
              }
            },
            "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
          },
          "complianceSector": {
            "type": "string",
            "example": "Agency Lite Consumer"
          },
          "generateStatements": {
            "type": "boolean",
            "description": "True if the customer is configured to generate statements"
          }
        },
        "description": "A Customer is a single legal entity that can have 1 or more accounts"
      },
      "pispgateway.CreatePaymentInitiationRequest": {
        "required": [
          "aspspId",
          "destination",
          "paymentAmount",
          "paymentReference"
        ],
        "type": "object",
        "properties": {
          "paymentAmount": {
            "required": [
              "currency",
              "value"
            ],
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency of the account in ISO 4217 format. Only allowable value is GBP",
                "enum": [
                  "GBP"
                ]
              },
              "value": {
                "maximum": 2147483647,
                "minimum": 0.01,
                "exclusiveMinimum": false,
                "type": "number",
                "description": "Amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                "example": 100
              }
            },
            "description": "The amount of the payment"
          },
          "paymentReference": {
            "type": "string",
            "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
            "example": "Invoice ABC123"
          },
          "destination": {
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                "enum": [
                  "ACCOUNT",
                  "SCAN",
                  "ACCOUNT",
                  "SCAN"
                ]
              },
              "id": {
                "type": "string",
                "description": "Identifier of the destination account if using ACCOUNT type",
                "example": "A1100001"
              },
              "accountNumber": {
                "pattern": "^[0-9]{8}$",
                "type": "string",
                "description": "Account Number of destination account if using SCAN type",
                "example": "12345678"
              },
              "sortCode": {
                "pattern": "^[0-9]{6}$",
                "type": "string",
                "description": "Sort Code of destination account if using SCAN type",
                "example": "000000"
              },
              "name": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Name of destination account if using SCAN type (this may be truncated)",
                "example": "Test"
              }
            },
            "description": "The destination account for the payment"
          },
          "aspspId": {
            "type": "string",
            "description": "Identifier for ASPSP being used for the payment",
            "example": "H100000001"
          },
          "paymentContext": {
            "type": "object",
            "properties": {
              "paymentContextCode": {
                "type": "string",
                "description": "Indicates type of Payment Context, can be one of BILLPAYMENT, ECOMMERCEGOODS, ECOMMERCESERVICES, OTHER, PARTYTOPARTY. If no value or paymentContext is provided, PARTYTOPARTY is considered the default value.",
                "enum": [
                  "BILLPAYMENT",
                  "ECOMMERCEGOODS",
                  "ECOMMERCESERVICES",
                  "OTHER",
                  "PARTYTOPARTY",
                  "BILLPAYMENT",
                  "ECOMMERCEGOODS",
                  "ECOMMERCESERVICES",
                  "OTHER",
                  "PARTYTOPARTY"
                ]
              },
              "deliveryAddress": {
                "required": [
                  "addressLine1",
                  "country",
                  "postCode",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "First line of the address"
                  },
                  "addressLine2": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "Second line of the address"
                  },
                  "postTown": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "The post town"
                  },
                  "postCode": {
                    "maxLength": 16,
                    "minLength": 0,
                    "type": "string",
                    "description": "The postcode"
                  },
                  "country": {
                    "type": "string",
                    "description": "The country"
                  }
                },
                "description": "Information that locates and identifies a specific address, as defined by postal services or in free format text, must be specified if paymentContextCode is ECOMMERCEGOODS"
              },
              "merchantCategoryCode": {
                "maxLength": 4,
                "minLength": 3,
                "type": "string",
                "description": "Merchant category code conform to ISO 18245, related to the type of services or goods provided for the transaction. Must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
              },
              "merchantCustomerIdentification": {
                "maxLength": 70,
                "minLength": 1,
                "type": "string",
                "description": "Merchant customer identification, must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
              }
            },
            "description": "Payment context for the initiation request"
          }
        },
        "description": "Request object to Initiate Payment"
      },
      "card.CancelCardRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "The reason for cancelling the card. Can be one of DESTROYED, LOST, STOLEN",
            "enum": [
              "STOLEN",
              "DESTROYED",
              "LOST"
            ]
          }
        },
        "description": "Reason for cancellation"
      },
      "account.statuses": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Account statuses",
          "default": "ACTIVE",
          "enum": [
            "ACTIVE",
            "BLOCKED",
            "CLOSED",
            "CLIENT_BLOCKED"
          ]
        }
      },
      "paymentfileupload.FileUploadRequest": {
        "required": [
          "content",
          "fileName"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Original file name"
          },
          "content": {
            "type": "string",
            "description": "The file content must be zipped using gzip format and then Base64 encoded"
          },
          "submissionType": {
            "type": "string",
            "description": "BATCH restricts operations to batch level.  BULK (default) allows payment level operations such as approval",
            "enum": [
              "BATCH",
              "BULK"
            ]
          }
        },
        "description": "File upload request body"
      },
      "card.ProductDesignDetail": {
        "required": [
          "cardRef",
          "packagingRef"
        ],
        "type": "object",
        "properties": {
          "cardRef": {
            "type": "string",
            "description": "Design reference for card"
          },
          "packagingRef": {
            "type": "string",
            "description": "Design reference for card packaging"
          }
        },
        "description": "Design references for physical card and packaging"
      },
      "card.AppleInAppProvisioningResponse": {
        "required": [
          "activationData",
          "encryptedPassData",
          "ephemeralPublicKey"
        ],
        "type": "object",
        "properties": {
          "ephemeralPublicKey": {
            "type": "string",
            "description": "Ephemeral public key generated to encrypt the data on the provisioning attempt"
          },
          "encryptedPassData": {
            "type": "string",
            "description": "Encrypted payload data requested"
          },
          "activationData": {
            "type": "string",
            "description": "Encrypted OTP for the card provider"
          }
        },
        "description": "AppleInAppProvisioningRequest"
      },
      "directdebit.Collection": {
        "required": [
          "activityDate",
          "amount",
          "id",
          "mandateId",
          "message",
          "originalActivityDate",
          "payerName",
          "reconciliationDate",
          "reconciliationReference",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for a direct-debit collection",
            "example": "K000100100"
          },
          "mandateId": {
            "type": "string",
            "description": "Unique id for direct-debit mandate.",
            "example": "G0000001"
          },
          "collectionScheduleId": {
            "type": "string",
            "description": "Unique id for direct-debit collection schedule for which triggered the collection",
            "example": "Q9200001"
          },
          "activityDate": {
            "type": "string",
            "description": "collection or reportRaised date for indemnity???",
            "example": "2018-01-09"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the collection payment",
            "example": 100
          },
          "type": {
            "type": "string",
            "description": "Type of the collection activity.  Can be one of ",
            "example": "COLLECTION"
          },
          "payerName": {
            "type": "string",
            "description": "Name of the payer",
            "example": "Mr John Doe"
          },
          "status": {
            "type": "string",
            "description": "Status of the collection.  Can be one of ",
            "example": "FAILED"
          },
          "message": {
            "type": "string",
            "description": "Failure description of the payment activity",
            "example": "Instruction Cancelled"
          },
          "originalActivityDate": {
            "type": "string",
            "description": "The original scheduled date for a payment to be collected",
            "example": "2018-01-09"
          },
          "reconciliationDate": {
            "type": "string",
            "description": "The reconciled date for a payment to be collected",
            "example": "2018-01-09"
          },
          "reconciliationReference": {
            "type": "string",
            "description": "The reconciled reference that links to a payment",
            "example": "2018-01-09"
          },
          "ddiReference": {
            "type": "string",
            "description": "collectionReference - if present - is appended to the original DDI reference\n(used during mandate creation - referred to as core reference) for the specified scheduled collection\nwithout altering the original mandate core reference. This will be visible to the payer on their account.\nThe reference and collectionReference combined have 18 character limit and can only contain alphanumeric\ncharacters with underscore, hyphen and space permitted",
            "example": "ABCD-EFGH"
          }
        },
        "description": "List of responses on the current page"
      },
      "pispgateway.PaymentContext": {
        "required": [
          "merchant"
        ],
        "type": "object",
        "properties": {
          "paymentContextCode": {
            "type": "string",
            "description": "Indicates type of Payment Context, can be one of BILLPAYMENT, ECOMMERCEGOODS, ECOMMERCESERVICES, OTHER, PARTYTOPARTY. If no value or paymentContext is provided, PARTYTOPARTY is considered the default value.",
            "enum": [
              "BILLPAYMENT",
              "ECOMMERCEGOODS",
              "ECOMMERCESERVICES",
              "OTHER",
              "PARTYTOPARTY",
              "BILLPAYMENT",
              "ECOMMERCEGOODS",
              "ECOMMERCESERVICES",
              "OTHER",
              "PARTYTOPARTY"
            ]
          },
          "deliveryAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "First line of the address"
              },
              "addressLine2": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Second line of the address"
              },
              "postTown": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "The post town"
              },
              "postCode": {
                "maxLength": 16,
                "minLength": 0,
                "type": "string",
                "description": "The postcode"
              },
              "country": {
                "type": "string",
                "description": "The country"
              }
            },
            "description": "Information that locates and identifies a specific address, as defined by postal services or in free format text, must be specified if paymentContextCode is ECOMMERCEGOODS"
          },
          "merchant": {
            "type": "object",
            "properties": {
              "categoryCode": {
                "maxLength": 4,
                "minLength": 3,
                "type": "string",
                "description": "Merchant category code conform to ISO 18245, related to the type of services or goods provided for the transaction. Must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
              },
              "customerId": {
                "maxLength": 70,
                "minLength": 1,
                "type": "string",
                "description": "Merchant customer identification, must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
              }
            },
            "description": "Merchant details for the payment context"
          }
        },
        "description": "Payment context for the initiation request"
      },
      "confirmationofpayee.JsonOutboundCopResponse": {
        "required": [
          "id",
          "result"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the account name check.",
            "example": "C12001569Z"
          },
          "result": {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The result of the account name check.",
                "example": "MATCHED",
                "enum": [
                  "MATCHED",
                  "NOT_MATCHED",
                  "CLOSE_MATCH",
                  "BUSINESS_ACCOUNT_NAME_MATCHED",
                  "PERSONAL_ACCOUNT_NAME_MATCHED",
                  "BUSINESS_ACCOUNT_CLOSE_MATCH",
                  "PERSONAL_ACCOUNT_CLOSE_MATCH",
                  "ACCOUNT_DOES_NOT_EXIST",
                  "SECONDARY_ACCOUNT_ID_NOT_FOUND",
                  "ACCOUNT_NOT_SUPPORTED",
                  "OPTED_OUT",
                  "ACCOUNT_SWITCHED",
                  "WRONG_PARTICIPANT",
                  "NO_RESPONSE",
                  "NOT_ENROLLED"
                ]
              },
              "name": {
                "type": "string",
                "description": "The actual name on the account (as provided by the participating organisation).",
                "example": "Joseph Bloggs"
              }
            },
            "description": "Account Name Check Result"
          }
        },
        "description": "Account Name Check Response"
      },
      "card.GetCardTokensResponse": {
        "required": [
          "content",
          "size"
        ],
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "description": "Number of elements in content",
            "format": "int32",
            "example": 1
          },
          "content": {
            "type": "array",
            "description": "List of response elements",
            "items": {
              "required": [
                "expiry",
                "id",
                "language",
                "status",
                "type",
                "wallet"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Card token ID",
                  "example": "T110000001"
                },
                "expiry": {
                  "type": "string",
                  "description": "Token expiry date (ISO 8601 format)",
                  "format": "date",
                  "example": "2021-10-31"
                },
                "type": {
                  "type": "string",
                  "description": "Type of system the token is encoded onto",
                  "example": "SECURE_ELEMENT",
                  "enum": [
                    "BROWSER_ACCESSIBLE_WALLET",
                    "CONTACTLESS_DEVICE_PAN",
                    "CARD_ON_FILE_PAN",
                    "REAL_PAN",
                    "UNKNOWN",
                    "VIRTUAL_PAN",
                    "SECURE_ELEMENT",
                    "CLOUD_BASED"
                  ]
                },
                "wallet": {
                  "type": "string",
                  "description": "Wallet the token belongs to",
                  "example": "APPLE",
                  "enum": [
                    "APPLE",
                    "GOOGLE",
                    "MRCHTOKEN"
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "Card token status",
                  "example": "PROVISIONED",
                  "enum": [
                    "APPROVED",
                    "ACTIVE",
                    "AWAITING_AUTHENTICATION",
                    "AUTHENTICATION_FAILED",
                    "AUTO_SUSPENDED",
                    "SUSPENDED",
                    "DEACTIVATED",
                    "UNKNOWN"
                  ]
                },
                "language": {
                  "type": "string",
                  "description": "2-digit ISO 639-1 language code",
                  "example": "EN"
                },
                "devices": {
                  "type": "array",
                  "items": {
                    "required": [
                      "id",
                      "ip",
                      "name",
                      "status",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Device ID",
                        "example": "D110000001"
                      },
                      "type": {
                        "type": "string",
                        "description": "Device type",
                        "example": "MOBILE_PHONE",
                        "enum": [
                          "CLOTHING",
                          "MEDIA_GAMING",
                          "CARD",
                          "DOMESTIC_APPLIANCE",
                          "FOB",
                          "MOBILE_TAG",
                          "FASHION",
                          "JEWELRY",
                          "MOBILE_PHONE",
                          "PERSONAL_COMPUTER",
                          "WRISTBAND",
                          "STICKER",
                          "TABLET",
                          "UNKNOWN",
                          "VEHICLE",
                          "WATCH",
                          "MOBILE_PHONE_OR_TABLET"
                        ]
                      },
                      "ip": {
                        "type": "string",
                        "description": "IPv4 address of the device. Either in hex format (i.e FFFFFFFF) or decimal format (i.e. 255.255.255.255)",
                        "example": "255.255.255.255"
                      },
                      "name": {
                        "type": "string",
                        "description": "Device name, as given by the cardholder",
                        "example": "iPhone 12"
                      },
                      "status": {
                        "type": "string",
                        "description": "Device status",
                        "example": "ACTIVE",
                        "enum": [
                          "PENDING_PROVISIONING",
                          "PROVISIONED",
                          "DELETED",
                          "UNKNOWN"
                        ]
                      }
                    }
                  }
                },
                "maskedDpan": {
                  "type": "string",
                  "description": "Masked DPAN (last 4 digits) to the associated token ID",
                  "example": "1234"
                }
              },
              "description": "Payment token details for a card"
            }
          }
        }
      },
      "directdebit.Address": {
        "required": [
          "addressLine1",
          "country",
          "postCode",
          "postTown"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "postTown": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "postCode": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "directdebitoutbound.MandateCancelRequest": {
        "required": [
          "accountId",
          "cancellationCode",
          "mandateId",
          "merchantNumber"
        ],
        "type": "object",
        "properties": {
          "mandateId": {
            "type": "string",
            "description": "Mandate Id"
          },
          "accountId": {
            "type": "string",
            "description": "Account Id"
          },
          "cancellationCode": {
            "type": "string",
            "description": "Cancellation Code",
            "enum": [
              "REFER_TO_PAYER",
              "INSTRUCTION_CANCELLED_BY_PAYER",
              "PAYER_DECEASED",
              "ACCOUNT_TRANSFERRED",
              "ACCOUNT_CLOSED",
              "ACCOUNT_OR_INSTRUCTION_TRANSFERRED",
              "ADVANCE_NOTICE_DISPUTED",
              "INSTRUCTION_AMENDED",
              "INSTRUCTION_REINSTATED"
            ]
          },
          "merchantNumber": {
            "type": "string",
            "description": "Merchant Number"
          }
        },
        "description": "Details of the Mandate Cancel Request"
      },
      "card.CardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card identifier. Maximum of 10 alphanumeric characters",
            "example": "V000000001"
          },
          "holder": {
            "required": [
              "billingAddress",
              "dateOfBirth",
              "firstName",
              "lastName",
              "mobileNumber"
            ],
            "type": "object",
            "properties": {
              "title": {
                "pattern": "^[0-9a-zA-Z]{1,4}$",
                "type": "string",
                "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                "example": "Mr"
              },
              "firstName": {
                "pattern": "[\\x20-\\x7e]{1,20}",
                "type": "string",
                "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                "example": "Joe"
              },
              "lastName": {
                "pattern": "[\\x20-\\x7e]{1,20}",
                "type": "string",
                "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                "example": "Bloggs"
              },
              "billingAddress": {
                "required": [
                  "addressLine1",
                  "country",
                  "postCode",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "First line of address",
                    "example": "Floor 10"
                  },
                  "addressLine2": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Second line of address",
                    "example": "80 George Street"
                  },
                  "postTown": {
                    "maxLength": 20,
                    "minLength": 1,
                    "type": "string",
                    "description": "Post town",
                    "example": "EDINBURGH"
                  },
                  "postCode": {
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string",
                    "description": "Postcode",
                    "example": "EH2 3BU"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country (ISO 3166 alpha-2 country code)",
                    "example": "GB",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "AX",
                      "AW",
                      "BL",
                      "CW",
                      "GF",
                      "GL",
                      "GP",
                      "ME",
                      "MF",
                      "MQ",
                      "NC",
                      "PF",
                      "PM",
                      "RE",
                      "SX",
                      "TF",
                      "WF",
                      "YT",
                      "AI",
                      "BM",
                      "FK",
                      "GB",
                      "GG",
                      "GI",
                      "GS",
                      "IO",
                      "JE",
                      "KY",
                      "MS",
                      "PN",
                      "SH",
                      "TC",
                      "VG"
                    ]
                  }
                },
                "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
              },
              "dateOfBirth": {
                "type": "string",
                "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                "format": "date",
                "example": "2001-01-01"
              },
              "mobileNumber": {
                "type": "string",
                "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                "example": "+447123456000"
              },
              "email": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Cardholder email",
                "example": "cardholder@example.com"
              }
            },
            "description": "CardHolder"
          },
          "expiry": {
            "type": "string",
            "description": "An ISO 8601 date with year & month components only",
            "example": "2018-12"
          },
          "status": {
            "type": "string",
            "description": "The current state of the card."
          },
          "currency": {
            "type": "string",
            "description": "A 3 letter ISO 4217 code representing the card currency",
            "example": "GBP"
          },
          "limit": {
            "type": "string",
            "description": "Total card authorisation limit",
            "example": "1000.0"
          },
          "maxLimit": {
            "type": "string",
            "description": "Maximum limit which can be set on this card and is the maximum lifetime spend the card can have",
            "example": "4000.0"
          },
          "spend": {
            "type": "string",
            "description": "Current total of all authorisations on this card",
            "example": "250.0"
          },
          "externalRef": {
            "type": "string",
            "description": "Client reference for the newly created card. Maximum of 50 characters.",
            "example": "TTQ_51211"
          },
          "maskedPan": {
            "type": "string",
            "description": "Masked card PAN",
            "example": "527095******3544"
          },
          "cardType": {
            "type": "string",
            "description": "Card product type",
            "example": "Business"
          },
          "cardScheme": {
            "type": "string",
            "description": "Card scheme. MASTERCARD or VISA",
            "example": "MASTERCARD"
          },
          "accountBid": {
            "type": "string",
            "description": "Account identifier",
            "example": "A020N8PD"
          },
          "productId": {
            "type": "string",
            "description": "Product identifier",
            "example": "O210003A"
          },
          "format": {
            "type": "string",
            "description": "The format of the card.  PHYSICAL or VIRTUAL",
            "example": "PHYSICAL",
            "enum": [
              "PHYSICAL",
              "VIRTUAL"
            ]
          },
          "constraints": {
            "required": [
              "mccWhitelist"
            ],
            "type": "object",
            "properties": {
              "mccWhitelist": {
                "type": "array",
                "description": "mccWhitelist",
                "example": [
                  "1000",
                  "1002-3000",
                  "5060"
                ],
                "items": {
                  "type": "string",
                  "description": "mccWhitelist",
                  "example": "[\"1000\",\"1002-3000\",\"5060\"]"
                }
              },
              "authorisation": {
                "type": "object",
                "properties": {
                  "spend": {
                    "type": "array",
                    "description": "Spending constraints",
                    "items": {
                      "required": [
                        "currency"
                      ],
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "description": "A 3 letter ISO 4217 code representing the transaction currency",
                          "example": "GBP",
                          "enum": [
                            "GBP",
                            "EUR",
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BOV",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHE",
                            "CHF",
                            "CHW",
                            "CLF",
                            "CLP",
                            "CNY",
                            "COP",
                            "COU",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "FJD",
                            "FKP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MXV",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SLE",
                            "SLL",
                            "SOS",
                            "SRD",
                            "SSP",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "SHP",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "USN",
                            "UYI",
                            "UYU",
                            "UYW",
                            "UZS",
                            "VES",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XAG",
                            "XAU",
                            "XBA",
                            "XBB",
                            "XBC",
                            "XBD",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPD",
                            "XPF",
                            "XPT",
                            "XSU",
                            "XTS",
                            "XUA",
                            "XXX",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWL"
                          ]
                        },
                        "min": {
                          "type": "number",
                          "description": "Minimum spend amount (inclusive)",
                          "example": 5
                        },
                        "max": {
                          "type": "number",
                          "description": "Maximum spend amount (inclusive)",
                          "example": 2000
                        }
                      },
                      "description": "Spending constraints"
                    }
                  }
                },
                "description": "Authorisation constraints"
              }
            },
            "description": "CardConstraints"
          },
          "design": {
            "required": [
              "cardRef",
              "packagingRef"
            ],
            "type": "object",
            "properties": {
              "cardRef": {
                "type": "string",
                "description": "Design reference for card"
              },
              "packagingRef": {
                "type": "string",
                "description": "Design reference for card packaging"
              }
            },
            "description": "Design references for physical card and packaging"
          },
          "printedName": {
            "type": "string",
            "description": "Name printed on the card. Will only be returned for physical cards. Maximum of 20 alphanumeric characters (including full stop, hyphen, apostrophe, caret and space)"
          },
          "cancellationDate": {
            "type": "string",
            "description": "Date card will be cancelled on",
            "example": "2025-01-01"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "threeDSecureStatus": {
            "type": "string",
            "description": "The 3DS status of the card, based on the SMS one time password",
            "example": "ENROLLED",
            "deprecated": true,
            "enum": [
              "NOT_ENROLLED",
              "ENROLLED",
              "UNENROLLED"
            ]
          },
          "authentication": {
            "type": "object",
            "properties": {
              "otpSmsStatus": {
                "type": "string",
                "description": "The SMS one time password authentication status",
                "example": "ENROLLED",
                "enum": [
                  "NOT_ENROLLED",
                  "ENROLLED",
                  "UNENROLLED"
                ]
              },
              "knowledgeBaseStatus": {
                "type": "string",
                "description": "The knowledge based authentication (KBA) status",
                "example": "ENROLLED",
                "enum": [
                  "NOT_ENROLLED",
                  "ENROLLED",
                  "UNENROLLED"
                ]
              }
            },
            "description": "The 3DS authentication method statuses"
          },
          "shippingAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string",
                "description": "First line of address",
                "example": "Floor 10"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Second line of address",
                "example": "80 George Street"
              },
              "postTown": {
                "maxLength": 20,
                "minLength": 1,
                "type": "string",
                "description": "Post town",
                "example": "EDINBURGH"
              },
              "postCode": {
                "maxLength": 10,
                "minLength": 1,
                "type": "string",
                "description": "Postcode",
                "example": "EH2 3BU"
              },
              "country": {
                "type": "string",
                "description": "Country (ISO 3166 alpha-2 country code)",
                "example": "GB",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "AX",
                  "AW",
                  "BL",
                  "CW",
                  "GF",
                  "GL",
                  "GP",
                  "ME",
                  "MF",
                  "MQ",
                  "NC",
                  "PF",
                  "PM",
                  "RE",
                  "SX",
                  "TF",
                  "WF",
                  "YT",
                  "AI",
                  "BM",
                  "FK",
                  "GB",
                  "GG",
                  "GI",
                  "GS",
                  "IO",
                  "JE",
                  "KY",
                  "MS",
                  "PN",
                  "SH",
                  "TC",
                  "VG"
                ]
              }
            },
            "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
          },
          "customFields": {
            "type": "array",
            "description": "Custom fields currently defined for card",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Custom field key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom field value"
                }
              },
              "description": "Custom fields currently defined for card"
            }
          },
          "authWindow": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "description": "Authorisation window start date",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "description": "Authorisation window end date",
                "format": "date-time"
              }
            },
            "description": "Authorisation window defined for card"
          },
          "channelManagerId": {
            "type": "string",
            "description": "Channel Manager identifier",
            "example": "M883412312"
          }
        }
      },
      "payment.AddressRequest": {
        "required": [
          "addressLine1",
          "postTown"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "postTown": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "postCode": {
            "maxLength": 10,
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "Mandatory for international payments."
          },
          "countrySubDivision": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": "Optional address. Mandatory for international payments."
      },
      "payment.Charge": {
        "required": [
          "amount",
          "bearer",
          "currency"
        ],
        "type": "object",
        "properties": {
          "bearer": {
            "type": "string",
            "description": "Information about bearer of the charges. Its can be Creditor, Debtor or shared between both",
            "example": "CRED",
            "enum": [
              "CRED",
              "DEBT",
              "SHAR"
            ]
          },
          "amount": {
            "type": "number",
            "description": "Amount of the charges. Max allowed is 999999999999.99",
            "example": 100
          },
          "currency": {
            "type": "string",
            "description": "Currency of charge. Should be ISO Standard currency",
            "example": "GBP",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          }
        }
      },
      "card.AuthInfo": {
        "required": [
          "inputMethod",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Transaction type"
          },
          "inputMethod": {
            "type": "string",
            "description": "Input method"
          }
        },
        "description": "Authorisation information of the activity"
      },
      "card.CardPinResponse": {
        "type": "object",
        "properties": {
          "pin": {
            "type": "string",
            "description": "Card PIN",
            "example": "0123"
          }
        }
      },
      "pispgateway.AspsProviderResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier (within Modulr) of the ASPSP",
            "example": "H100000001"
          },
          "name": {
            "type": "string",
            "description": "Name of the ASPSP",
            "example": "Bank of Money"
          },
          "capabilities": {
            "type": "array",
            "description": "Capability list of the ASPSP",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the capability, can be one of SINGLE_IMMEDIATE, STANDING_ORDER",
                  "example": "SINGLE_IMMEDIATE",
                  "enum": [
                    "SINGLE_IMMEDIATE",
                    "STANDING_ORDER",
                    "SWEEPING_VRP"
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "Status of the capability, can be one of ENABLED, DISABLED",
                  "example": "ENABLED",
                  "enum": [
                    "ENABLED",
                    "DISABLED"
                  ]
                }
              },
              "description": "Capability list of the ASPSP"
            }
          }
        }
      },
      "directdebit.DirectDebitPageResponseCollection": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "activityDate",
                "amount",
                "id",
                "mandateId",
                "message",
                "originalActivityDate",
                "payerName",
                "reconciliationDate",
                "reconciliationReference",
                "status",
                "type"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for a direct-debit collection",
                  "example": "K000100100"
                },
                "mandateId": {
                  "type": "string",
                  "description": "Unique id for direct-debit mandate.",
                  "example": "G0000001"
                },
                "collectionScheduleId": {
                  "type": "string",
                  "description": "Unique id for direct-debit collection schedule for which triggered the collection",
                  "example": "Q9200001"
                },
                "activityDate": {
                  "type": "string",
                  "description": "collection or reportRaised date for indemnity???",
                  "example": "2018-01-09"
                },
                "amount": {
                  "type": "number",
                  "description": "Amount of the collection payment",
                  "example": 100
                },
                "type": {
                  "type": "string",
                  "description": "Type of the collection activity.  Can be one of ",
                  "example": "COLLECTION"
                },
                "payerName": {
                  "type": "string",
                  "description": "Name of the payer",
                  "example": "Mr John Doe"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the collection.  Can be one of ",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "description": "Failure description of the payment activity",
                  "example": "Instruction Cancelled"
                },
                "originalActivityDate": {
                  "type": "string",
                  "description": "The original scheduled date for a payment to be collected",
                  "example": "2018-01-09"
                },
                "reconciliationDate": {
                  "type": "string",
                  "description": "The reconciled date for a payment to be collected",
                  "example": "2018-01-09"
                },
                "reconciliationReference": {
                  "type": "string",
                  "description": "The reconciled reference that links to a payment",
                  "example": "2018-01-09"
                },
                "ddiReference": {
                  "type": "string",
                  "description": "collectionReference - if present - is appended to the original DDI reference\n(used during mandate creation - referred to as core reference) for the specified scheduled collection\nwithout altering the original mandate core reference. This will be visible to the payer on their account.\nThe reference and collectionReference combined have 18 character limit and can only contain alphanumeric\ncharacters with underscore, hyphen and space permitted",
                  "example": "ABCD-EFGH"
                }
              },
              "description": "List of responses on the current page"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "paymentfileupload.FileCreateRequest": {
        "type": "object",
        "properties": {
          "useDuplicate": {
            "type": "boolean",
            "description": "User confirms to proceed with creating payments on a duplicate file"
          }
        },
        "description": "File create payments request body"
      },
      "onboarding.CustomerComplianceDataResponse": {
        "type": "object",
        "properties": {
          "typeDescription": {
            "type": "string"
          },
          "riskLevel": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "UNDETERMINED"
            ]
          },
          "vulnerabilityReasons": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "LIFE_EVENTS",
                "HEALTH",
                "RESILIENCE",
                "CAPABILITY",
                "FINANCIAL_DIFFICULTY"
              ]
            }
          }
        },
        "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
      },
      "directdebit.Mandate": {
        "required": [
          "accountId",
          "accountNumber",
          "createdDate",
          "externalReference",
          "id",
          "nextValidCollectionDate",
          "reference",
          "sortCode",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for direct-debit-mandate.",
            "example": "G0000001"
          },
          "accountId": {
            "type": "string",
            "description": "Unique id for account for this mandate.",
            "example": "A0000001"
          },
          "reference": {
            "type": "string",
            "description": "DDI reference that was used during creation."
          },
          "externalReference": {
            "type": "string",
            "description": "External reference that was used during creation (appears on the bank statement)."
          },
          "createdDate": {
            "type": "string",
            "description": "Datetime when direct-debit-mandate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Status of the direct-debit-mandate. mandates must be 'ACTIVE' to make collections. Can be one of ",
            "example": "ACTIVE"
          },
          "nextValidCollectionDate": {
            "type": "string",
            "description": "The earliest date a collection can be created. Format is yyyy-MM-dd.",
            "example": "2018-01-10"
          },
          "Name given on Mandate": {
            "type": "string"
          },
          "Address given on Mandate": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postTown": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postCode": {
                "maxLength": 8,
                "minLength": 0,
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "sortCode": {
            "type": "string",
            "description": "Sort Code of the account for which direct-debit-mandate has been created.",
            "example": "123456"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account Number for which direct-debit-mandate has been created.",
            "example": "87654321"
          },
          "payeeAccountBid": {
            "type": "string",
            "description": "Unique id for individual recipient account used for internal transfers",
            "example": "A0000001"
          },
          "bulkCreateRequestId": {
            "type": "string",
            "description": "Id associate to the bulk create request of this mandate.",
            "example": "R210000005"
          },
          "bulkCancelRequestId": {
            "type": "string",
            "description": "Id associate to the bulk cancel request of this mandate.",
            "example": "R210000006"
          }
        }
      },
      "account.AddressResponse": {
        "required": [
          "addressLine1",
          "country",
          "postCode",
          "postTown"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "postTown": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "countrySubDivision": {
            "type": "string"
          }
        },
        "description": "Address"
      },
      "directdebit.status": {
        "type": "array",
        "description": "Status of the Mandate",
        "items": {
          "type": "string",
          "description": "Status of the Mandate",
          "enum": [
            "PENDING",
            "SUBMITTED",
            "ACTIVE",
            "SUSPENDED",
            "REJECTED",
            "CANCELLED",
            "INVALID_REQUEST"
          ]
        }
      },
      "inboundpayment.InboundPaymentRequest": {
        "required": [
          "accountId",
          "amount",
          "description",
          "payerDetail",
          "type"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The account to be credited"
          },
          "payerDetail": {
            "required": [
              "identifier",
              "name"
            ],
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Party name"
              },
              "identifier": {
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Account identifier type",
                    "enum": [
                      "SCAN",
                      "IBAN",
                      "DD",
                      "INTL",
                      "ANBRN",
                      "AN"
                    ]
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "Account number"
                  },
                  "sortCode": {
                    "type": "string",
                    "description": "Sortcode"
                  },
                  "iban": {
                    "type": "string",
                    "description": "IBAN"
                  },
                  "bic": {
                    "type": "string",
                    "description": "BIC"
                  }
                },
                "description": "Account identifier"
              },
              "address": {
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "postTown": {
                    "type": "string"
                  },
                  "postCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                },
                "description": "Party address"
              }
            },
            "description": "Payee details"
          },
          "payeeDetail": {
            "required": [
              "identifier",
              "name"
            ],
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Party name"
              },
              "identifier": {
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Account identifier type",
                    "enum": [
                      "SCAN",
                      "IBAN",
                      "DD",
                      "INTL",
                      "ANBRN",
                      "AN"
                    ]
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "Account number"
                  },
                  "sortCode": {
                    "type": "string",
                    "description": "Sortcode"
                  },
                  "iban": {
                    "type": "string",
                    "description": "IBAN"
                  },
                  "bic": {
                    "type": "string",
                    "description": "BIC"
                  }
                },
                "description": "Account identifier"
              },
              "address": {
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "postTown": {
                    "type": "string"
                  },
                  "postCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                },
                "description": "Party address"
              }
            },
            "description": "Payee details"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Description of the credit"
          },
          "amount": {
            "maximum": 2147483647,
            "minimum": 0.01,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Amount of the payment in major current Units - '1' = 1.00 GBP"
          },
          "type": {
            "type": "string",
            "description": " Type of credit, values: ",
            "enum": [
              "PI_BACS",
              "PI_DD",
              "PI_FAST",
              "PI_SECT",
              "PI_SEPA_INST",
              "PI_SWIFT"
            ]
          },
          "transactionDate": {
            "type": "string",
            "description": "Date of credit in yyyy-MM-ddTHH:mm:ssZ format"
          },
          "numberOfTransactions": {
            "maximum": 50,
            "minimum": 1,
            "type": "integer",
            "description": "Number of credit transactions to create, defaults to 1",
            "format": "int32"
          },
          "schemeInformation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "unique id that identifies a payment end-to-end within a scheme. If used ensure that its unique"
              }
            },
            "description": "Optional scheme details"
          }
        },
        "description": "Details of credit to the account"
      },
      "account.TransactionPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "amount",
                "credit",
                "currency",
                "id",
                "postedDate",
                "sourceId",
                "transactionDate",
                "type"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for the Transaction",
                  "example": "T0000001"
                },
                "amount": {
                  "type": "number",
                  "description": "Amount of the transaction in Major Currency Units"
                },
                "currency": {
                  "type": "string",
                  "description": "Currency of the account in ISO 4217 format",
                  "example": "GBP"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the transaction. Contains Payer/ Payee details and reference"
                },
                "transactionDate": {
                  "type": "string",
                  "description": "Datetime when the transaction took place. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "format": "date-time"
                },
                "postedDate": {
                  "type": "string",
                  "description": "Datetime when the transaction was posted to the Modulr system. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "format": "date-time"
                },
                "credit": {
                  "type": "boolean",
                  "description": "Indicates if the transaction was a Credit or a Debit"
                },
                "type": {
                  "type": "string",
                  "description": "Enumerated type indicating the type of the transaction"
                },
                "sourceId": {
                  "type": "string"
                },
                "sourceExternalReference": {
                  "type": "string"
                },
                "additionalInfo": {
                  "type": "object",
                  "description": "any extra information available on transaction."
                },
                "account": {
                  "required": [
                    "availableBalance",
                    "balance",
                    "createdDate",
                    "currency",
                    "customerId",
                    "id",
                    "identifiers",
                    "name",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id for the account",
                      "example": "A0000001"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name for the account"
                    },
                    "balance": {
                      "type": "string",
                      "description": "Balance of the account in format 'NN.NN'",
                      "example": "10000.0"
                    },
                    "availableBalance": {
                      "type": "string",
                      "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
                      "example": "10000.0"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency of the account in ISO 4217 format",
                      "example": "GBP"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
                      "example": "ACTIVE"
                    },
                    "identifiers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string",
                            "description": "Bank account Sort Code",
                            "example": "12345678"
                          },
                          "accountType": {
                            "type": "string",
                            "description": "Bank account type like PERSONAL/BUSINESS",
                            "enum": [
                              "PERSONAL",
                              "BUSINESS"
                            ]
                          },
                          "sortCode": {
                            "type": "string",
                            "description": "Bank account Sort Code",
                            "example": "000000"
                          },
                          "iban": {
                            "type": "string",
                            "example": "GB20MODR04001401100000"
                          },
                          "bic": {
                            "type": "string",
                            "example": "MODRGB21"
                          },
                          "currency": {
                            "type": "string",
                            "example": "GBP"
                          },
                          "countrySpecificDetails": {
                            "type": "object",
                            "properties": {
                              "bankName": {
                                "type": "string",
                                "description": "The name of the destination bank.",
                                "example": "Apple Bank"
                              },
                              "bankAddress": {
                                "type": "string",
                                "description": "The address of the destination bank.",
                                "example": "2100 Broadway"
                              },
                              "bankCity": {
                                "type": "string",
                                "description": "The city in which the destination bank resides.",
                                "example": "New York City"
                              },
                              "bankBranchName": {
                                "type": "string",
                                "description": "The name of the destination bank's branch.",
                                "example": "New York"
                              },
                              "bankBranchCode": {
                                "type": "string",
                                "description": "The code of the destination bank's branch.",
                                "example": "44-04"
                              },
                              "bankCode": {
                                "type": "string",
                                "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                              },
                              "chineseId": {
                                "type": "string",
                                "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                                "example": "01101201901018889"
                              },
                              "province": {
                                "type": "string",
                                "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                                "example": "Zhejiang"
                              },
                              "business": {
                                "type": "boolean",
                                "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                                "example": true
                              },
                              "bankCodeType": {
                                "type": "string",
                                "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                                "example": "ABA",
                                "enum": [
                                  "ABA",
                                  "CHIPS"
                                ]
                              },
                              "bankCountry": {
                                "type": "string",
                                "description": "The country in which the destination bank resides.",
                                "example": "US",
                                "enum": [
                                  "AT",
                                  "BE",
                                  "BG",
                                  "CY",
                                  "CZ",
                                  "DK",
                                  "EE",
                                  "FI",
                                  "FR",
                                  "DE",
                                  "GR",
                                  "HR",
                                  "HU",
                                  "IS",
                                  "IE",
                                  "IT",
                                  "LV",
                                  "LI",
                                  "LT",
                                  "LU",
                                  "MT",
                                  "NL",
                                  "NO",
                                  "PL",
                                  "PT",
                                  "RO",
                                  "SK",
                                  "SI",
                                  "ES",
                                  "SE",
                                  "GB",
                                  "MQ",
                                  "YT",
                                  "GP",
                                  "GF",
                                  "RE",
                                  "MF",
                                  "GI",
                                  "GG",
                                  "IM",
                                  "JE",
                                  "MC",
                                  "CH",
                                  "AD",
                                  "SM",
                                  "VA",
                                  "AX",
                                  "PM",
                                  "BL",
                                  "AF",
                                  "AL",
                                  "DZ",
                                  "AS",
                                  "AO",
                                  "AI",
                                  "AQ",
                                  "AG",
                                  "AR",
                                  "AM",
                                  "AW",
                                  "AU",
                                  "AZ",
                                  "BS",
                                  "BH",
                                  "BD",
                                  "BB",
                                  "BY",
                                  "BZ",
                                  "BJ",
                                  "BM",
                                  "BT",
                                  "BO",
                                  "BQ",
                                  "BA",
                                  "BW",
                                  "BV",
                                  "BR",
                                  "IO",
                                  "VG",
                                  "BN",
                                  "BF",
                                  "BI",
                                  "KH",
                                  "CM",
                                  "CA",
                                  "CV",
                                  "KY",
                                  "CF",
                                  "TD",
                                  "CL",
                                  "CN",
                                  "CX",
                                  "CC",
                                  "CO",
                                  "KM",
                                  "CK",
                                  "CR",
                                  "CU",
                                  "CW",
                                  "CD",
                                  "DJ",
                                  "DM",
                                  "DO",
                                  "TL",
                                  "EC",
                                  "EG",
                                  "SV",
                                  "GQ",
                                  "ER",
                                  "SZ",
                                  "ET",
                                  "FK",
                                  "FO",
                                  "FJ",
                                  "PF",
                                  "TF",
                                  "GA",
                                  "GM",
                                  "GE",
                                  "GH",
                                  "GL",
                                  "GD",
                                  "GU",
                                  "GT",
                                  "GN",
                                  "GW",
                                  "GY",
                                  "HT",
                                  "HM",
                                  "HN",
                                  "HK",
                                  "IN",
                                  "ID",
                                  "IR",
                                  "IQ",
                                  "IL",
                                  "CI",
                                  "JM",
                                  "JP",
                                  "JO",
                                  "KZ",
                                  "KE",
                                  "KI",
                                  "XK",
                                  "KW",
                                  "KG",
                                  "LA",
                                  "LB",
                                  "LS",
                                  "LR",
                                  "LY",
                                  "MO",
                                  "MG",
                                  "MW",
                                  "MY",
                                  "MV",
                                  "ML",
                                  "MH",
                                  "MR",
                                  "MU",
                                  "MX",
                                  "FM",
                                  "MD",
                                  "MN",
                                  "ME",
                                  "MS",
                                  "MA",
                                  "MZ",
                                  "MM",
                                  "NA",
                                  "NR",
                                  "NP",
                                  "AN",
                                  "NC",
                                  "NZ",
                                  "NI",
                                  "NE",
                                  "NG",
                                  "NU",
                                  "NF",
                                  "KP",
                                  "MK",
                                  "MP",
                                  "OM",
                                  "PK",
                                  "PW",
                                  "PS",
                                  "PA",
                                  "PG",
                                  "PY",
                                  "PE",
                                  "PH",
                                  "PN",
                                  "PR",
                                  "QA",
                                  "CG",
                                  "RU",
                                  "RW",
                                  "SH",
                                  "KN",
                                  "LC",
                                  "VC",
                                  "WS",
                                  "ST",
                                  "SA",
                                  "SN",
                                  "RS",
                                  "SC",
                                  "SL",
                                  "SG",
                                  "SX",
                                  "SB",
                                  "SO",
                                  "ZA",
                                  "KR",
                                  "GS",
                                  "SS",
                                  "LK",
                                  "SD",
                                  "SR",
                                  "SY",
                                  "SJ",
                                  "TW",
                                  "TJ",
                                  "TZ",
                                  "TH",
                                  "TG",
                                  "TK",
                                  "TO",
                                  "TT",
                                  "TN",
                                  "TR",
                                  "TM",
                                  "TC",
                                  "TV",
                                  "UG",
                                  "UA",
                                  "AE",
                                  "UM",
                                  "US",
                                  "UY",
                                  "UZ",
                                  "VU",
                                  "VE",
                                  "VN",
                                  "VI",
                                  "WF",
                                  "EH",
                                  "YE",
                                  "ZM",
                                  "ZW"
                                ]
                              },
                              "abaRoutingNumber": {
                                "type": "string",
                                "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                                "example": "123456789"
                              }
                            },
                            "example": {
                              "branchCode": "123456789"
                            }
                          }
                        },
                        "description": "Account Identifier"
                      }
                    },
                    "customerId": {
                      "type": "string",
                      "description": "Unique id of the Customer",
                      "example": "C0000001"
                    },
                    "customerName": {
                      "type": "string",
                      "description": "Customer Name"
                    },
                    "externalReference": {
                      "type": "string",
                      "description": "Your reference for an account",
                      "example": "aReference_00001"
                    },
                    "accessGroups": {
                      "type": "array",
                      "description": "Ids of Access Groups this account belongs to",
                      "items": {
                        "type": "string",
                        "description": "Ids of Access Groups this account belongs to"
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                      "format": "date-time"
                    },
                    "directDebit": {
                      "type": "boolean",
                      "description": "Direct Debit Enabled"
                    },
                    "securedFundingLimit": {
                      "type": "string",
                      "description": "Limit of funds available below a balance of zero"
                    }
                  },
                  "description": "Account"
                }
              },
              "description": "Transaction"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          },
          "pageStartBalance": {
            "type": "number",
            "description": "The sum of the transactions up to this page.\nThis is only present if there are no filters other than page and size defined",
            "example": 250.3
          }
        }
      },
      "account.StringSearchCriteria": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "WORD_MATCH - using word boundaries,\nWORD_MATCH_ALPHANUMERIC - using word boundaries, but replaces non-alphanumeric characters in the search with a word boundary match,\nPREFIX - same case prefix,\nSUFFIX - same case suffix,\nCONTAINS - same case contains\nEXACT - same case exact\n",
            "enum": [
              "WORD_MATCH",
              "WORD_MATCH_ALPHANUMERIC",
              "PREFIX",
              "SUFFIX",
              "CONTAINS",
              "EXACT"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "directdebit.BulkCancelMandateRequest": {
        "required": [
          "accountId",
          "mandateIds",
          "migrationType"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The unique identifier for the account for which the mandates are to be cancelled."
          },
          "migrationType": {
            "type": "string",
            "description": "The type of migration process that is being initiated.",
            "enum": [
              "SCHEDULE_AUDDIS_MIGRATION",
              "TRANSFER_OF_SUN"
            ]
          },
          "auddisCancellationDate": {
            "type": "string",
            "description": "The date for the AUDDIS (Automated Direct Debit Instruction Service) cancellation.",
            "format": "date"
          },
          "mandateIds": {
            "type": "array",
            "description": "List of mandate ids to be cancelled.",
            "items": {
              "type": "string",
              "description": "List of mandate ids to be cancelled."
            }
          }
        },
        "description": "List of the Direct Debit mandates to cancel"
      },
      "card.OneTimeTokenResponse": {
        "required": [
          "encrypted",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The token to use by the client for retrieving card details. Where 'encrypted' is true, this will be a value that must be decrypted on the client device before being used in subsequent API calls",
            "example": "eyJ0....zRyk"
          },
          "encrypted": {
            "type": "boolean",
            "description": "Whether this token is encrypted"
          },
          "encryptedSymmetricKey": {
            "type": "string",
            "description": "Base64 UTF-8 encoded Symmetric key used to encrypt token, encrypted with client's public key. Only provided if 'encrypted' is true."
          },
          "initialisationVector": {
            "type": "string",
            "description": "Base64 UTF-8 encoded initialisation vector used with symmetric key for encrypting the token. Only provided if 'encrypted' is true."
          }
        }
      },
      "card.UpdateCardReportNotificationRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status"
          }
        },
        "description": "Notification request containing the status of the notification"
      },
      "card.CardKnowledgeBasedAuthentication": {
        "required": [
          "answer",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "3DS knowledge-based authentication answer type",
            "enum": [
              "FIRST_PET_NAME",
              "MATERNAL_GRANDMOTHER_MAIDEN_NAME",
              "FAVOURITE_CHILDHOOD_FRIEND",
              "FIRST_CAR",
              "CITY_PARENTS_MET"
            ]
          },
          "answer": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string",
            "description": "3DS knowledge-based authentication answer"
          }
        },
        "description": "3DS Knowledge-Based Authentication (KBA) answers"
      },
      "pispgateway.CreateStandingOrderInitiationRequest": {
        "required": [
          "aspspId",
          "context",
          "payment",
          "schedule"
        ],
        "type": "object",
        "properties": {
          "aspspId": {
            "type": "string",
            "description": "Identifier for ASPSP being used for the standing order",
            "example": "H100000001"
          },
          "payment": {
            "required": [
              "amount",
              "destination",
              "reference"
            ],
            "type": "object",
            "properties": {
              "destination": {
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                    "enum": [
                      "ACCOUNT",
                      "SCAN",
                      "ACCOUNT",
                      "SCAN"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "Identifier of the destination account if using ACCOUNT type",
                    "example": "A1100001"
                  },
                  "accountNumber": {
                    "pattern": "^[0-9]{8}$",
                    "type": "string",
                    "description": "Account Number of destination account if using SCAN type",
                    "example": "12345678"
                  },
                  "sortCode": {
                    "pattern": "^[0-9]{6}$",
                    "type": "string",
                    "description": "Sort Code of destination account if using SCAN type",
                    "example": "000000"
                  },
                  "name": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "Name of destination account if using SCAN type (this may be truncated)",
                    "example": "Test"
                  }
                },
                "description": "The destination account for the payment"
              },
              "amount": {
                "required": [
                  "currency",
                  "recurringAmount"
                ],
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Currency of the account in ISO 4217 format. Default is GBP",
                    "enum": [
                      "GBP"
                    ]
                  },
                  "recurringAmount": {
                    "maximum": 2147483647,
                    "minimum": 0.01,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Recurring amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                    "example": 100
                  }
                },
                "description": "The amount of the standing order"
              },
              "reference": {
                "type": "string",
                "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
                "example": "Invoice ABC123"
              }
            },
            "description": "The payment of the standing order"
          },
          "schedule": {
            "required": [
              "frequency",
              "initialDate"
            ],
            "type": "object",
            "properties": {
              "frequency": {
                "type": "string",
                "description": "Type of the capability, can be one of WEEKLY, MONTHLY",
                "enum": [
                  "WEEKLY",
                  "MONTHLY"
                ]
              },
              "initialDate": {
                "type": "string",
                "description": "The date on which the standing order should begin. This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                "example": "2021-03-25"
              },
              "finalDate": {
                "type": "string",
                "description": "The optional date on which the standing order should end. If unspecified, the standing order will continue until cancelled.This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                "example": "2021-03-25"
              }
            },
            "description": "The schedule of the standing order"
          },
          "context": {
            "required": [
              "merchant"
            ],
            "type": "object",
            "properties": {
              "paymentContextCode": {
                "type": "string",
                "description": "Indicates type of Payment Context, can be one of BILLPAYMENT, ECOMMERCEGOODS, ECOMMERCESERVICES, OTHER, PARTYTOPARTY. If no value or paymentContext is provided, PARTYTOPARTY is considered the default value.",
                "enum": [
                  "BILLPAYMENT",
                  "ECOMMERCEGOODS",
                  "ECOMMERCESERVICES",
                  "OTHER",
                  "PARTYTOPARTY",
                  "BILLPAYMENT",
                  "ECOMMERCEGOODS",
                  "ECOMMERCESERVICES",
                  "OTHER",
                  "PARTYTOPARTY"
                ]
              },
              "deliveryAddress": {
                "required": [
                  "addressLine1",
                  "country",
                  "postCode",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "First line of the address"
                  },
                  "addressLine2": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "Second line of the address"
                  },
                  "postTown": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "The post town"
                  },
                  "postCode": {
                    "maxLength": 16,
                    "minLength": 0,
                    "type": "string",
                    "description": "The postcode"
                  },
                  "country": {
                    "type": "string",
                    "description": "The country"
                  }
                },
                "description": "Information that locates and identifies a specific address, as defined by postal services or in free format text, must be specified if paymentContextCode is ECOMMERCEGOODS"
              },
              "merchant": {
                "type": "object",
                "properties": {
                  "categoryCode": {
                    "maxLength": 4,
                    "minLength": 3,
                    "type": "string",
                    "description": "Merchant category code conform to ISO 18245, related to the type of services or goods provided for the transaction. Must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
                  },
                  "customerId": {
                    "maxLength": 70,
                    "minLength": 1,
                    "type": "string",
                    "description": "Merchant customer identification, must be specified if paymentContextCode is either ECOMMERCEGOODS or ECOMMERCESERVICES"
                  }
                },
                "description": "Merchant details for the payment context"
              }
            },
            "description": "Payment context for the initiation request"
          }
        },
        "description": "Request object to Initiate Standing Order"
      },
      "payment.BirthDetails": {
        "type": "object",
        "properties": {
          "dateOfBirth": {
            "pattern": "^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$",
            "type": "string",
            "description": "Date of birth in ISO 8601 format of the ultimate payer",
            "example": "1978-01-01"
          },
          "cityOfBirth": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "City of birth of the ultimate payer",
            "example": "Edinburgh"
          },
          "countryOfBirth": {
            "type": "string",
            "description": "ISO 3166 country code of the ultimate payers country of birth",
            "example": "GB"
          }
        },
        "description": "Birth details of a person. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
      },
      "card.CardHolder": {
        "required": [
          "billingAddress",
          "dateOfBirth",
          "firstName",
          "lastName",
          "mobileNumber"
        ],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "^[0-9a-zA-Z]{1,4}$",
            "type": "string",
            "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
            "example": "Mr"
          },
          "firstName": {
            "pattern": "[\\x20-\\x7e]{1,20}",
            "type": "string",
            "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
            "example": "Joe"
          },
          "lastName": {
            "pattern": "[\\x20-\\x7e]{1,20}",
            "type": "string",
            "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
            "example": "Bloggs"
          },
          "billingAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string",
                "description": "First line of address",
                "example": "Floor 10"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Second line of address",
                "example": "80 George Street"
              },
              "postTown": {
                "maxLength": 20,
                "minLength": 1,
                "type": "string",
                "description": "Post town",
                "example": "EDINBURGH"
              },
              "postCode": {
                "maxLength": 10,
                "minLength": 1,
                "type": "string",
                "description": "Postcode",
                "example": "EH2 3BU"
              },
              "country": {
                "type": "string",
                "description": "Country (ISO 3166 alpha-2 country code)",
                "example": "GB",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "AX",
                  "AW",
                  "BL",
                  "CW",
                  "GF",
                  "GL",
                  "GP",
                  "ME",
                  "MF",
                  "MQ",
                  "NC",
                  "PF",
                  "PM",
                  "RE",
                  "SX",
                  "TF",
                  "WF",
                  "YT",
                  "AI",
                  "BM",
                  "FK",
                  "GB",
                  "GG",
                  "GI",
                  "GS",
                  "IO",
                  "JE",
                  "KY",
                  "MS",
                  "PN",
                  "SH",
                  "TC",
                  "VG"
                ]
              }
            },
            "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
            "format": "date",
            "example": "2001-01-01"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
            "example": "+447123456000"
          },
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Cardholder email",
            "example": "cardholder@example.com"
          }
        },
        "description": "CardHolder"
      },
      "card.CardThreeDSecureAuthentication": {
        "type": "object",
        "properties": {
          "otpSmsStatus": {
            "type": "string",
            "description": "The SMS one time password authentication status",
            "example": "ENROLLED",
            "enum": [
              "NOT_ENROLLED",
              "ENROLLED",
              "UNENROLLED"
            ]
          },
          "knowledgeBaseStatus": {
            "type": "string",
            "description": "The knowledge based authentication (KBA) status",
            "example": "ENROLLED",
            "enum": [
              "NOT_ENROLLED",
              "ENROLLED",
              "UNENROLLED"
            ]
          }
        },
        "description": "The 3DS authentication method statuses"
      },
      "onboarding.AdditionalAssociateIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of additional personal identifier",
            "enum": [
              "BSN"
            ]
          },
          "value": {
            "type": "string",
            "description": "Personal identifier value"
          }
        },
        "description": "Additional identifiers"
      },
      "card.CreateCardRequest": {
        "required": [
          "authentication",
          "expiry",
          "externalRef",
          "holder",
          "limit",
          "productCode"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "minimum": 1,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Total card authorisation limit.",
            "format": "double",
            "example": 1000
          },
          "expiry": {
            "type": "string",
            "description": "ISO 8601 date with year & month components only. The supplied value must be in the future (cannot be the current month) and is _inclusive_ of the specified month.",
            "example": "2018-12"
          },
          "productCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the _type_ of card to create (GBP consumer, GBP business, etc). Modulr will supply a list of possible values."
          },
          "externalRef": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "[\\w -]*",
            "type": "string",
            "description": "Client reference for the newly created card. Maximum of 50 alphanumeric characters (including underscore, hyphen and space)."
          },
          "constraints": {
            "type": "object",
            "properties": {
              "authorisation": {
                "type": "object",
                "properties": {
                  "spend": {
                    "type": "array",
                    "description": "Spending constraints",
                    "items": {
                      "required": [
                        "currency"
                      ],
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "description": "A 3 letter ISO 4217 code representing the transaction currency",
                          "example": "GBP",
                          "enum": [
                            "GBP",
                            "EUR",
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BOV",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHE",
                            "CHF",
                            "CHW",
                            "CLF",
                            "CLP",
                            "CNY",
                            "COP",
                            "COU",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "FJD",
                            "FKP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MXV",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SLE",
                            "SLL",
                            "SOS",
                            "SRD",
                            "SSP",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "SHP",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "USN",
                            "UYI",
                            "UYU",
                            "UYW",
                            "UZS",
                            "VES",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XAG",
                            "XAU",
                            "XBA",
                            "XBB",
                            "XBC",
                            "XBD",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPD",
                            "XPF",
                            "XPT",
                            "XSU",
                            "XTS",
                            "XUA",
                            "XXX",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWL"
                          ]
                        },
                        "min": {
                          "type": "number",
                          "description": "Minimum spend amount (inclusive)",
                          "example": 5
                        },
                        "max": {
                          "type": "number",
                          "description": "Maximum spend amount (inclusive)",
                          "example": 2000
                        }
                      },
                      "description": "Spending constraints"
                    }
                  }
                },
                "description": "Authorisation constraints"
              }
            },
            "description": "Constraints"
          },
          "authentication": {
            "required": [
              "knowledgeBase"
            ],
            "type": "object",
            "properties": {
              "knowledgeBase": {
                "type": "array",
                "description": "3DS knowledge-based authentication (KBA) answers",
                "items": {
                  "required": [
                    "answer",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "3DS knowledge-based authentication answer type",
                      "enum": [
                        "FIRST_PET_NAME",
                        "MATERNAL_GRANDMOTHER_MAIDEN_NAME",
                        "FAVOURITE_CHILDHOOD_FRIEND",
                        "FIRST_CAR",
                        "CITY_PARENTS_MET"
                      ]
                    },
                    "answer": {
                      "maxLength": 45,
                      "minLength": 1,
                      "type": "string",
                      "description": "3DS knowledge-based authentication answer"
                    }
                  },
                  "description": "3DS Knowledge-Based Authentication (KBA) answers"
                }
              }
            },
            "description": "Authentication. Required by default, optional for Virtual Business Travel Cards only"
          },
          "cancellationDate": {
            "type": "string",
            "description": "Date for card to be cancelled on",
            "example": "2025-01-01"
          },
          "customFields": {
            "maxItems": 20,
            "minItems": 0,
            "type": "array",
            "description": "Custom fields of card",
            "items": {
              "required": [
                "key",
                "value"
              ],
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Custom field key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom field value"
                }
              },
              "description": "Custom fields"
            }
          },
          "authorisationWindow": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "example": "2025-01-01"
              },
              "endDate": {
                "type": "string",
                "example": "2025-01-01"
              }
            },
            "description": "Authorisation Windows allow the card holder to add a period of time where the card can ONLY be used, if an Authorisation Window set then transactions outside this window will decline. ISO 8601 date with year, month & day components only."
          },
          "holder": {
            "required": [
              "billingAddress",
              "dateOfBirth",
              "firstName",
              "lastName",
              "mobileNumber"
            ],
            "type": "object",
            "properties": {
              "title": {
                "pattern": "^[0-9a-zA-Z]{1,4}$",
                "type": "string",
                "description": "Cardholder title is optional for all card types. Maximum of 4 alphanumeric characters.",
                "example": "Mr"
              },
              "firstName": {
                "pattern": "[\\x20-\\x7e]{1,20}",
                "type": "string",
                "description": "Cardholder first name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                "example": "Joe"
              },
              "lastName": {
                "pattern": "[\\x20-\\x7e]{1,20}",
                "type": "string",
                "description": "Cardholder last name. Maximum of 20 alphanumeric characters including space, hyphen and apostrophe. Optional for individual customers whose partner has verification type EXTERNAL and for Virtual Business customers.",
                "example": "Bloggs"
              },
              "billingAddress": {
                "required": [
                  "addressLine1",
                  "country",
                  "postCode",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "First line of address",
                    "example": "Floor 10"
                  },
                  "addressLine2": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Second line of address",
                    "example": "80 George Street"
                  },
                  "postTown": {
                    "maxLength": 20,
                    "minLength": 1,
                    "type": "string",
                    "description": "Post town",
                    "example": "EDINBURGH"
                  },
                  "postCode": {
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string",
                    "description": "Postcode",
                    "example": "EH2 3BU"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country (ISO 3166 alpha-2 country code)",
                    "example": "GB",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "AX",
                      "AW",
                      "BL",
                      "CW",
                      "GF",
                      "GL",
                      "GP",
                      "ME",
                      "MF",
                      "MQ",
                      "NC",
                      "PF",
                      "PM",
                      "RE",
                      "SX",
                      "TF",
                      "WF",
                      "YT",
                      "AI",
                      "BM",
                      "FK",
                      "GB",
                      "GG",
                      "GI",
                      "GS",
                      "IO",
                      "JE",
                      "KY",
                      "MS",
                      "PN",
                      "SH",
                      "TC",
                      "VG"
                    ]
                  }
                },
                "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
              },
              "dateOfBirth": {
                "type": "string",
                "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Optional for individual customers.",
                "format": "date",
                "example": "2001-01-01"
              },
              "mobileNumber": {
                "type": "string",
                "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                "example": "+447123456000"
              },
              "email": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Cardholder email",
                "example": "cardholder@example.com"
              }
            },
            "description": "CardHolder"
          }
        },
        "description": "Card"
      },
      "inboundpayment.Address": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "postTown": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "description": "Party address"
      },
      "onboarding.ConsumerDuty": {
        "type": "object",
        "properties": {
          "scope": {
            "type": "string",
            "enum": [
              "IN_SCOPE",
              "NOT_IN_SCOPE"
            ]
          },
          "numberOfEmployees": {
            "type": "integer",
            "format": "int32"
          },
          "netAssets": {
            "type": "number"
          },
          "turnover": {
            "type": "number"
          }
        },
        "description": "Consumer Duty data of the customer"
      },
      "directdebit.BulkCreateResponse": {
        "required": [
          "accountId",
          "auddisSubmissionDate",
          "id",
          "migrationType",
          "status",
          "totalMandatesRequested"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for this bulk request.",
            "example": "R210000001"
          },
          "accountId": {
            "type": "string",
            "description": "Unique id for account for this bulk request.",
            "example": "A0000001"
          },
          "status": {
            "type": "string",
            "description": "Status for this bulk request."
          },
          "migrationType": {
            "type": "string",
            "description": "Migration type for this bulk request.",
            "enum": [
              "SCHEDULE_AUDDIS_MIGRATION",
              "TRANSFER_OF_SUN"
            ]
          },
          "totalMandatesRequested": {
            "type": "integer",
            "description": "Total mandates requested for this bulk request.",
            "format": "int64"
          },
          "auddisSubmissionDate": {
            "type": "string",
            "description": "auddis submission date for this bulk request.",
            "format": "date"
          }
        }
      },
      "card.AuthorisationWindowRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "example": "2025-01-01"
          },
          "endDate": {
            "type": "string",
            "example": "2025-01-01"
          }
        },
        "description": "Authorisation Windows allow the card holder to add a period of time where the card can ONLY be used, if an Authorisation Window set then transactions outside this window will decline. ISO 8601 date with year, month & day components only."
      },
      "account.CreateAccountIdentifier": {
        "required": [
          "accountNumber",
          "sortCode",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "SCAN"
            ]
          },
          "sortCode": {
            "pattern": "^\\d{6}$",
            "type": "string"
          },
          "accountNumber": {
            "pattern": "^\\d{8}$",
            "type": "string"
          }
        },
        "description": "The identifier to assign to the account. Only available to selected partners."
      },
      "directdebit.ReconciliationPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "type": "object",
              "properties": {
                "reconciliationId": {
                  "type": "string"
                },
                "accountId": {
                  "type": "string"
                },
                "collectionDate": {
                  "type": "string",
                  "format": "date"
                },
                "amount": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "notifiedDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "schemeDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "description": "List of responses on the current page"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "card.ReportPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "reportSubjectId": {
                  "type": "string"
                },
                "reportDate": {
                  "type": "string",
                  "format": "date"
                },
                "reportType": {
                  "type": "string",
                  "enum": [
                    "DAILY_CARD_ACTIVITY",
                    "MONTHLY_CARD_ACTIVITY",
                    "DAILY_ACCOUNT_FUNDING",
                    "MONTHLY_ACCOUNT_FUNDING",
                    "DAILY_AUTH_WINDOW",
                    "DAILY_CARD_MANAGEMENT"
                  ]
                }
              },
              "description": "List of responses on the current page"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "confirmationofpayee.JsonOutboundCopErrorResponse": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          }
        },
        "description": "Account Name Check Error Response"
      },
      "pispgateway.VrpPaymentDetailsResponse": {
        "required": [
          "consentId",
          "payment",
          "status"
        ],
        "type": "object",
        "properties": {
          "consentId": {
            "type": "string",
            "description": "The unique identifier of the VRP consent initiation request at Modulr.",
            "example": "E210000004"
          },
          "payment": {
            "required": [
              "currency",
              "reference"
            ],
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency of the payment amount. Must be specified in ISO 4217 format."
              },
              "amount": {
                "type": "number",
                "description": "Payment amount",
                "example": 100
              },
              "reference": {
                "type": "string",
                "description": "A reference used to unambiguously refer to the payment transaction. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space."
              }
            },
            "description": "Payment details for the VRP payment initiation request."
          },
          "status": {
            "type": "string",
            "description": "The current status of vrp payment. Must be one of âSUBMITTEDâ,âACCEPTEDCREDITSETTLEMENTCOMPLETEDâ,âACCEPTEDWITHOUTPOSTINGâ,âACCEPTEDSETTLEMENTCOMPLETEDâ,âACCEPTEDSETTLEMENTINPROCESSâ,âPENDINGâ,âREJECTEDâ,âER_GENERALâ,âER_EXTSYSâ"
          }
        }
      },
      "payment.PaymentOutRequest": {
        "required": [
          "sourceAccountId"
        ],
        "type": "object",
        "properties": {
          "sourceAccountId": {
            "type": "string",
            "description": "Identifier for the sending Account."
          },
          "destination": {
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates the type of destination. IBAN type is required for international payments.",
                "example": "SCAN",
                "enum": [
                  "BENEFICIARY",
                  "ACCOUNT",
                  "IBAN",
                  "SCAN",
                  "INTL",
                  "ANBRN",
                  "AN"
                ]
              },
              "id": {
                "type": "string",
                "description": "Identifier for the Payment destination if using ACCOUNT or BENEFICIARY type. Can be either: a) Beneficiary id for an external Payment, b) Account id for a transfer to another Account"
              },
              "iban": {
                "pattern": "^[a-zA-Z]{2}[0-9]{2}([a-zA-Z0-9]){11,30}$",
                "type": "string",
                "description": "International Bank Account Number (IBAN). To be used as the destination identifier when sending âIBANâ type payments",
                "example": "GB20MODR00000000000001"
              },
              "accountNumber": {
                "type": "string",
                "description": "Account Number of destination account if using SCAN type.",
                "example": "12345678"
              },
              "sortCode": {
                "pattern": "^[0-9]{6}$",
                "type": "string",
                "description": "Sort Code of destination account if using SCAN type.",
                "example": "000000"
              },
              "name": {
                "maxLength": 100,
                "minLength": 0,
                "type": "string",
                "description": "Name to use if a new beneficiary is created, and for using as the payee name if SCAN or IBAN types are specified for the destination",
                "example": "Test"
              },
              "address": {
                "required": [
                  "addressLine1",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  },
                  "addressLine2": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  },
                  "postTown": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  },
                  "postCode": {
                    "maxLength": 10,
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "description": "Mandatory for international payments."
                  },
                  "countrySubDivision": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string"
                  }
                },
                "description": "Optional address. Mandatory for international payments."
              },
              "birthdate": {
                "type": "string",
                "description": "The destination beneficiary's date of birth. Format: yyyy-MM-dd",
                "format": "date",
                "example": "2000-01-01"
              },
              "emailAddress": {
                "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
                "type": "string",
                "description": "The destination beneficiary's email address"
              },
              "phoneNumber": {
                "type": "string",
                "description": "The destination beneficiary's phone number"
              },
              "bic": {
                "type": "string",
                "description": "The destination beneficiary's SWIFT BIC (Bank Identifier Code). Only to be used for international payments."
              },
              "countrySpecificDetails": {
                "type": "object",
                "properties": {
                  "bankName": {
                    "type": "string",
                    "description": "The name of the destination bank.",
                    "example": "Apple Bank"
                  },
                  "bankAddress": {
                    "type": "string",
                    "description": "The address of the destination bank.",
                    "example": "2100 Broadway"
                  },
                  "bankCity": {
                    "type": "string",
                    "description": "The city in which the destination bank resides.",
                    "example": "New York City"
                  },
                  "bankBranchName": {
                    "type": "string",
                    "description": "The name of the destination bank's branch.",
                    "example": "New York"
                  },
                  "bankBranchCode": {
                    "type": "string",
                    "description": "The code of the destination bank's branch.",
                    "example": "44-04"
                  },
                  "bankCode": {
                    "type": "string",
                    "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                  },
                  "chineseId": {
                    "type": "string",
                    "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                    "example": "01101201901018889"
                  },
                  "province": {
                    "type": "string",
                    "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                    "example": "Zhejiang"
                  },
                  "abaRoutingNumber": {
                    "pattern": "^\\d{9}$",
                    "type": "string",
                    "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                    "example": "123456789"
                  },
                  "business": {
                    "type": "boolean",
                    "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                    "example": true
                  },
                  "bankCodeType": {
                    "type": "string",
                    "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                    "example": "ABA",
                    "enum": [
                      "ABA",
                      "CHIPS"
                    ]
                  },
                  "bankCountry": {
                    "type": "string",
                    "description": "The country in which the destination bank resides. Mandatory for international payments.",
                    "example": "US",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "GB",
                      "MQ",
                      "YT",
                      "GP",
                      "GF",
                      "RE",
                      "MF",
                      "GI",
                      "GG",
                      "IM",
                      "JE",
                      "MC",
                      "CH",
                      "AD",
                      "SM",
                      "VA",
                      "AX",
                      "PM",
                      "BL",
                      "AF",
                      "AL",
                      "DZ",
                      "AS",
                      "AO",
                      "AI",
                      "AQ",
                      "AG",
                      "AR",
                      "AM",
                      "AW",
                      "AU",
                      "AZ",
                      "BS",
                      "BH",
                      "BD",
                      "BB",
                      "BY",
                      "BZ",
                      "BJ",
                      "BM",
                      "BT",
                      "BO",
                      "BQ",
                      "BA",
                      "BW",
                      "BV",
                      "BR",
                      "IO",
                      "VG",
                      "BN",
                      "BF",
                      "BI",
                      "KH",
                      "CM",
                      "CA",
                      "CV",
                      "KY",
                      "CF",
                      "TD",
                      "CL",
                      "CN",
                      "CX",
                      "CC",
                      "CO",
                      "KM",
                      "CK",
                      "CR",
                      "CU",
                      "CW",
                      "CD",
                      "DJ",
                      "DM",
                      "DO",
                      "TL",
                      "EC",
                      "EG",
                      "SV",
                      "GQ",
                      "ER",
                      "SZ",
                      "ET",
                      "FK",
                      "FO",
                      "FJ",
                      "PF",
                      "TF",
                      "GA",
                      "GM",
                      "GE",
                      "GH",
                      "GL",
                      "GD",
                      "GU",
                      "GT",
                      "GN",
                      "GW",
                      "GY",
                      "HT",
                      "HM",
                      "HN",
                      "HK",
                      "IN",
                      "ID",
                      "IR",
                      "IQ",
                      "IL",
                      "CI",
                      "JM",
                      "JP",
                      "JO",
                      "KZ",
                      "KE",
                      "KI",
                      "XK",
                      "KW",
                      "KG",
                      "LA",
                      "LB",
                      "LS",
                      "LR",
                      "LY",
                      "MO",
                      "MG",
                      "MW",
                      "MY",
                      "MV",
                      "ML",
                      "MH",
                      "MR",
                      "MU",
                      "MX",
                      "FM",
                      "MD",
                      "MN",
                      "ME",
                      "MS",
                      "MA",
                      "MZ",
                      "MM",
                      "NA",
                      "NR",
                      "NP",
                      "AN",
                      "NC",
                      "NZ",
                      "NI",
                      "NE",
                      "NG",
                      "NU",
                      "NF",
                      "KP",
                      "MK",
                      "MP",
                      "OM",
                      "PK",
                      "PW",
                      "PS",
                      "PA",
                      "PG",
                      "PY",
                      "PE",
                      "PH",
                      "PN",
                      "PR",
                      "QA",
                      "CG",
                      "RU",
                      "RW",
                      "SH",
                      "KN",
                      "LC",
                      "VC",
                      "WS",
                      "ST",
                      "SA",
                      "SN",
                      "RS",
                      "SC",
                      "SL",
                      "SG",
                      "SX",
                      "SB",
                      "SO",
                      "ZA",
                      "KR",
                      "GS",
                      "SS",
                      "LK",
                      "SD",
                      "SR",
                      "SY",
                      "SJ",
                      "TW",
                      "TJ",
                      "TZ",
                      "TH",
                      "TG",
                      "TK",
                      "TO",
                      "TT",
                      "TN",
                      "TR",
                      "TM",
                      "TC",
                      "TV",
                      "UG",
                      "UA",
                      "AE",
                      "UM",
                      "US",
                      "UY",
                      "UZ",
                      "VU",
                      "VE",
                      "VN",
                      "VI",
                      "WF",
                      "EH",
                      "YE",
                      "ZM",
                      "ZW"
                    ]
                  }
                },
                "description": "Further details required, depending on the destination's country"
              }
            },
            "description": "Destination of the Payment"
          },
          "currency": {
            "type": "string",
            "description": "Currency of the account in ISO 4217 format. Default is GBP",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "amount": {
            "maximum": 2147483647,
            "minimum": 0.01,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
            "example": 100
          },
          "reference": {
            "type": "string",
            "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters that are not all the same (up to 140 characters for currencies other than GBP). Can contain alphanumeric, '-', '.', '&', '/' and space.",
            "example": "Salary"
          },
          "externalReference": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w-\\s]*",
            "type": "string",
            "description": "Your reference for this payment",
            "example": "aReference_00001"
          },
          "endToEndReference": {
            "type": "string",
            "description": "Optional end to end reference. For international payments, Modulr payment ID will be used as end-to-end reference.",
            "example": "aReference_00001"
          },
          "regulatoryReporting": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Regulatory Reporting Type",
                "example": "CRED",
                "enum": [
                  "CRED",
                  "DEBT",
                  "BOTH"
                ]
              },
              "regulatoryAuthority": {
                "type": "object",
                "properties": {
                  "authorityName": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "Authority name. Maximum of 70 characters.",
                    "example": "Financial Conduct Authority"
                  },
                  "authorityCountry": {
                    "type": "string",
                    "description": "ISO 3166 country code of the ultimate payers address",
                    "example": "GB",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "GB",
                      "MQ",
                      "YT",
                      "GP",
                      "GF",
                      "RE",
                      "MF",
                      "GI",
                      "GG",
                      "IM",
                      "JE",
                      "MC",
                      "CH",
                      "AD",
                      "SM",
                      "VA",
                      "AX",
                      "PM",
                      "BL",
                      "AF",
                      "AL",
                      "DZ",
                      "AS",
                      "AO",
                      "AI",
                      "AQ",
                      "AG",
                      "AR",
                      "AM",
                      "AW",
                      "AU",
                      "AZ",
                      "BS",
                      "BH",
                      "BD",
                      "BB",
                      "BY",
                      "BZ",
                      "BJ",
                      "BM",
                      "BT",
                      "BO",
                      "BQ",
                      "BA",
                      "BW",
                      "BV",
                      "BR",
                      "IO",
                      "VG",
                      "BN",
                      "BF",
                      "BI",
                      "KH",
                      "CM",
                      "CA",
                      "CV",
                      "KY",
                      "CF",
                      "TD",
                      "CL",
                      "CN",
                      "CX",
                      "CC",
                      "CO",
                      "KM",
                      "CK",
                      "CR",
                      "CU",
                      "CW",
                      "CD",
                      "DJ",
                      "DM",
                      "DO",
                      "TL",
                      "EC",
                      "EG",
                      "SV",
                      "GQ",
                      "ER",
                      "SZ",
                      "ET",
                      "FK",
                      "FO",
                      "FJ",
                      "PF",
                      "TF",
                      "GA",
                      "GM",
                      "GE",
                      "GH",
                      "GL",
                      "GD",
                      "GU",
                      "GT",
                      "GN",
                      "GW",
                      "GY",
                      "HT",
                      "HM",
                      "HN",
                      "HK",
                      "IN",
                      "ID",
                      "IR",
                      "IQ",
                      "IL",
                      "CI",
                      "JM",
                      "JP",
                      "JO",
                      "KZ",
                      "KE",
                      "KI",
                      "XK",
                      "KW",
                      "KG",
                      "LA",
                      "LB",
                      "LS",
                      "LR",
                      "LY",
                      "MO",
                      "MG",
                      "MW",
                      "MY",
                      "MV",
                      "ML",
                      "MH",
                      "MR",
                      "MU",
                      "MX",
                      "FM",
                      "MD",
                      "MN",
                      "ME",
                      "MS",
                      "MA",
                      "MZ",
                      "MM",
                      "NA",
                      "NR",
                      "NP",
                      "AN",
                      "NC",
                      "NZ",
                      "NI",
                      "NE",
                      "NG",
                      "NU",
                      "NF",
                      "KP",
                      "MK",
                      "MP",
                      "OM",
                      "PK",
                      "PW",
                      "PS",
                      "PA",
                      "PG",
                      "PY",
                      "PE",
                      "PH",
                      "PN",
                      "PR",
                      "QA",
                      "CG",
                      "RU",
                      "RW",
                      "SH",
                      "KN",
                      "LC",
                      "VC",
                      "WS",
                      "ST",
                      "SA",
                      "SN",
                      "RS",
                      "SC",
                      "SL",
                      "SG",
                      "SX",
                      "SB",
                      "SO",
                      "ZA",
                      "KR",
                      "GS",
                      "SS",
                      "LK",
                      "SD",
                      "SR",
                      "SY",
                      "SJ",
                      "TW",
                      "TJ",
                      "TZ",
                      "TH",
                      "TG",
                      "TK",
                      "TO",
                      "TT",
                      "TN",
                      "TR",
                      "TM",
                      "TC",
                      "TV",
                      "UG",
                      "UA",
                      "AE",
                      "UM",
                      "US",
                      "UY",
                      "UZ",
                      "VU",
                      "VE",
                      "VN",
                      "VI",
                      "WF",
                      "EH",
                      "YE",
                      "ZM",
                      "ZW"
                    ]
                  }
                },
                "description": "Regulatory authority"
              },
              "structuredRegulatoryReporting": {
                "type": "object",
                "properties": {
                  "code": {
                    "maxLength": 3,
                    "minLength": 0,
                    "type": "string"
                  },
                  "amount": {
                    "maximum": 2147483647,
                    "minimum": 0.01,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
                    "example": 100
                  },
                  "currencyCode": {
                    "type": "string",
                    "description": "Currency of the account in ISO 4217 format. Default is GBP",
                    "enum": [
                      "GBP",
                      "EUR",
                      "AED",
                      "AFN",
                      "ALL",
                      "AMD",
                      "ANG",
                      "AOA",
                      "ARS",
                      "AUD",
                      "AWG",
                      "AZN",
                      "BAM",
                      "BBD",
                      "BDT",
                      "BGN",
                      "BHD",
                      "BIF",
                      "BMD",
                      "BND",
                      "BOB",
                      "BOV",
                      "BRL",
                      "BSD",
                      "BTN",
                      "BWP",
                      "BYN",
                      "BZD",
                      "CAD",
                      "CDF",
                      "CHE",
                      "CHF",
                      "CHW",
                      "CLF",
                      "CLP",
                      "CNY",
                      "COP",
                      "COU",
                      "CRC",
                      "CUC",
                      "CUP",
                      "CVE",
                      "CZK",
                      "DJF",
                      "DKK",
                      "DOP",
                      "DZD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "FJD",
                      "FKP",
                      "GEL",
                      "GHS",
                      "GIP",
                      "GMD",
                      "GNF",
                      "GTQ",
                      "GYD",
                      "HKD",
                      "HNL",
                      "HRK",
                      "HTG",
                      "HUF",
                      "IDR",
                      "ILS",
                      "INR",
                      "IQD",
                      "IRR",
                      "ISK",
                      "JMD",
                      "JOD",
                      "JPY",
                      "KES",
                      "KGS",
                      "KHR",
                      "KMF",
                      "KPW",
                      "KRW",
                      "KWD",
                      "KYD",
                      "KZT",
                      "LAK",
                      "LBP",
                      "LKR",
                      "LRD",
                      "LSL",
                      "LYD",
                      "MAD",
                      "MDL",
                      "MGA",
                      "MKD",
                      "MMK",
                      "MNT",
                      "MOP",
                      "MRU",
                      "MUR",
                      "MVR",
                      "MWK",
                      "MXN",
                      "MXV",
                      "MYR",
                      "MZN",
                      "NAD",
                      "NGN",
                      "NIO",
                      "NOK",
                      "NPR",
                      "NZD",
                      "OMR",
                      "PAB",
                      "PEN",
                      "PGK",
                      "PHP",
                      "PKR",
                      "PLN",
                      "PYG",
                      "QAR",
                      "RON",
                      "RSD",
                      "RUB",
                      "RWF",
                      "SAR",
                      "SBD",
                      "SCR",
                      "SDG",
                      "SEK",
                      "SGD",
                      "SLE",
                      "SLL",
                      "SOS",
                      "SRD",
                      "SSP",
                      "STN",
                      "SVC",
                      "SYP",
                      "SZL",
                      "SHP",
                      "THB",
                      "TJS",
                      "TMT",
                      "TND",
                      "TOP",
                      "TRY",
                      "TTD",
                      "TWD",
                      "TZS",
                      "UAH",
                      "UGX",
                      "USD",
                      "USN",
                      "UYI",
                      "UYU",
                      "UYW",
                      "UZS",
                      "VES",
                      "VND",
                      "VUV",
                      "WST",
                      "XAF",
                      "XAG",
                      "XAU",
                      "XBA",
                      "XBB",
                      "XBC",
                      "XBD",
                      "XCD",
                      "XDR",
                      "XOF",
                      "XPD",
                      "XPF",
                      "XPT",
                      "XSU",
                      "XTS",
                      "XUA",
                      "XXX",
                      "YER",
                      "ZAR",
                      "ZMW",
                      "ZWL"
                    ]
                  },
                  "information": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string"
                  }
                },
                "description": "Structured regulatory reporting"
              }
            },
            "description": "Regulatory reporting"
          },
          "paymentDate": {
            "type": "string",
            "description": "The future date on which to make the payment. Date format 'yyyy-MM-dd'.\n\nNot applicable for international payments which will be submitted on date of submission or next working day, in line with cut-offs.",
            "example": "2017-01-28"
          },
          "overseasPaymentDetail": {
            "type": "object",
            "properties": {
              "ultimatePayer": {
                "required": [
                  "address",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "Name of the ultimate payer"
                  },
                  "address": {
                    "required": [
                      "country"
                    ],
                    "type": "object",
                    "properties": {
                      "addressLine1": {
                        "maxLength": 70,
                        "minLength": 0,
                        "type": "string",
                        "description": "First line of the ultimate payers address",
                        "example": "2nd Floor"
                      },
                      "addressLine2": {
                        "maxLength": 70,
                        "minLength": 0,
                        "type": "string",
                        "description": "Second line of the ultimate payers address",
                        "example": "123 High Street"
                      },
                      "postTown": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Postal town of the ultimate payers address",
                        "example": "Edinburgh"
                      },
                      "postCode": {
                        "maxLength": 16,
                        "minLength": 0,
                        "type": "string",
                        "description": "Post code of the ultimate payers address",
                        "example": "AB12 3XX"
                      },
                      "country": {
                        "type": "string",
                        "description": "ISO 3166 country code of the ultimate payers address",
                        "example": "GB"
                      }
                    }
                  },
                  "birthDetails": {
                    "type": "object",
                    "properties": {
                      "dateOfBirth": {
                        "pattern": "^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$",
                        "type": "string",
                        "description": "Date of birth in ISO 8601 format of the ultimate payer",
                        "example": "1978-01-01"
                      },
                      "cityOfBirth": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "City of birth of the ultimate payer",
                        "example": "Edinburgh"
                      },
                      "countryOfBirth": {
                        "type": "string",
                        "description": "ISO 3166 country code of the ultimate payers country of birth",
                        "example": "GB"
                      }
                    },
                    "description": "Birth details of a person. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                  },
                  "officialIdentification": {
                    "type": "object",
                    "properties": {
                      "drivingLicenceNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Driving licence number",
                        "example": "JONES849339TS8AD"
                      },
                      "customerNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Customer number",
                        "example": "23547326547632"
                      },
                      "socialSecurityNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Social security number or equivalent",
                        "example": "1110000000022AB"
                      },
                      "passportNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Passport number",
                        "example": "123456789"
                      },
                      "idCardNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "National ID card number",
                        "example": "123456789"
                      },
                      "otherIdNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Other ID number",
                        "example": "123456789"
                      }
                    },
                    "description": "Official identification for a person. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                  },
                  "officialIdDetailOrgs": {
                    "type": "object",
                    "properties": {
                      "bankPartyIdentification": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Bank party identification",
                        "example": "12345"
                      },
                      "centralBankIdNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Central bank identification number",
                        "example": "678910"
                      },
                      "clearingIdNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Clearing identification Number",
                        "example": "xx15402"
                      },
                      "certificateOfIncorporationNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Certification of the incorporation number",
                        "example": "1100010"
                      },
                      "countryIdCode": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Country identification code",
                        "example": "111111"
                      },
                      "customerNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Customer number",
                        "example": "00221133"
                      },
                      "dataUniversalNumberingSystem": {
                        "pattern": "^[0-9]{9,9}?$",
                        "type": "string",
                        "description": "Data universal numbering system",
                        "example": "002211330"
                      },
                      "employerIdNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Employer identification number",
                        "example": "00221133"
                      },
                      "gs1glnIdentifier": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "GS1GLN identifier",
                        "example": "00221133"
                      },
                      "sirenCode": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "SIREN code",
                        "example": "00221133"
                      },
                      "siretCode": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "SIRET code",
                        "example": "00221133"
                      },
                      "taxIdNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Tax identification number",
                        "example": "00221133"
                      },
                      "bicIdentifier": {
                        "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                        "type": "string",
                        "description": "BICI identification",
                        "example": "MGALODJAO7A"
                      },
                      "ibeiIdentifier": {
                        "pattern": "^[A-Z]{2,2}[B-DF-HJ-NP-TV-XZ0-9]{7,7}[0-9]{1,1}?$",
                        "type": "string",
                        "description": "IBEI identification",
                        "example": "HIZFTMTT59"
                      },
                      "beiIdentifier": {
                        "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                        "type": "string",
                        "description": "BEI identification",
                        "example": "MHIHISVZUMH"
                      },
                      "eanglnIdentifier": {
                        "pattern": "^[0-9]{13,13}?$",
                        "type": "string",
                        "description": "EANGLN identification",
                        "example": "7516164953429"
                      },
                      "chipsUniversalIdentifier": {
                        "pattern": "^CH[0-9]{6,6}?$",
                        "type": "string",
                        "description": "CHIPS universal identification",
                        "example": "CH157373"
                      },
                      "genericIdentification3": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Generic identification 3",
                        "example": "123456788"
                      },
                      "genericIdentificationIssr": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Generic identification issr",
                        "example": "13143225"
                      }
                    },
                    "description": "Organisation's official identification. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                  },
                  "overseasAccountIdentifier": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}$",
                        "type": "string",
                        "description": "International Bank Account Number (IBAN)",
                        "example": "GB20MODR00000000000001"
                      },
                      "bban": {
                        "pattern": "^[a-zA-Z0-9]{1,30}$",
                        "type": "string",
                        "description": "Basic Bank Account Number (BBAN)",
                        "example": "NWBK60161331926819"
                      },
                      "upic": {
                        "pattern": "^\\d{8,17}$",
                        "type": "string",
                        "description": "Universal Payment Identification Code (UPIC)",
                        "example": "987654321"
                      },
                      "otherAccountNumber": {
                        "pattern": "^[a-zA-Z0-9]{1,34}$",
                        "type": "string",
                        "description": "Other Account ID",
                        "example": "987654321"
                      }
                    }
                  },
                  "bic": {
                    "pattern": "^[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?$",
                    "type": "string",
                    "description": "Destination beneficiary's BIC/Swift Code.",
                    "example": "MODRDEFF123"
                  }
                }
              },
              "originalPaymentDetails": {
                "required": [
                  "amount",
                  "currency",
                  "exchangeRate"
                ],
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount of currency that the payment is in",
                    "example": 1000.45
                  },
                  "exchangeRate": {
                    "type": "number",
                    "description": "Exchange rate",
                    "example": 1.45
                  },
                  "currency": {
                    "type": "string",
                    "description": "ISO 4217 currency code that the amount is in",
                    "enum": [
                      "GBP",
                      "EUR",
                      "AED",
                      "AFN",
                      "ALL",
                      "AMD",
                      "ANG",
                      "AOA",
                      "ARS",
                      "AUD",
                      "AWG",
                      "AZN",
                      "BAM",
                      "BBD",
                      "BDT",
                      "BGN",
                      "BHD",
                      "BIF",
                      "BMD",
                      "BND",
                      "BOB",
                      "BOV",
                      "BRL",
                      "BSD",
                      "BTN",
                      "BWP",
                      "BYN",
                      "BZD",
                      "CAD",
                      "CDF",
                      "CHE",
                      "CHF",
                      "CHW",
                      "CLF",
                      "CLP",
                      "CNY",
                      "COP",
                      "COU",
                      "CRC",
                      "CUC",
                      "CUP",
                      "CVE",
                      "CZK",
                      "DJF",
                      "DKK",
                      "DOP",
                      "DZD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "FJD",
                      "FKP",
                      "GEL",
                      "GHS",
                      "GIP",
                      "GMD",
                      "GNF",
                      "GTQ",
                      "GYD",
                      "HKD",
                      "HNL",
                      "HRK",
                      "HTG",
                      "HUF",
                      "IDR",
                      "ILS",
                      "INR",
                      "IQD",
                      "IRR",
                      "ISK",
                      "JMD",
                      "JOD",
                      "JPY",
                      "KES",
                      "KGS",
                      "KHR",
                      "KMF",
                      "KPW",
                      "KRW",
                      "KWD",
                      "KYD",
                      "KZT",
                      "LAK",
                      "LBP",
                      "LKR",
                      "LRD",
                      "LSL",
                      "LYD",
                      "MAD",
                      "MDL",
                      "MGA",
                      "MKD",
                      "MMK",
                      "MNT",
                      "MOP",
                      "MRU",
                      "MUR",
                      "MVR",
                      "MWK",
                      "MXN",
                      "MXV",
                      "MYR",
                      "MZN",
                      "NAD",
                      "NGN",
                      "NIO",
                      "NOK",
                      "NPR",
                      "NZD",
                      "OMR",
                      "PAB",
                      "PEN",
                      "PGK",
                      "PHP",
                      "PKR",
                      "PLN",
                      "PYG",
                      "QAR",
                      "RON",
                      "RSD",
                      "RUB",
                      "RWF",
                      "SAR",
                      "SBD",
                      "SCR",
                      "SDG",
                      "SEK",
                      "SGD",
                      "SLE",
                      "SLL",
                      "SOS",
                      "SRD",
                      "SSP",
                      "STN",
                      "SVC",
                      "SYP",
                      "SZL",
                      "SHP",
                      "THB",
                      "TJS",
                      "TMT",
                      "TND",
                      "TOP",
                      "TRY",
                      "TTD",
                      "TWD",
                      "TZS",
                      "UAH",
                      "UGX",
                      "USD",
                      "USN",
                      "UYI",
                      "UYU",
                      "UYW",
                      "UZS",
                      "VES",
                      "VND",
                      "VUV",
                      "WST",
                      "XAF",
                      "XAG",
                      "XAU",
                      "XBA",
                      "XBB",
                      "XBC",
                      "XBD",
                      "XCD",
                      "XDR",
                      "XOF",
                      "XPD",
                      "XPF",
                      "XPT",
                      "XSU",
                      "XTS",
                      "XUA",
                      "XXX",
                      "YER",
                      "ZAR",
                      "ZMW",
                      "ZWL"
                    ]
                  }
                }
              },
              "chargeDetails": {
                "required": [
                  "amount",
                  "bearer",
                  "currency"
                ],
                "type": "object",
                "properties": {
                  "bearer": {
                    "type": "string",
                    "description": "Information about bearer of the charges. Its can be Creditor, Debtor or shared between both",
                    "example": "CRED",
                    "enum": [
                      "CRED",
                      "DEBT",
                      "SHAR"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Amount of the charges. Max allowed is 999999999999.99",
                    "example": 100
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency of charge. Should be ISO Standard currency",
                    "example": "GBP",
                    "enum": [
                      "GBP",
                      "EUR",
                      "AED",
                      "AFN",
                      "ALL",
                      "AMD",
                      "ANG",
                      "AOA",
                      "ARS",
                      "AUD",
                      "AWG",
                      "AZN",
                      "BAM",
                      "BBD",
                      "BDT",
                      "BGN",
                      "BHD",
                      "BIF",
                      "BMD",
                      "BND",
                      "BOB",
                      "BOV",
                      "BRL",
                      "BSD",
                      "BTN",
                      "BWP",
                      "BYN",
                      "BZD",
                      "CAD",
                      "CDF",
                      "CHE",
                      "CHF",
                      "CHW",
                      "CLF",
                      "CLP",
                      "CNY",
                      "COP",
                      "COU",
                      "CRC",
                      "CUC",
                      "CUP",
                      "CVE",
                      "CZK",
                      "DJF",
                      "DKK",
                      "DOP",
                      "DZD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "FJD",
                      "FKP",
                      "GEL",
                      "GHS",
                      "GIP",
                      "GMD",
                      "GNF",
                      "GTQ",
                      "GYD",
                      "HKD",
                      "HNL",
                      "HRK",
                      "HTG",
                      "HUF",
                      "IDR",
                      "ILS",
                      "INR",
                      "IQD",
                      "IRR",
                      "ISK",
                      "JMD",
                      "JOD",
                      "JPY",
                      "KES",
                      "KGS",
                      "KHR",
                      "KMF",
                      "KPW",
                      "KRW",
                      "KWD",
                      "KYD",
                      "KZT",
                      "LAK",
                      "LBP",
                      "LKR",
                      "LRD",
                      "LSL",
                      "LYD",
                      "MAD",
                      "MDL",
                      "MGA",
                      "MKD",
                      "MMK",
                      "MNT",
                      "MOP",
                      "MRU",
                      "MUR",
                      "MVR",
                      "MWK",
                      "MXN",
                      "MXV",
                      "MYR",
                      "MZN",
                      "NAD",
                      "NGN",
                      "NIO",
                      "NOK",
                      "NPR",
                      "NZD",
                      "OMR",
                      "PAB",
                      "PEN",
                      "PGK",
                      "PHP",
                      "PKR",
                      "PLN",
                      "PYG",
                      "QAR",
                      "RON",
                      "RSD",
                      "RUB",
                      "RWF",
                      "SAR",
                      "SBD",
                      "SCR",
                      "SDG",
                      "SEK",
                      "SGD",
                      "SLE",
                      "SLL",
                      "SOS",
                      "SRD",
                      "SSP",
                      "STN",
                      "SVC",
                      "SYP",
                      "SZL",
                      "SHP",
                      "THB",
                      "TJS",
                      "TMT",
                      "TND",
                      "TOP",
                      "TRY",
                      "TTD",
                      "TWD",
                      "TZS",
                      "UAH",
                      "UGX",
                      "USD",
                      "USN",
                      "UYI",
                      "UYU",
                      "UYW",
                      "UZS",
                      "VES",
                      "VND",
                      "VUV",
                      "WST",
                      "XAF",
                      "XAG",
                      "XAU",
                      "XBA",
                      "XBB",
                      "XBC",
                      "XBD",
                      "XCD",
                      "XDR",
                      "XOF",
                      "XPD",
                      "XPF",
                      "XPT",
                      "XSU",
                      "XTS",
                      "XUA",
                      "XXX",
                      "YER",
                      "ZAR",
                      "ZMW",
                      "ZWL"
                    ]
                  }
                }
              },
              "additionalRemittanceInformation": {
                "maxLength": 140,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Details relating to payment originated overseas.\n\nNot applicable for international payments - all international transactions must originate from the Modulr account creating the payment request."
          },
          "fxQuoteId": {
            "type": "string",
            "description": "FX quote ID related to this payment. If supplied, neither 'amount' nor 'currency' should be supplied.",
            "example": "Q0000001",
            "deprecated": true
          },
          "destinationId": {
            "type": "string",
            "writeOnly": true
          },
          "destinationType": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "BENEFICIARY",
              "ACCOUNT",
              "IBAN",
              "SCAN",
              "INTL",
              "ANBRN",
              "AN"
            ]
          }
        },
        "description": "Details of Payment request"
      },
      "payment.BatchPayment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the Batch Payment. 10 characters long",
            "example": "D920000001"
          },
          "externalReference": {
            "type": "string",
            "description": "External reference, if provided",
            "example": "aReference_00001"
          },
          "status": {
            "type": "string",
            "description": "Current status of batch.",
            "example": "ACCEPTED",
            "enum": [
              "ACCEPTED",
              "REJECTED",
              "SUBMITTED",
              "CANCELLED"
            ]
          },
          "totalPayments": {
            "type": "integer",
            "description": "Total count of payments in this batch",
            "format": "int32",
            "example": 9123
          },
          "currentUserCanApprove": {
            "type": "boolean",
            "description": "Whether the user is allowed to approve this batch, based on their approval limits, and applicable configuration",
            "example": true
          },
          "paymentDetails": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "totalPaymentCount": {
                  "type": "integer",
                  "description": "Total count of payments",
                  "format": "int32",
                  "example": 10
                },
                "totalAmount": {
                  "type": "number",
                  "description": "Sum total of payment amounts",
                  "example": 100
                },
                "pendingApprovalCount": {
                  "type": "integer",
                  "description": "Count of payments currently pending approval",
                  "format": "int32",
                  "example": 5
                },
                "pendingApprovalAmount": {
                  "type": "number",
                  "description": "Sum total of payment amounts currently pending approval",
                  "example": 50
                }
              },
              "description": "Summary of payments and approvals"
            },
            "description": "Summary of payments and approvals, per currency (as a 3-alpha currency code)"
          },
          "approvals": {
            "type": "array",
            "description": "List of batch-level approvals",
            "items": {
              "type": "object",
              "properties": {
                "approvedBy": {
                  "type": "string",
                  "description": "ID of user who approved this batch payment request",
                  "example": "U2100021"
                },
                "approvedOn": {
                  "type": "string",
                  "description": "Date this approval was applied",
                  "format": "date",
                  "example": "2022-06-25"
                }
              },
              "description": "A single approval against a batch payment request"
            }
          },
          "currentUserCanCancel": {
            "type": "boolean",
            "description": "Whether the user is allowed and currently able to cancel at least one of the payments in this batch"
          },
          "createdDate": {
            "type": "string",
            "description": "Datetime when the batch payment was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "processingDateFrom": {
            "type": "string",
            "description": "Earliest processing date in the batch file or the batch creation date if the file does not have any dates. Date format 'yyyy-MM-dd'",
            "format": "date",
            "example": "2017-01-28"
          },
          "processingDateTo": {
            "type": "string",
            "description": "Last processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
            "format": "date",
            "example": "2017-01-28"
          },
          "earliestScheduledPaymentDate": {
            "type": "string",
            "description": "Earliest processing date in the batch file or empty if the file does not have any dates. Date format 'Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000'",
            "format": "date",
            "example": "2017-01-28"
          },
          "requiredApprovalCount": {
            "type": "integer",
            "description": "The number of required approvals for the batch.  Applicable to batch payments of submissionType BATCH",
            "format": "int32"
          }
        },
        "description": "List of responses on the current page"
      },
      "card.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION",
              "TOKENEXPIRED"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "card.NotificationRequest": {
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Notification request containing the emails to send the report to"
      },
      "card.CardCustomFieldKeyPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Custom field key"
                },
                "required": {
                  "type": "boolean",
                  "description": "Whether the custom field is required or not"
                }
              },
              "description": "List of responses on the current page"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "card.AsyncTaskResponse": {
        "required": [
          "createdDate",
          "status",
          "taskBid",
          "type"
        ],
        "type": "object",
        "properties": {
          "taskBid": {
            "type": "string",
            "description": "ID of async task",
            "example": "T110000003"
          },
          "resourceUrl": {
            "type": "string",
            "description": "Url of available resource after task completion",
            "example": "/cards/V110000022"
          },
          "resourceId": {
            "type": "string",
            "description": "ID of resource after task completion. Will only be returned for COMPLETE tasks.",
            "example": "V110000022"
          },
          "type": {
            "type": "string",
            "description": "Type of async task"
          },
          "status": {
            "type": "string",
            "description": "Status of the task"
          },
          "createdDate": {
            "type": "string",
            "description": "The creation date of the task",
            "format": "date-time"
          },
          "errorReason": {
            "type": "string",
            "description": "The error reason. Only populated if status is ERROR"
          }
        },
        "description": "List of responses on the current page"
      },
      "account.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "payment.OfficialIdDetails": {
        "type": "object",
        "properties": {
          "drivingLicenceNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Driving licence number",
            "example": "JONES849339TS8AD"
          },
          "customerNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Customer number",
            "example": "23547326547632"
          },
          "socialSecurityNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Social security number or equivalent",
            "example": "1110000000022AB"
          },
          "passportNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Passport number",
            "example": "123456789"
          },
          "idCardNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "National ID card number",
            "example": "123456789"
          },
          "otherIdNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Other ID number",
            "example": "123456789"
          }
        },
        "description": "Official identification for a person. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
      },
      "card.UpdateCardAuthenticationRequest": {
        "required": [
          "knowledgeBase"
        ],
        "type": "object",
        "properties": {
          "knowledgeBase": {
            "type": "array",
            "description": "3DS Knowledge-Based Authentication (KBA) answers",
            "items": {
              "required": [
                "answer",
                "type"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "3DS knowledge-based authentication answer type",
                  "enum": [
                    "FIRST_PET_NAME",
                    "MATERNAL_GRANDMOTHER_MAIDEN_NAME",
                    "FAVOURITE_CHILDHOOD_FRIEND",
                    "FIRST_CAR",
                    "CITY_PARENTS_MET"
                  ]
                },
                "answer": {
                  "maxLength": 45,
                  "minLength": 1,
                  "type": "string",
                  "description": "3DS knowledge-based authentication answer"
                }
              },
              "description": "3DS Knowledge-Based Authentication (KBA) answers"
            }
          }
        },
        "description": "Authentication"
      },
      "directdebitoutbound.EnquiryMandatesResponse": {
        "required": [
          "accountId",
          "mandatesList"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account Id"
          },
          "mandatesList": {
            "type": "array",
            "description": "List of Mandates",
            "items": {
              "required": [
                "auddisIndicator",
                "mandateId",
                "mandateReference",
                "mandateStatus",
                "merchantAccountNumber",
                "merchantName",
                "merchantNumber",
                "merchantSortCode",
                "setupDate"
              ],
              "type": "object",
              "properties": {
                "mandateId": {
                  "type": "string",
                  "description": "Mandate Id"
                },
                "merchantNumber": {
                  "type": "string",
                  "description": "Merchant Number"
                },
                "merchantName": {
                  "type": "string",
                  "description": "Merchant Name"
                },
                "merchantAccountNumber": {
                  "type": "string",
                  "description": "Merchant Account Number"
                },
                "merchantSortCode": {
                  "type": "string",
                  "description": "Merchant Sort Code"
                },
                "mandateStatus": {
                  "type": "string",
                  "description": "Status"
                },
                "auddisIndicator": {
                  "type": "string",
                  "description": "AUDDIS Flag (AUDDIS / Non-AUDDIS)",
                  "enum": [
                    "A",
                    "N"
                  ]
                },
                "setupDate": {
                  "type": "string",
                  "description": "Setup date"
                },
                "mandateReference": {
                  "type": "string",
                  "description": "Mandate Reference"
                }
              },
              "description": "List of Mandates"
            }
          }
        }
      },
      "card.AuthorisationConstraints": {
        "type": "object",
        "properties": {
          "spend": {
            "type": "array",
            "description": "Spending constraints",
            "items": {
              "required": [
                "currency"
              ],
              "type": "object",
              "properties": {
                "currency": {
                  "type": "string",
                  "description": "A 3 letter ISO 4217 code representing the transaction currency",
                  "example": "GBP",
                  "enum": [
                    "GBP",
                    "EUR",
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BOV",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHE",
                    "CHF",
                    "CHW",
                    "CLF",
                    "CLP",
                    "CNY",
                    "COP",
                    "COU",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "FJD",
                    "FKP",
                    "GEL",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRU",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MXV",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SLE",
                    "SLL",
                    "SOS",
                    "SRD",
                    "SSP",
                    "STN",
                    "SVC",
                    "SYP",
                    "SZL",
                    "SHP",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "USN",
                    "UYI",
                    "UYU",
                    "UYW",
                    "UZS",
                    "VES",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XAG",
                    "XAU",
                    "XBA",
                    "XBB",
                    "XBC",
                    "XBD",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPD",
                    "XPF",
                    "XPT",
                    "XSU",
                    "XTS",
                    "XUA",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWL"
                  ]
                },
                "min": {
                  "type": "number",
                  "description": "Minimum spend amount (inclusive)",
                  "example": 5
                },
                "max": {
                  "type": "number",
                  "description": "Maximum spend amount (inclusive)",
                  "example": 2000
                }
              },
              "description": "Spending constraints"
            }
          }
        },
        "description": "Authorisation constraints"
      },
      "card.CardToken": {
        "required": [
          "expiry",
          "id",
          "language",
          "status",
          "type",
          "wallet"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card token ID",
            "example": "T110000001"
          },
          "expiry": {
            "type": "string",
            "description": "Token expiry date (ISO 8601 format)",
            "format": "date",
            "example": "2021-10-31"
          },
          "type": {
            "type": "string",
            "description": "Type of system the token is encoded onto",
            "example": "SECURE_ELEMENT",
            "enum": [
              "BROWSER_ACCESSIBLE_WALLET",
              "CONTACTLESS_DEVICE_PAN",
              "CARD_ON_FILE_PAN",
              "REAL_PAN",
              "UNKNOWN",
              "VIRTUAL_PAN",
              "SECURE_ELEMENT",
              "CLOUD_BASED"
            ]
          },
          "wallet": {
            "type": "string",
            "description": "Wallet the token belongs to",
            "example": "APPLE",
            "enum": [
              "APPLE",
              "GOOGLE",
              "MRCHTOKEN"
            ]
          },
          "status": {
            "type": "string",
            "description": "Card token status",
            "example": "PROVISIONED",
            "enum": [
              "APPROVED",
              "ACTIVE",
              "AWAITING_AUTHENTICATION",
              "AUTHENTICATION_FAILED",
              "AUTO_SUSPENDED",
              "SUSPENDED",
              "DEACTIVATED",
              "UNKNOWN"
            ]
          },
          "language": {
            "type": "string",
            "description": "2-digit ISO 639-1 language code",
            "example": "EN"
          },
          "devices": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "ip",
                "name",
                "status",
                "type"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Device ID",
                  "example": "D110000001"
                },
                "type": {
                  "type": "string",
                  "description": "Device type",
                  "example": "MOBILE_PHONE",
                  "enum": [
                    "CLOTHING",
                    "MEDIA_GAMING",
                    "CARD",
                    "DOMESTIC_APPLIANCE",
                    "FOB",
                    "MOBILE_TAG",
                    "FASHION",
                    "JEWELRY",
                    "MOBILE_PHONE",
                    "PERSONAL_COMPUTER",
                    "WRISTBAND",
                    "STICKER",
                    "TABLET",
                    "UNKNOWN",
                    "VEHICLE",
                    "WATCH",
                    "MOBILE_PHONE_OR_TABLET"
                  ]
                },
                "ip": {
                  "type": "string",
                  "description": "IPv4 address of the device. Either in hex format (i.e FFFFFFFF) or decimal format (i.e. 255.255.255.255)",
                  "example": "255.255.255.255"
                },
                "name": {
                  "type": "string",
                  "description": "Device name, as given by the cardholder",
                  "example": "iPhone 12"
                },
                "status": {
                  "type": "string",
                  "description": "Device status",
                  "example": "ACTIVE",
                  "enum": [
                    "PENDING_PROVISIONING",
                    "PROVISIONED",
                    "DELETED",
                    "UNKNOWN"
                  ]
                }
              }
            }
          },
          "maskedDpan": {
            "type": "string",
            "description": "Masked DPAN (last 4 digits) to the associated token ID",
            "example": "1234"
          }
        },
        "description": "Payment token details for a card"
      },
      "onboarding.AddressResponse": {
        "required": [
          "addressLine1",
          "country",
          "postCode",
          "postTown"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "postTown": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "countrySubDivision": {
            "type": "string"
          }
        },
        "description": "Address"
      },
      "paymentfileupload.ErrorMessageResponse": {
        "required": [
          "errorMessage"
        ],
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string",
            "description": "Error message indicating a certain validation error occurred",
            "example": "Processing date is required"
          },
          "invalidAccounts": {
            "type": "array",
            "description": "List of a invalid account that were effected by the validation",
            "items": {
              "type": "string",
              "description": "List of a invalid account that were effected by the validation"
            }
          }
        },
        "description": "If invalid holds the validation errors",
        "example": [
          "Failed parsing"
        ]
      },
      "pispgateway.DeliveryAddress": {
        "required": [
          "addressLine1",
          "country",
          "postCode",
          "postTown"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "First line of the address"
          },
          "addressLine2": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Second line of the address"
          },
          "postTown": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "The post town"
          },
          "postCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "The postcode"
          },
          "country": {
            "type": "string",
            "description": "The country"
          }
        },
        "description": "Information that locates and identifies a specific address, as defined by postal services or in free format text, must be specified if paymentContextCode is ECOMMERCEGOODS"
      },
      "rule.ConditionalSplitConfig": {
        "required": [
          "conditionAmount",
          "destinationId",
          "percent"
        ],
        "type": "object",
        "properties": {
          "destinationId": {
            "type": "string",
            "description": "Id of destination beneficiary. e.g. B1000001."
          },
          "percent": {
            "type": "string",
            "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
          },
          "conditionAmount": {
            "maximum": 2147483647,
            "minimum": 0.01,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
          },
          "conditionDone": {
            "type": "boolean",
            "description": "Whether the condition amount has been met. e.g. true or false"
          }
        },
        "description": "Configuration for a Conditional Split Rule"
      },
      "paymentfileupload.FileUploadStatusResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the uploaded file",
            "example": "INVALID",
            "enum": [
              "SUBMITTED",
              "INVALID",
              "VALID",
              "DUPLICATE",
              "REJECTED",
              "ACCEPTED",
              "PROCESSED",
              "SENDING"
            ]
          },
          "fileName": {
            "type": "string",
            "description": "File name of the uploaded file",
            "example": "file1"
          },
          "numTransactions": {
            "type": "integer",
            "description": "Total number of transactions within file",
            "format": "int32",
            "example": 1000
          },
          "totalAmount": {
            "type": "number",
            "description": "Sum of all transaction's amount within file",
            "example": 1539.81
          },
          "errors": {
            "type": "array",
            "description": "If invalid holds the validation errors",
            "example": [
              "Failed parsing"
            ],
            "items": {
              "required": [
                "errorMessage"
              ],
              "type": "object",
              "properties": {
                "errorMessage": {
                  "type": "string",
                  "description": "Error message indicating a certain validation error occurred",
                  "example": "Processing date is required"
                },
                "invalidAccounts": {
                  "type": "array",
                  "description": "List of a invalid account that were effected by the validation",
                  "items": {
                    "type": "string",
                    "description": "List of a invalid account that were effected by the validation"
                  }
                }
              },
              "description": "If invalid holds the validation errors",
              "example": [
                "Failed parsing"
              ]
            }
          }
        },
        "description": "File upload Status Response"
      },
      "inboundpayment.PartyDetailRequest": {
        "required": [
          "identifier",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Party name"
          },
          "identifier": {
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Account identifier type",
                "enum": [
                  "SCAN",
                  "IBAN",
                  "DD",
                  "INTL",
                  "ANBRN",
                  "AN"
                ]
              },
              "accountNumber": {
                "type": "string",
                "description": "Account number"
              },
              "sortCode": {
                "type": "string",
                "description": "Sortcode"
              },
              "iban": {
                "type": "string",
                "description": "IBAN"
              },
              "bic": {
                "type": "string",
                "description": "BIC"
              }
            },
            "description": "Account identifier"
          },
          "address": {
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            },
            "description": "Party address"
          }
        },
        "description": "Payee details"
      },
      "pispgateway.Destination": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
            "enum": [
              "ACCOUNT",
              "SCAN",
              "ACCOUNT",
              "SCAN"
            ]
          },
          "id": {
            "type": "string",
            "description": "Identifier of the destination account if using ACCOUNT type",
            "example": "A1100001"
          },
          "accountNumber": {
            "pattern": "^[0-9]{8}$",
            "type": "string",
            "description": "Account Number of destination account if using SCAN type",
            "example": "12345678"
          },
          "sortCode": {
            "pattern": "^[0-9]{6}$",
            "type": "string",
            "description": "Sort Code of destination account if using SCAN type",
            "example": "000000"
          },
          "name": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Name of destination account if using SCAN type (this may be truncated)",
            "example": "Test"
          }
        },
        "description": "The destination account for the payment"
      },
      "onboarding.DocumentInfo": {
        "required": [
          "fileName",
          "path",
          "uploadedDate"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "uploadedDate": {
            "type": "string",
            "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "example": "2017-01-28T01:01:01+0000"
          }
        },
        "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
      },
      "directdebit.BulkCreateMandateRequest": {
        "required": [
          "accountId",
          "createMandateRequests",
          "migrationType"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The unique identifier for the account for which the mandates are to be created."
          },
          "migrationType": {
            "type": "string",
            "description": "The type of migration process that is being initiated.",
            "enum": [
              "SCHEDULE_AUDDIS_MIGRATION",
              "TRANSFER_OF_SUN"
            ]
          },
          "auddisSubmissionDate": {
            "type": "string",
            "description": "The scheduled date for the AUDDIS (Automated Direct Debit Instruction Service) submission. This is the date when the mandates will be submitted to the AUDDIS system for processing.",
            "format": "date"
          },
          "createMandateRequests": {
            "type": "array",
            "description": "The number of mandate creation requests. Each item in the array represents a request to create an individual mandate with its own set of parameters.",
            "items": {
              "required": [
                "accountName",
                "accountNumber",
                "address",
                "externalReference",
                "name",
                "phone",
                "reference",
                "sortCode"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "maxLength": 40,
                  "minLength": 0,
                  "type": "string",
                  "description": "Name for mandate"
                },
                "reference": {
                  "maxLength": 18,
                  "minLength": 6,
                  "pattern": "^[a-zA-Z 0-9\\.\\&\\/-]+$",
                  "type": "string",
                  "description": "Mandate reference, should contain only letters, numbers, space, dot, ampersand, forward-slash and hyphen",
                  "example": "REFER-1.2"
                },
                "externalReference": {
                  "maxLength": 50,
                  "minLength": 0,
                  "pattern": "[\\w-\\s]*",
                  "type": "string",
                  "description": "External reference for mandate"
                },
                "accountName": {
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string",
                  "description": "Payee's account name"
                },
                "sortCode": {
                  "pattern": "\\p{Digit}{6}",
                  "type": "string",
                  "description": "Payee's sort code of account for which direct-debit-mandate has to be created.",
                  "example": "000000"
                },
                "accountNumber": {
                  "pattern": "\\p{Digit}{8}",
                  "type": "string",
                  "description": "Payee's account number for which direct-debit-mandate has to be created.",
                  "example": "12345678"
                },
                "address": {
                  "required": [
                    "addressLine1",
                    "country",
                    "postCode",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "addressLine2": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "postTown": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "postCode": {
                      "maxLength": 8,
                      "minLength": 0,
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                },
                "phone": {
                  "maxLength": 14,
                  "minLength": 0,
                  "pattern": "\\p{Digit}+",
                  "type": "string",
                  "description": "Payee's phone number"
                },
                "email": {
                  "maxLength": 100,
                  "minLength": 0,
                  "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
                  "type": "string",
                  "description": "Payee's email address"
                },
                "payeeAccountBid": {
                  "type": "string",
                  "description": "Payee's accountBid"
                }
              },
              "description": "Details of the Direct Debit mandate."
            }
          }
        },
        "description": "List of Details of the Direct Debit mandates."
      },
      "pispgateway.PeriodicLimit": {
        "required": [
          "currency",
          "periodAlignment",
          "periodType"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency of the maximum amount. Must be specified in ISO 4217 format."
          },
          "amount": {
            "type": "number",
            "description": "The maximum amount of all payments initiated using this consent in the specified period. At least one periodic limit is required - '1' = 1.00 GBP",
            "example": 100
          },
          "periodAlignment": {
            "type": "string",
            "description": "Specifies whether the period starts on the date of consent creation or lines up with a calendar."
          },
          "periodType": {
            "type": "string",
            "description": "Period type. Must be one of âDAYâ,âWEEKâ,âFORTNIGHTâ,âMONTHâ,âHALF_YEARâ,âYEARâ."
          }
        },
        "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days."
      },
      "pispgateway.PaymentInitiationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the payment initiation",
            "example": "I000000001"
          },
          "status": {
            "type": "string",
            "description": "The status of the payment initiation, can be one of SUBMITTED, AWAITING_CONSENT, CONSENT_REJECTED, EXECUTED, ER_EXPIRED, ER_EXTSYS, ER_GENERAL",
            "example": "AWAITING_CONSENT"
          },
          "paymentAmount": {
            "required": [
              "currency",
              "value"
            ],
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency of the account in ISO 4217 format. Only allowable value is GBP",
                "enum": [
                  "GBP"
                ]
              },
              "value": {
                "maximum": 2147483647,
                "minimum": 0.01,
                "exclusiveMinimum": false,
                "type": "number",
                "description": "Amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                "example": 100
              }
            },
            "description": "The amount of the payment"
          },
          "paymentReference": {
            "type": "string",
            "description": "The payment reference"
          },
          "destination": {
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                "enum": [
                  "ACCOUNT",
                  "SCAN",
                  "ACCOUNT",
                  "SCAN"
                ]
              },
              "id": {
                "type": "string",
                "description": "Identifier of the destination account if using ACCOUNT type",
                "example": "A1100001"
              },
              "accountNumber": {
                "pattern": "^[0-9]{8}$",
                "type": "string",
                "description": "Account Number of destination account if using SCAN type",
                "example": "12345678"
              },
              "sortCode": {
                "pattern": "^[0-9]{6}$",
                "type": "string",
                "description": "Sort Code of destination account if using SCAN type",
                "example": "000000"
              },
              "name": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Name of destination account if using SCAN type (this may be truncated)",
                "example": "Test"
              }
            },
            "description": "The destination account for the payment"
          },
          "aspspId": {
            "type": "string",
            "description": "The identifier of the ASPSP used for the payment",
            "example": "H100000001"
          },
          "aspspPaymentStatus": {
            "type": "string",
            "description": "The status of the payment at the ASPSP. When available, this is passed through from the ASPSP without modification.",
            "example": "AcceptedSettlementCompleted"
          }
        },
        "description": "Response object for Get Payment Initiation"
      },
      "account.customerStatuses": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Customer statuses",
          "default": "ACTIVE",
          "enum": [
            "ACTIVE",
            "CLOSED",
            "BLOCKED"
          ]
        }
      },
      "payment.BatchPaymentOutRequest": {
        "required": [
          "payments"
        ],
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w-\\s]*",
            "type": "string",
            "description": "Your reference for this Batch of payments",
            "example": "aReference_00001"
          },
          "strictProcessing": {
            "type": "boolean",
            "description": "Flag to control if the entire batch fails for any individual payment validation failure"
          },
          "submissionType": {
            "type": "string",
            "description": "BATCH restricts operations to batch level.  BULK (default) allows payment level operations such as approval",
            "enum": [
              "BATCH",
              "BULK"
            ]
          },
          "payments": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "description": "List of payments. Need at least 1 and maximum of 10000",
            "items": {
              "required": [
                "sourceAccountId"
              ],
              "type": "object",
              "properties": {
                "sourceAccountId": {
                  "type": "string",
                  "description": "Identifier for the sending Account."
                },
                "destination": {
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Indicates the type of destination. IBAN type is required for international payments.",
                      "example": "SCAN",
                      "enum": [
                        "BENEFICIARY",
                        "ACCOUNT",
                        "IBAN",
                        "SCAN",
                        "INTL",
                        "ANBRN",
                        "AN"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Identifier for the Payment destination if using ACCOUNT or BENEFICIARY type. Can be either: a) Beneficiary id for an external Payment, b) Account id for a transfer to another Account"
                    },
                    "iban": {
                      "pattern": "^[a-zA-Z]{2}[0-9]{2}([a-zA-Z0-9]){11,30}$",
                      "type": "string",
                      "description": "International Bank Account Number (IBAN). To be used as the destination identifier when sending âIBANâ type payments",
                      "example": "GB20MODR00000000000001"
                    },
                    "accountNumber": {
                      "type": "string",
                      "description": "Account Number of destination account if using SCAN type.",
                      "example": "12345678"
                    },
                    "sortCode": {
                      "pattern": "^[0-9]{6}$",
                      "type": "string",
                      "description": "Sort Code of destination account if using SCAN type.",
                      "example": "000000"
                    },
                    "name": {
                      "maxLength": 100,
                      "minLength": 0,
                      "type": "string",
                      "description": "Name to use if a new beneficiary is created, and for using as the payee name if SCAN or IBAN types are specified for the destination",
                      "example": "Test"
                    },
                    "address": {
                      "required": [
                        "addressLine1",
                        "postTown"
                      ],
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        },
                        "addressLine2": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        },
                        "postTown": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        },
                        "postCode": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "country": {
                          "type": "string",
                          "description": "Mandatory for international payments."
                        },
                        "countrySubDivision": {
                          "maxLength": 35,
                          "minLength": 0,
                          "type": "string"
                        }
                      },
                      "description": "Optional address. Mandatory for international payments."
                    },
                    "birthdate": {
                      "type": "string",
                      "description": "The destination beneficiary's date of birth. Format: yyyy-MM-dd",
                      "format": "date",
                      "example": "2000-01-01"
                    },
                    "emailAddress": {
                      "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
                      "type": "string",
                      "description": "The destination beneficiary's email address"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "The destination beneficiary's phone number"
                    },
                    "bic": {
                      "type": "string",
                      "description": "The destination beneficiary's SWIFT BIC (Bank Identifier Code). Only to be used for international payments."
                    },
                    "countrySpecificDetails": {
                      "type": "object",
                      "properties": {
                        "bankName": {
                          "type": "string",
                          "description": "The name of the destination bank.",
                          "example": "Apple Bank"
                        },
                        "bankAddress": {
                          "type": "string",
                          "description": "The address of the destination bank.",
                          "example": "2100 Broadway"
                        },
                        "bankCity": {
                          "type": "string",
                          "description": "The city in which the destination bank resides.",
                          "example": "New York City"
                        },
                        "bankBranchName": {
                          "type": "string",
                          "description": "The name of the destination bank's branch.",
                          "example": "New York"
                        },
                        "bankBranchCode": {
                          "type": "string",
                          "description": "The code of the destination bank's branch.",
                          "example": "44-04"
                        },
                        "bankCode": {
                          "type": "string",
                          "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                        },
                        "chineseId": {
                          "type": "string",
                          "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                          "example": "01101201901018889"
                        },
                        "province": {
                          "type": "string",
                          "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                          "example": "Zhejiang"
                        },
                        "abaRoutingNumber": {
                          "pattern": "^\\d{9}$",
                          "type": "string",
                          "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                          "example": "123456789"
                        },
                        "business": {
                          "type": "boolean",
                          "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                          "example": true
                        },
                        "bankCodeType": {
                          "type": "string",
                          "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                          "example": "ABA",
                          "enum": [
                            "ABA",
                            "CHIPS"
                          ]
                        },
                        "bankCountry": {
                          "type": "string",
                          "description": "The country in which the destination bank resides. Mandatory for international payments.",
                          "example": "US",
                          "enum": [
                            "AT",
                            "BE",
                            "BG",
                            "CY",
                            "CZ",
                            "DK",
                            "EE",
                            "FI",
                            "FR",
                            "DE",
                            "GR",
                            "HR",
                            "HU",
                            "IS",
                            "IE",
                            "IT",
                            "LV",
                            "LI",
                            "LT",
                            "LU",
                            "MT",
                            "NL",
                            "NO",
                            "PL",
                            "PT",
                            "RO",
                            "SK",
                            "SI",
                            "ES",
                            "SE",
                            "GB",
                            "MQ",
                            "YT",
                            "GP",
                            "GF",
                            "RE",
                            "MF",
                            "GI",
                            "GG",
                            "IM",
                            "JE",
                            "MC",
                            "CH",
                            "AD",
                            "SM",
                            "VA",
                            "AX",
                            "PM",
                            "BL",
                            "AF",
                            "AL",
                            "DZ",
                            "AS",
                            "AO",
                            "AI",
                            "AQ",
                            "AG",
                            "AR",
                            "AM",
                            "AW",
                            "AU",
                            "AZ",
                            "BS",
                            "BH",
                            "BD",
                            "BB",
                            "BY",
                            "BZ",
                            "BJ",
                            "BM",
                            "BT",
                            "BO",
                            "BQ",
                            "BA",
                            "BW",
                            "BV",
                            "BR",
                            "IO",
                            "VG",
                            "BN",
                            "BF",
                            "BI",
                            "KH",
                            "CM",
                            "CA",
                            "CV",
                            "KY",
                            "CF",
                            "TD",
                            "CL",
                            "CN",
                            "CX",
                            "CC",
                            "CO",
                            "KM",
                            "CK",
                            "CR",
                            "CU",
                            "CW",
                            "CD",
                            "DJ",
                            "DM",
                            "DO",
                            "TL",
                            "EC",
                            "EG",
                            "SV",
                            "GQ",
                            "ER",
                            "SZ",
                            "ET",
                            "FK",
                            "FO",
                            "FJ",
                            "PF",
                            "TF",
                            "GA",
                            "GM",
                            "GE",
                            "GH",
                            "GL",
                            "GD",
                            "GU",
                            "GT",
                            "GN",
                            "GW",
                            "GY",
                            "HT",
                            "HM",
                            "HN",
                            "HK",
                            "IN",
                            "ID",
                            "IR",
                            "IQ",
                            "IL",
                            "CI",
                            "JM",
                            "JP",
                            "JO",
                            "KZ",
                            "KE",
                            "KI",
                            "XK",
                            "KW",
                            "KG",
                            "LA",
                            "LB",
                            "LS",
                            "LR",
                            "LY",
                            "MO",
                            "MG",
                            "MW",
                            "MY",
                            "MV",
                            "ML",
                            "MH",
                            "MR",
                            "MU",
                            "MX",
                            "FM",
                            "MD",
                            "MN",
                            "ME",
                            "MS",
                            "MA",
                            "MZ",
                            "MM",
                            "NA",
                            "NR",
                            "NP",
                            "AN",
                            "NC",
                            "NZ",
                            "NI",
                            "NE",
                            "NG",
                            "NU",
                            "NF",
                            "KP",
                            "MK",
                            "MP",
                            "OM",
                            "PK",
                            "PW",
                            "PS",
                            "PA",
                            "PG",
                            "PY",
                            "PE",
                            "PH",
                            "PN",
                            "PR",
                            "QA",
                            "CG",
                            "RU",
                            "RW",
                            "SH",
                            "KN",
                            "LC",
                            "VC",
                            "WS",
                            "ST",
                            "SA",
                            "SN",
                            "RS",
                            "SC",
                            "SL",
                            "SG",
                            "SX",
                            "SB",
                            "SO",
                            "ZA",
                            "KR",
                            "GS",
                            "SS",
                            "LK",
                            "SD",
                            "SR",
                            "SY",
                            "SJ",
                            "TW",
                            "TJ",
                            "TZ",
                            "TH",
                            "TG",
                            "TK",
                            "TO",
                            "TT",
                            "TN",
                            "TR",
                            "TM",
                            "TC",
                            "TV",
                            "UG",
                            "UA",
                            "AE",
                            "UM",
                            "US",
                            "UY",
                            "UZ",
                            "VU",
                            "VE",
                            "VN",
                            "VI",
                            "WF",
                            "EH",
                            "YE",
                            "ZM",
                            "ZW"
                          ]
                        }
                      },
                      "description": "Further details required, depending on the destination's country"
                    }
                  },
                  "description": "Destination of the Payment"
                },
                "currency": {
                  "type": "string",
                  "description": "Currency of the account in ISO 4217 format. Default is GBP",
                  "enum": [
                    "GBP",
                    "EUR",
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BOV",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHE",
                    "CHF",
                    "CHW",
                    "CLF",
                    "CLP",
                    "CNY",
                    "COP",
                    "COU",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "FJD",
                    "FKP",
                    "GEL",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRU",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MXV",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SLE",
                    "SLL",
                    "SOS",
                    "SRD",
                    "SSP",
                    "STN",
                    "SVC",
                    "SYP",
                    "SZL",
                    "SHP",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "USN",
                    "UYI",
                    "UYU",
                    "UYW",
                    "UZS",
                    "VES",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XAG",
                    "XAU",
                    "XBA",
                    "XBB",
                    "XBC",
                    "XBD",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPD",
                    "XPF",
                    "XPT",
                    "XSU",
                    "XTS",
                    "XUA",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWL"
                  ]
                },
                "amount": {
                  "maximum": 2147483647,
                  "minimum": 0.01,
                  "exclusiveMinimum": false,
                  "type": "number",
                  "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
                  "example": 100
                },
                "reference": {
                  "type": "string",
                  "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters that are not all the same (up to 140 characters for currencies other than GBP). Can contain alphanumeric, '-', '.', '&', '/' and space.",
                  "example": "Salary"
                },
                "externalReference": {
                  "maxLength": 50,
                  "minLength": 0,
                  "pattern": "[\\w-\\s]*",
                  "type": "string",
                  "description": "Your reference for this payment",
                  "example": "aReference_00001"
                },
                "endToEndReference": {
                  "type": "string",
                  "description": "Optional end to end reference. For international payments, Modulr payment ID will be used as end-to-end reference.",
                  "example": "aReference_00001"
                },
                "regulatoryReporting": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Regulatory Reporting Type",
                      "example": "CRED",
                      "enum": [
                        "CRED",
                        "DEBT",
                        "BOTH"
                      ]
                    },
                    "regulatoryAuthority": {
                      "type": "object",
                      "properties": {
                        "authorityName": {
                          "maxLength": 70,
                          "minLength": 0,
                          "type": "string",
                          "description": "Authority name. Maximum of 70 characters.",
                          "example": "Financial Conduct Authority"
                        },
                        "authorityCountry": {
                          "type": "string",
                          "description": "ISO 3166 country code of the ultimate payers address",
                          "example": "GB",
                          "enum": [
                            "AT",
                            "BE",
                            "BG",
                            "CY",
                            "CZ",
                            "DK",
                            "EE",
                            "FI",
                            "FR",
                            "DE",
                            "GR",
                            "HR",
                            "HU",
                            "IS",
                            "IE",
                            "IT",
                            "LV",
                            "LI",
                            "LT",
                            "LU",
                            "MT",
                            "NL",
                            "NO",
                            "PL",
                            "PT",
                            "RO",
                            "SK",
                            "SI",
                            "ES",
                            "SE",
                            "GB",
                            "MQ",
                            "YT",
                            "GP",
                            "GF",
                            "RE",
                            "MF",
                            "GI",
                            "GG",
                            "IM",
                            "JE",
                            "MC",
                            "CH",
                            "AD",
                            "SM",
                            "VA",
                            "AX",
                            "PM",
                            "BL",
                            "AF",
                            "AL",
                            "DZ",
                            "AS",
                            "AO",
                            "AI",
                            "AQ",
                            "AG",
                            "AR",
                            "AM",
                            "AW",
                            "AU",
                            "AZ",
                            "BS",
                            "BH",
                            "BD",
                            "BB",
                            "BY",
                            "BZ",
                            "BJ",
                            "BM",
                            "BT",
                            "BO",
                            "BQ",
                            "BA",
                            "BW",
                            "BV",
                            "BR",
                            "IO",
                            "VG",
                            "BN",
                            "BF",
                            "BI",
                            "KH",
                            "CM",
                            "CA",
                            "CV",
                            "KY",
                            "CF",
                            "TD",
                            "CL",
                            "CN",
                            "CX",
                            "CC",
                            "CO",
                            "KM",
                            "CK",
                            "CR",
                            "CU",
                            "CW",
                            "CD",
                            "DJ",
                            "DM",
                            "DO",
                            "TL",
                            "EC",
                            "EG",
                            "SV",
                            "GQ",
                            "ER",
                            "SZ",
                            "ET",
                            "FK",
                            "FO",
                            "FJ",
                            "PF",
                            "TF",
                            "GA",
                            "GM",
                            "GE",
                            "GH",
                            "GL",
                            "GD",
                            "GU",
                            "GT",
                            "GN",
                            "GW",
                            "GY",
                            "HT",
                            "HM",
                            "HN",
                            "HK",
                            "IN",
                            "ID",
                            "IR",
                            "IQ",
                            "IL",
                            "CI",
                            "JM",
                            "JP",
                            "JO",
                            "KZ",
                            "KE",
                            "KI",
                            "XK",
                            "KW",
                            "KG",
                            "LA",
                            "LB",
                            "LS",
                            "LR",
                            "LY",
                            "MO",
                            "MG",
                            "MW",
                            "MY",
                            "MV",
                            "ML",
                            "MH",
                            "MR",
                            "MU",
                            "MX",
                            "FM",
                            "MD",
                            "MN",
                            "ME",
                            "MS",
                            "MA",
                            "MZ",
                            "MM",
                            "NA",
                            "NR",
                            "NP",
                            "AN",
                            "NC",
                            "NZ",
                            "NI",
                            "NE",
                            "NG",
                            "NU",
                            "NF",
                            "KP",
                            "MK",
                            "MP",
                            "OM",
                            "PK",
                            "PW",
                            "PS",
                            "PA",
                            "PG",
                            "PY",
                            "PE",
                            "PH",
                            "PN",
                            "PR",
                            "QA",
                            "CG",
                            "RU",
                            "RW",
                            "SH",
                            "KN",
                            "LC",
                            "VC",
                            "WS",
                            "ST",
                            "SA",
                            "SN",
                            "RS",
                            "SC",
                            "SL",
                            "SG",
                            "SX",
                            "SB",
                            "SO",
                            "ZA",
                            "KR",
                            "GS",
                            "SS",
                            "LK",
                            "SD",
                            "SR",
                            "SY",
                            "SJ",
                            "TW",
                            "TJ",
                            "TZ",
                            "TH",
                            "TG",
                            "TK",
                            "TO",
                            "TT",
                            "TN",
                            "TR",
                            "TM",
                            "TC",
                            "TV",
                            "UG",
                            "UA",
                            "AE",
                            "UM",
                            "US",
                            "UY",
                            "UZ",
                            "VU",
                            "VE",
                            "VN",
                            "VI",
                            "WF",
                            "EH",
                            "YE",
                            "ZM",
                            "ZW"
                          ]
                        }
                      },
                      "description": "Regulatory authority"
                    },
                    "structuredRegulatoryReporting": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "maxLength": 3,
                          "minLength": 0,
                          "type": "string"
                        },
                        "amount": {
                          "maximum": 2147483647,
                          "minimum": 0.01,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
                          "example": 100
                        },
                        "currencyCode": {
                          "type": "string",
                          "description": "Currency of the account in ISO 4217 format. Default is GBP",
                          "enum": [
                            "GBP",
                            "EUR",
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BOV",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHE",
                            "CHF",
                            "CHW",
                            "CLF",
                            "CLP",
                            "CNY",
                            "COP",
                            "COU",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "FJD",
                            "FKP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MXV",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SLE",
                            "SLL",
                            "SOS",
                            "SRD",
                            "SSP",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "SHP",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "USN",
                            "UYI",
                            "UYU",
                            "UYW",
                            "UZS",
                            "VES",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XAG",
                            "XAU",
                            "XBA",
                            "XBB",
                            "XBC",
                            "XBD",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPD",
                            "XPF",
                            "XPT",
                            "XSU",
                            "XTS",
                            "XUA",
                            "XXX",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWL"
                          ]
                        },
                        "information": {
                          "maxLength": 35,
                          "minLength": 0,
                          "type": "string"
                        }
                      },
                      "description": "Structured regulatory reporting"
                    }
                  },
                  "description": "Regulatory reporting"
                },
                "paymentDate": {
                  "type": "string",
                  "description": "The future date on which to make the payment. Date format 'yyyy-MM-dd'.\n\nNot applicable for international payments which will be submitted on date of submission or next working day, in line with cut-offs.",
                  "example": "2017-01-28"
                },
                "overseasPaymentDetail": {
                  "type": "object",
                  "properties": {
                    "ultimatePayer": {
                      "required": [
                        "address",
                        "name"
                      ],
                      "type": "object",
                      "properties": {
                        "name": {
                          "maxLength": 70,
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the ultimate payer"
                        },
                        "address": {
                          "required": [
                            "country"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "maxLength": 70,
                              "minLength": 0,
                              "type": "string",
                              "description": "First line of the ultimate payers address",
                              "example": "2nd Floor"
                            },
                            "addressLine2": {
                              "maxLength": 70,
                              "minLength": 0,
                              "type": "string",
                              "description": "Second line of the ultimate payers address",
                              "example": "123 High Street"
                            },
                            "postTown": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Postal town of the ultimate payers address",
                              "example": "Edinburgh"
                            },
                            "postCode": {
                              "maxLength": 16,
                              "minLength": 0,
                              "type": "string",
                              "description": "Post code of the ultimate payers address",
                              "example": "AB12 3XX"
                            },
                            "country": {
                              "type": "string",
                              "description": "ISO 3166 country code of the ultimate payers address",
                              "example": "GB"
                            }
                          }
                        },
                        "birthDetails": {
                          "type": "object",
                          "properties": {
                            "dateOfBirth": {
                              "pattern": "^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$",
                              "type": "string",
                              "description": "Date of birth in ISO 8601 format of the ultimate payer",
                              "example": "1978-01-01"
                            },
                            "cityOfBirth": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "City of birth of the ultimate payer",
                              "example": "Edinburgh"
                            },
                            "countryOfBirth": {
                              "type": "string",
                              "description": "ISO 3166 country code of the ultimate payers country of birth",
                              "example": "GB"
                            }
                          },
                          "description": "Birth details of a person. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                        },
                        "officialIdentification": {
                          "type": "object",
                          "properties": {
                            "drivingLicenceNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Driving licence number",
                              "example": "JONES849339TS8AD"
                            },
                            "customerNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Customer number",
                              "example": "23547326547632"
                            },
                            "socialSecurityNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Social security number or equivalent",
                              "example": "1110000000022AB"
                            },
                            "passportNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Passport number",
                              "example": "123456789"
                            },
                            "idCardNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "National ID card number",
                              "example": "123456789"
                            },
                            "otherIdNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Other ID number",
                              "example": "123456789"
                            }
                          },
                          "description": "Official identification for a person. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                        },
                        "officialIdDetailOrgs": {
                          "type": "object",
                          "properties": {
                            "bankPartyIdentification": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Bank party identification",
                              "example": "12345"
                            },
                            "centralBankIdNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Central bank identification number",
                              "example": "678910"
                            },
                            "clearingIdNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Clearing identification Number",
                              "example": "xx15402"
                            },
                            "certificateOfIncorporationNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Certification of the incorporation number",
                              "example": "1100010"
                            },
                            "countryIdCode": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Country identification code",
                              "example": "111111"
                            },
                            "customerNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Customer number",
                              "example": "00221133"
                            },
                            "dataUniversalNumberingSystem": {
                              "pattern": "^[0-9]{9,9}?$",
                              "type": "string",
                              "description": "Data universal numbering system",
                              "example": "002211330"
                            },
                            "employerIdNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Employer identification number",
                              "example": "00221133"
                            },
                            "gs1glnIdentifier": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "GS1GLN identifier",
                              "example": "00221133"
                            },
                            "sirenCode": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "SIREN code",
                              "example": "00221133"
                            },
                            "siretCode": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "SIRET code",
                              "example": "00221133"
                            },
                            "taxIdNumber": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Tax identification number",
                              "example": "00221133"
                            },
                            "bicIdentifier": {
                              "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                              "type": "string",
                              "description": "BICI identification",
                              "example": "MGALODJAO7A"
                            },
                            "ibeiIdentifier": {
                              "pattern": "^[A-Z]{2,2}[B-DF-HJ-NP-TV-XZ0-9]{7,7}[0-9]{1,1}?$",
                              "type": "string",
                              "description": "IBEI identification",
                              "example": "HIZFTMTT59"
                            },
                            "beiIdentifier": {
                              "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                              "type": "string",
                              "description": "BEI identification",
                              "example": "MHIHISVZUMH"
                            },
                            "eanglnIdentifier": {
                              "pattern": "^[0-9]{13,13}?$",
                              "type": "string",
                              "description": "EANGLN identification",
                              "example": "7516164953429"
                            },
                            "chipsUniversalIdentifier": {
                              "pattern": "^CH[0-9]{6,6}?$",
                              "type": "string",
                              "description": "CHIPS universal identification",
                              "example": "CH157373"
                            },
                            "genericIdentification3": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Generic identification 3",
                              "example": "123456788"
                            },
                            "genericIdentificationIssr": {
                              "maxLength": 35,
                              "minLength": 0,
                              "type": "string",
                              "description": "Generic identification issr",
                              "example": "13143225"
                            }
                          },
                          "description": "Organisation's official identification. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
                        },
                        "overseasAccountIdentifier": {
                          "type": "object",
                          "properties": {
                            "iban": {
                              "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}$",
                              "type": "string",
                              "description": "International Bank Account Number (IBAN)",
                              "example": "GB20MODR00000000000001"
                            },
                            "bban": {
                              "pattern": "^[a-zA-Z0-9]{1,30}$",
                              "type": "string",
                              "description": "Basic Bank Account Number (BBAN)",
                              "example": "NWBK60161331926819"
                            },
                            "upic": {
                              "pattern": "^\\d{8,17}$",
                              "type": "string",
                              "description": "Universal Payment Identification Code (UPIC)",
                              "example": "987654321"
                            },
                            "otherAccountNumber": {
                              "pattern": "^[a-zA-Z0-9]{1,34}$",
                              "type": "string",
                              "description": "Other Account ID",
                              "example": "987654321"
                            }
                          }
                        },
                        "bic": {
                          "pattern": "^[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?$",
                          "type": "string",
                          "description": "Destination beneficiary's BIC/Swift Code.",
                          "example": "MODRDEFF123"
                        }
                      }
                    },
                    "originalPaymentDetails": {
                      "required": [
                        "amount",
                        "currency",
                        "exchangeRate"
                      ],
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "description": "Amount of currency that the payment is in",
                          "example": 1000.45
                        },
                        "exchangeRate": {
                          "type": "number",
                          "description": "Exchange rate",
                          "example": 1.45
                        },
                        "currency": {
                          "type": "string",
                          "description": "ISO 4217 currency code that the amount is in",
                          "enum": [
                            "GBP",
                            "EUR",
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BOV",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHE",
                            "CHF",
                            "CHW",
                            "CLF",
                            "CLP",
                            "CNY",
                            "COP",
                            "COU",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "FJD",
                            "FKP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MXV",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SLE",
                            "SLL",
                            "SOS",
                            "SRD",
                            "SSP",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "SHP",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "USN",
                            "UYI",
                            "UYU",
                            "UYW",
                            "UZS",
                            "VES",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XAG",
                            "XAU",
                            "XBA",
                            "XBB",
                            "XBC",
                            "XBD",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPD",
                            "XPF",
                            "XPT",
                            "XSU",
                            "XTS",
                            "XUA",
                            "XXX",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWL"
                          ]
                        }
                      }
                    },
                    "chargeDetails": {
                      "required": [
                        "amount",
                        "bearer",
                        "currency"
                      ],
                      "type": "object",
                      "properties": {
                        "bearer": {
                          "type": "string",
                          "description": "Information about bearer of the charges. Its can be Creditor, Debtor or shared between both",
                          "example": "CRED",
                          "enum": [
                            "CRED",
                            "DEBT",
                            "SHAR"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Amount of the charges. Max allowed is 999999999999.99",
                          "example": 100
                        },
                        "currency": {
                          "type": "string",
                          "description": "Currency of charge. Should be ISO Standard currency",
                          "example": "GBP",
                          "enum": [
                            "GBP",
                            "EUR",
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BOV",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHE",
                            "CHF",
                            "CHW",
                            "CLF",
                            "CLP",
                            "CNY",
                            "COP",
                            "COU",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "FJD",
                            "FKP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MXV",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SLE",
                            "SLL",
                            "SOS",
                            "SRD",
                            "SSP",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "SHP",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "USN",
                            "UYI",
                            "UYU",
                            "UYW",
                            "UZS",
                            "VES",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XAG",
                            "XAU",
                            "XBA",
                            "XBB",
                            "XBC",
                            "XBD",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPD",
                            "XPF",
                            "XPT",
                            "XSU",
                            "XTS",
                            "XUA",
                            "XXX",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWL"
                          ]
                        }
                      }
                    },
                    "additionalRemittanceInformation": {
                      "maxLength": 140,
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "description": "Details relating to payment originated overseas.\n\nNot applicable for international payments - all international transactions must originate from the Modulr account creating the payment request."
                },
                "fxQuoteId": {
                  "type": "string",
                  "description": "FX quote ID related to this payment. If supplied, neither 'amount' nor 'currency' should be supplied.",
                  "example": "Q0000001",
                  "deprecated": true
                },
                "destinationId": {
                  "type": "string",
                  "writeOnly": true
                },
                "destinationType": {
                  "type": "string",
                  "writeOnly": true,
                  "enum": [
                    "BENEFICIARY",
                    "ACCOUNT",
                    "IBAN",
                    "SCAN",
                    "INTL",
                    "ANBRN",
                    "AN"
                  ]
                }
              },
              "description": "Details of Payment request"
            }
          }
        },
        "description": "Details of Batch request"
      },
      "account.Customer": {
        "required": [
          "createdDate",
          "id",
          "name",
          "status",
          "type",
          "verificationStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for a Customer. Begins with 'C'",
            "example": "C00000001"
          },
          "name": {
            "type": "string",
            "description": "Customer's company name - must be unique across the Modulr platform."
          },
          "brandNames": {
            "type": "array",
            "description": "The customers brand name(s)",
            "items": {
              "required": [
                "id",
                "name"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for the Brand Name"
                },
                "name": {
                  "type": "string",
                  "description": "The Brand Name"
                }
              },
              "description": "BrandName"
            }
          },
          "type": {
            "type": "string",
            "description": "Type of the customer, can be one of:\n1. LLC -> limited company\n2. PLC -> publicly listed company\n3. SOLETRADER -> sole trader\n4. OPARTNRSHP -> ordinary partnership\n5. LPARTNRSHP -> limited partnership\n6. LLP -> limited liability partnership\n7. CHARITY -> charity\n8. INDIVIDUAL -> individual consumer\n9. PCM_INDIVIDUAL -> partner clearing model individual consumer\n10. PCM_BUSINESS -> partner clearing model business consumer"
          },
          "status": {
            "type": "string",
            "description": "Status of the Customer. Customers must be 'Active' for Accounts to be created for them.",
            "enum": [
              "ACTIVE",
              "CLOSED",
              "BLOCKED"
            ]
          },
          "verificationStatus": {
            "type": "string",
            "description": "How the identity of the Customer has been verified. Can be:\n1. UNVERIFIED -> no verification checks have been completed\n2. VERIFIED -> verification checks completed satisfactorily\n3. EXVERIFIED -> verification completed externally\n4. REFERRED -> verification is pending manual review\n5. DECLINED -> verification is complete with a negative result\n6. REVIEWED -> verification check has been reviewed"
          },
          "companyRegNumber": {
            "type": "string",
            "description": "The company registration / incorporation number of the company. Only applicable for companies registered with Companies House"
          },
          "expectedMonthlySpend": {
            "type": "integer",
            "description": "Indication of the monthly spend of the customer.",
            "format": "int32"
          },
          "registeredAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countrySubDivision": {
                "type": "string"
              }
            },
            "description": "Address"
          },
          "tradingAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countrySubDivision": {
                "type": "string"
              }
            },
            "description": "Address"
          },
          "partnerId": {
            "type": "string",
            "description": "The owning partner identifier"
          },
          "associates": {
            "type": "array",
            "description": "Array of associate objects that link to the Customer. For example, this could contain the details of the company directors for a Limited company, or or the partners for a partnership.",
            "items": {
              "required": [
                "dateOfBirth",
                "firstName",
                "id",
                "lastName",
                "type",
                "verificationStatus"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for the Associate"
                },
                "firstName": {
                  "type": "string",
                  "description": "Associate's first name(s)"
                },
                "middleName": {
                  "type": "string",
                  "description": "Associate's middle name"
                },
                "lastName": {
                  "type": "string",
                  "description": "Associate's surname"
                },
                "email": {
                  "type": "string",
                  "description": "Associate's email address"
                },
                "phone": {
                  "type": "string",
                  "description": "Associate's phone number, in international number format"
                },
                "applicant": {
                  "type": "boolean",
                  "description": "Indicates which Associate originally applied for the Modulr account"
                },
                "ownership": {
                  "type": "integer",
                  "description": "The Associate's percentage ownership of the Customer",
                  "format": "int32"
                },
                "type": {
                  "type": "string",
                  "description": "Describes the relation between the Associate and the Customer. Can be one of "
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "Associate's date of birth in format yyyy-MM-dd, or format yyyy-MM where day is unknown"
                },
                "verificationStatus": {
                  "type": "string",
                  "description": "How the Associate was verified. Can be one of "
                },
                "homeAddress": {
                  "required": [
                    "addressLine1",
                    "country",
                    "postCode",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string"
                    },
                    "addressLine2": {
                      "type": "string"
                    },
                    "postTown": {
                      "type": "string"
                    },
                    "postCode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "countrySubDivision": {
                      "type": "string"
                    }
                  },
                  "description": "Address"
                },
                "documentInfo": {
                  "type": "array",
                  "description": "Documents gathered during Customer Due Diligence checks on an Associate.",
                  "items": {
                    "required": [
                      "fileName",
                      "path",
                      "uploadedDate"
                    ],
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "uploadedDate": {
                        "type": "string",
                        "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                        "example": "2017-01-28T01:01:01+0000"
                      }
                    },
                    "description": "Document"
                  }
                },
                "additionalPersonalIdentifiers": {
                  "type": "array",
                  "description": "Additional personal identifier(s)",
                  "items": {
                    "required": [
                      "type",
                      "value"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of Additional Personal Identifier",
                        "enum": [
                          "BSN"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Additional Personal Identifier value"
                      }
                    },
                    "description": "AdditionalPersonalIdentifier"
                  }
                },
                "complianceData": {
                  "type": "object",
                  "properties": {
                    "relationship": {
                      "type": "string"
                    }
                  },
                  "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
                }
              },
              "description": "Associate"
            }
          },
          "industryCode": {
            "type": "string"
          },
          "tcsVersion": {
            "type": "integer",
            "description": "Version of the Modulr Account Terms and Conditions the Customer has agreed to.",
            "format": "int32"
          },
          "documentInfo": {
            "type": "array",
            "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement.",
            "items": {
              "required": [
                "fileName",
                "path",
                "uploadedDate"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "uploadedDate": {
                  "type": "string",
                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "example": "2017-01-28T01:01:01+0000"
                }
              },
              "description": "Document"
            }
          },
          "externalReference": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "description": "Datetime when the customer was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "delegate": {
            "required": [
              "created",
              "id",
              "name",
              "roleId",
              "status",
              "updated"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique reference for the Delegate.",
                "example": "D0000001"
              },
              "name": {
                "type": "string",
                "description": "Name for the Delegate"
              },
              "address": {
                "required": [
                  "addressLine1",
                  "country",
                  "postCode",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "postTown": {
                    "type": "string"
                  },
                  "postCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countrySubDivision": {
                    "type": "string"
                  }
                },
                "description": "Address"
              },
              "roleId": {
                "type": "string",
                "description": "The id of the Role assigned to the delegate",
                "example": "R02002M5"
              },
              "externalReference": {
                "type": "string",
                "description": "External system reference for the Delegate"
              },
              "partner": {
                "type": "string",
                "description": "Partner Bid.",
                "example": "R0000001"
              },
              "status": {
                "type": "string",
                "description": "Status of the Delegate."
              },
              "created": {
                "type": "string",
                "description": "Datetime the Delegate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                "format": "date-time"
              },
              "updated": {
                "type": "string",
                "description": "Datetime the Delegate was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                "format": "date-time"
              }
            },
            "description": "Delegate"
          },
          "legalEntity": {
            "type": "string",
            "description": "Legal entity of the customer",
            "enum": [
              "GB",
              "NL",
              "IE"
            ]
          },
          "customerTrust": {
            "type": "object",
            "properties": {
              "trustNature": {
                "type": "string",
                "enum": [
                  "BARE_TRUSTS",
                  "INTEREST_IN_POSSESSION_TRUSTS",
                  "DISCRETIONARY_TRUSTS",
                  "ACCUMULATION_TRUSTS",
                  "MIXED_TRUSTS",
                  "SETTLOR_INTERESTED_TRUSTS",
                  "NON_RESIDENT_TRUSTS",
                  "OFFSHORE_TRUSTS",
                  "FAMILY_LIVING_TRUST",
                  "PILOT_TRUST",
                  "VULNERABLE_BENEFICIARY_TRUST",
                  "CHARITABLE_TRUSTS",
                  "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                  "TESTAMENTARY_TRUSTS",
                  "OTHER"
                ]
              }
            },
            "description": "Trust nature for customers of type trust. Mandatory for type Trust, not to be set for non-trust customers."
          },
          "taxProfile": {
            "required": [
              "taxIdentifier"
            ],
            "type": "object",
            "properties": {
              "taxIdentifier": {
                "type": "string",
                "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
              }
            },
            "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
          },
          "complianceData": {
            "type": "object",
            "properties": {
              "typeDescription": {
                "type": "string"
              },
              "riskLevel": {
                "type": "string",
                "enum": [
                  "LOW",
                  "MEDIUM",
                  "HIGH",
                  "UNDETERMINED"
                ]
              },
              "vulnerabilityReasons": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "LIFE_EVENTS",
                    "HEALTH",
                    "RESILIENCE",
                    "CAPABILITY",
                    "FINANCIAL_DIFFICULTY"
                  ]
                }
              }
            },
            "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
          },
          "complianceSector": {
            "type": "string",
            "example": "Agency Lite Consumer"
          },
          "generateStatements": {
            "type": "boolean",
            "description": "True if the customer is configured to generate statements"
          }
        },
        "description": "A Customer is a single legal entity that can have 1 or more accounts"
      },
      "payment.PaymentPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "details",
                "externalReference",
                "id",
                "status"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for the Payment request. 10 characters long",
                  "example": "P000001ABC"
                },
                "status": {
                  "type": "string",
                  "description": "Current status of payment.",
                  "enum": [
                    "SUBMITTED",
                    "SCREENING_REQ",
                    "VALIDATED",
                    "PENDING_FOR_DATE",
                    "PENDING_FOR_FUNDS",
                    "EXT_PROC",
                    "PROCESSED",
                    "RECONCILED",
                    "ER_INVALID",
                    "ER_EXTCONN",
                    "ER_EXTSYS",
                    "ER_EXPIRED",
                    "ER_GENERAL",
                    "ER_BATCH",
                    "EXT_SENT",
                    "UNALLOCATED",
                    "HELD",
                    "RETURNED",
                    "CANCELLED",
                    "REPROCESSING",
                    "VOID",
                    "CLEARING"
                  ]
                },
                "createdDate": {
                  "type": "string",
                  "description": "Datetime the request was created. Format is 'yyyy-MM-dd'T'HH:mm:ss.sssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01.010+0000'",
                  "format": "date-time"
                },
                "externalReference": {
                  "type": "string",
                  "description": "external reference if provided",
                  "example": "aReference_00001"
                },
                "details": {
                  "type": "object",
                  "description": "All the details of the payment from the original request"
                },
                "approvalStatus": {
                  "type": "string",
                  "description": "Current approval status of payment",
                  "enum": [
                    "NOTNEEDED",
                    "PENDING",
                    "APPROVED",
                    "REJECTED",
                    "DELETED"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Information about payment (if available)"
                },
                "schemeInfo": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "responseCode": {
                      "type": "string"
                    }
                  },
                  "description": "Information with regards to the payment scheme"
                },
                "createdBy": {
                  "type": "string",
                  "description": "ID of the user that created the payment"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "PAYIN",
                    "PAYOUT",
                    "RETURN"
                  ]
                },
                "paymentScheduledDate": {
                  "type": "string",
                  "description": "Datetime of the payment scheduled at. Format is 'yyyy-MM-dd'T'HH:mm:ss.sssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01.010+0000'",
                  "format": "date-time"
                },
                "currentUserCanApprove": {
                  "type": "boolean",
                  "description": "Indicates if current user can approve the payment"
                },
                "approvals": {
                  "type": "array",
                  "description": "List of approvals performed on the payment",
                  "items": {
                    "type": "object",
                    "properties": {
                      "approvedBy": {
                        "type": "string",
                        "description": "ID of user who approved this batch payment request",
                        "example": "U2100021"
                      },
                      "approvedOn": {
                        "type": "string",
                        "description": "Date this approval was applied",
                        "format": "date",
                        "example": "2022-06-25"
                      }
                    },
                    "description": "A single approval against a batch payment request"
                  }
                }
              }
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "account.TransactionResponse": {
        "required": [
          "amount",
          "credit",
          "currency",
          "id",
          "postedDate",
          "sourceId",
          "transactionDate",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the Transaction",
            "example": "T0000001"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the transaction in Major Currency Units"
          },
          "currency": {
            "type": "string",
            "description": "Currency of the account in ISO 4217 format",
            "example": "GBP"
          },
          "description": {
            "type": "string",
            "description": "Description of the transaction. Contains Payer/ Payee details and reference"
          },
          "transactionDate": {
            "type": "string",
            "description": "Datetime when the transaction took place. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "postedDate": {
            "type": "string",
            "description": "Datetime when the transaction was posted to the Modulr system. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "credit": {
            "type": "boolean",
            "description": "Indicates if the transaction was a Credit or a Debit"
          },
          "type": {
            "type": "string",
            "description": "Enumerated type indicating the type of the transaction"
          },
          "sourceId": {
            "type": "string"
          },
          "sourceExternalReference": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "object",
            "description": "any extra information available on transaction."
          },
          "account": {
            "required": [
              "availableBalance",
              "balance",
              "createdDate",
              "currency",
              "customerId",
              "id",
              "identifiers",
              "name",
              "status"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique id for the account",
                "example": "A0000001"
              },
              "name": {
                "type": "string",
                "description": "Name for the account"
              },
              "balance": {
                "type": "string",
                "description": "Balance of the account in format 'NN.NN'",
                "example": "10000.0"
              },
              "availableBalance": {
                "type": "string",
                "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
                "example": "10000.0"
              },
              "currency": {
                "type": "string",
                "description": "Currency of the account in ISO 4217 format",
                "example": "GBP"
              },
              "status": {
                "type": "string",
                "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
                "example": "ACTIVE"
              },
              "identifiers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "accountNumber": {
                      "type": "string",
                      "description": "Bank account Sort Code",
                      "example": "12345678"
                    },
                    "accountType": {
                      "type": "string",
                      "description": "Bank account type like PERSONAL/BUSINESS",
                      "enum": [
                        "PERSONAL",
                        "BUSINESS"
                      ]
                    },
                    "sortCode": {
                      "type": "string",
                      "description": "Bank account Sort Code",
                      "example": "000000"
                    },
                    "iban": {
                      "type": "string",
                      "example": "GB20MODR04001401100000"
                    },
                    "bic": {
                      "type": "string",
                      "example": "MODRGB21"
                    },
                    "currency": {
                      "type": "string",
                      "example": "GBP"
                    },
                    "countrySpecificDetails": {
                      "type": "object",
                      "properties": {
                        "bankName": {
                          "type": "string",
                          "description": "The name of the destination bank.",
                          "example": "Apple Bank"
                        },
                        "bankAddress": {
                          "type": "string",
                          "description": "The address of the destination bank.",
                          "example": "2100 Broadway"
                        },
                        "bankCity": {
                          "type": "string",
                          "description": "The city in which the destination bank resides.",
                          "example": "New York City"
                        },
                        "bankBranchName": {
                          "type": "string",
                          "description": "The name of the destination bank's branch.",
                          "example": "New York"
                        },
                        "bankBranchCode": {
                          "type": "string",
                          "description": "The code of the destination bank's branch.",
                          "example": "44-04"
                        },
                        "bankCode": {
                          "type": "string",
                          "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                        },
                        "chineseId": {
                          "type": "string",
                          "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                          "example": "01101201901018889"
                        },
                        "province": {
                          "type": "string",
                          "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                          "example": "Zhejiang"
                        },
                        "business": {
                          "type": "boolean",
                          "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                          "example": true
                        },
                        "bankCodeType": {
                          "type": "string",
                          "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                          "example": "ABA",
                          "enum": [
                            "ABA",
                            "CHIPS"
                          ]
                        },
                        "bankCountry": {
                          "type": "string",
                          "description": "The country in which the destination bank resides.",
                          "example": "US",
                          "enum": [
                            "AT",
                            "BE",
                            "BG",
                            "CY",
                            "CZ",
                            "DK",
                            "EE",
                            "FI",
                            "FR",
                            "DE",
                            "GR",
                            "HR",
                            "HU",
                            "IS",
                            "IE",
                            "IT",
                            "LV",
                            "LI",
                            "LT",
                            "LU",
                            "MT",
                            "NL",
                            "NO",
                            "PL",
                            "PT",
                            "RO",
                            "SK",
                            "SI",
                            "ES",
                            "SE",
                            "GB",
                            "MQ",
                            "YT",
                            "GP",
                            "GF",
                            "RE",
                            "MF",
                            "GI",
                            "GG",
                            "IM",
                            "JE",
                            "MC",
                            "CH",
                            "AD",
                            "SM",
                            "VA",
                            "AX",
                            "PM",
                            "BL",
                            "AF",
                            "AL",
                            "DZ",
                            "AS",
                            "AO",
                            "AI",
                            "AQ",
                            "AG",
                            "AR",
                            "AM",
                            "AW",
                            "AU",
                            "AZ",
                            "BS",
                            "BH",
                            "BD",
                            "BB",
                            "BY",
                            "BZ",
                            "BJ",
                            "BM",
                            "BT",
                            "BO",
                            "BQ",
                            "BA",
                            "BW",
                            "BV",
                            "BR",
                            "IO",
                            "VG",
                            "BN",
                            "BF",
                            "BI",
                            "KH",
                            "CM",
                            "CA",
                            "CV",
                            "KY",
                            "CF",
                            "TD",
                            "CL",
                            "CN",
                            "CX",
                            "CC",
                            "CO",
                            "KM",
                            "CK",
                            "CR",
                            "CU",
                            "CW",
                            "CD",
                            "DJ",
                            "DM",
                            "DO",
                            "TL",
                            "EC",
                            "EG",
                            "SV",
                            "GQ",
                            "ER",
                            "SZ",
                            "ET",
                            "FK",
                            "FO",
                            "FJ",
                            "PF",
                            "TF",
                            "GA",
                            "GM",
                            "GE",
                            "GH",
                            "GL",
                            "GD",
                            "GU",
                            "GT",
                            "GN",
                            "GW",
                            "GY",
                            "HT",
                            "HM",
                            "HN",
                            "HK",
                            "IN",
                            "ID",
                            "IR",
                            "IQ",
                            "IL",
                            "CI",
                            "JM",
                            "JP",
                            "JO",
                            "KZ",
                            "KE",
                            "KI",
                            "XK",
                            "KW",
                            "KG",
                            "LA",
                            "LB",
                            "LS",
                            "LR",
                            "LY",
                            "MO",
                            "MG",
                            "MW",
                            "MY",
                            "MV",
                            "ML",
                            "MH",
                            "MR",
                            "MU",
                            "MX",
                            "FM",
                            "MD",
                            "MN",
                            "ME",
                            "MS",
                            "MA",
                            "MZ",
                            "MM",
                            "NA",
                            "NR",
                            "NP",
                            "AN",
                            "NC",
                            "NZ",
                            "NI",
                            "NE",
                            "NG",
                            "NU",
                            "NF",
                            "KP",
                            "MK",
                            "MP",
                            "OM",
                            "PK",
                            "PW",
                            "PS",
                            "PA",
                            "PG",
                            "PY",
                            "PE",
                            "PH",
                            "PN",
                            "PR",
                            "QA",
                            "CG",
                            "RU",
                            "RW",
                            "SH",
                            "KN",
                            "LC",
                            "VC",
                            "WS",
                            "ST",
                            "SA",
                            "SN",
                            "RS",
                            "SC",
                            "SL",
                            "SG",
                            "SX",
                            "SB",
                            "SO",
                            "ZA",
                            "KR",
                            "GS",
                            "SS",
                            "LK",
                            "SD",
                            "SR",
                            "SY",
                            "SJ",
                            "TW",
                            "TJ",
                            "TZ",
                            "TH",
                            "TG",
                            "TK",
                            "TO",
                            "TT",
                            "TN",
                            "TR",
                            "TM",
                            "TC",
                            "TV",
                            "UG",
                            "UA",
                            "AE",
                            "UM",
                            "US",
                            "UY",
                            "UZ",
                            "VU",
                            "VE",
                            "VN",
                            "VI",
                            "WF",
                            "EH",
                            "YE",
                            "ZM",
                            "ZW"
                          ]
                        },
                        "abaRoutingNumber": {
                          "type": "string",
                          "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                          "example": "123456789"
                        }
                      },
                      "example": {
                        "branchCode": "123456789"
                      }
                    }
                  },
                  "description": "Account Identifier"
                }
              },
              "customerId": {
                "type": "string",
                "description": "Unique id of the Customer",
                "example": "C0000001"
              },
              "customerName": {
                "type": "string",
                "description": "Customer Name"
              },
              "externalReference": {
                "type": "string",
                "description": "Your reference for an account",
                "example": "aReference_00001"
              },
              "accessGroups": {
                "type": "array",
                "description": "Ids of Access Groups this account belongs to",
                "items": {
                  "type": "string",
                  "description": "Ids of Access Groups this account belongs to"
                }
              },
              "createdDate": {
                "type": "string",
                "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                "format": "date-time"
              },
              "directDebit": {
                "type": "boolean",
                "description": "Direct Debit Enabled"
              },
              "securedFundingLimit": {
                "type": "string",
                "description": "Limit of funds available below a balance of zero"
              }
            },
            "description": "Account"
          }
        },
        "description": "Transaction"
      },
      "card.OneTimeTokenRequest": {
        "type": "object",
        "properties": {
          "publicKey": {
            "type": "string",
            "description": "Base64 UTF-8 encoded RSA public key to be used to encrypt the token in the response. The key must be at least 4096 bits in length."
          },
          "purpose": {
            "type": "string",
            "description": "What the token will be used for. UPDATE tokens cannot be used for READ purposes, and READ tokens cannot be used for updates.",
            "default": "READ",
            "enum": [
              "READ",
              "UPDATE"
            ]
          }
        }
      },
      "directdebitoutbound.EnquiryMandateResponse": {
        "required": [
          "auddisIndicator",
          "mandateId",
          "mandateReference",
          "mandateStatus",
          "merchantAccountNumber",
          "merchantName",
          "merchantNumber",
          "merchantSortCode",
          "setupDate"
        ],
        "type": "object",
        "properties": {
          "mandateId": {
            "type": "string",
            "description": "Mandate Id"
          },
          "merchantNumber": {
            "type": "string",
            "description": "Merchant Number"
          },
          "merchantName": {
            "type": "string",
            "description": "Merchant Name"
          },
          "merchantAccountNumber": {
            "type": "string",
            "description": "Merchant Account Number"
          },
          "merchantSortCode": {
            "type": "string",
            "description": "Merchant Sort Code"
          },
          "mandateStatus": {
            "type": "string",
            "description": "Status"
          },
          "auddisIndicator": {
            "type": "string",
            "description": "AUDDIS Flag (AUDDIS / Non-AUDDIS)",
            "enum": [
              "A",
              "N"
            ]
          },
          "setupDate": {
            "type": "string",
            "description": "Setup date"
          },
          "mandateReference": {
            "type": "string",
            "description": "Mandate Reference"
          }
        },
        "description": "List of Mandates"
      },
      "directdebit.CreateCollectionScheduleRequest": {
        "required": [
          "currency",
          "frequency",
          "numberOfPayments"
        ],
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "description": "Frequency for direct-debit collection. Can be one of: ONCE, WEEKLY, EVERY_TWO_WEEKS, EVERY_FOUR_WEEKS, MONTHLY, QUARTERLY, SEMI_ANNUALLY, ANNUALLY.",
            "enum": [
              "ONCE",
              "MONTHLY",
              "QUARTERLY",
              "SEMI_ANNUALLY",
              "ANNUALLY",
              "WEEKLY",
              "EVERY_TWO_WEEKS",
              "EVERY_FOUR_WEEKS"
            ]
          },
          "numberOfPayments": {
            "minimum": 1,
            "type": "integer",
            "description": "Number of payments for direct-debit collection, must be '1' where frequency is 'ONCE'.",
            "format": "int32"
          },
          "firstPaymentAmount": {
            "maximum": 20000000,
            "minimum": 0.01,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Amount of the first collection payment.<br>\nNote: your item limit is set during onboarding will be lower than field maximum and Bacs scheme item limit of Â£20m.",
            "example": 100
          },
          "firstPaymentDate": {
            "type": "string",
            "description": "Date of the first collection payment, format must be: yyyy-MM-dd",
            "example": "2018-01-10"
          },
          "regularPaymentAmount": {
            "maximum": 20000000,
            "minimum": 0.01,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Amount of the regular collection payments following first collection amount. Does not apply where the frequency is 'ONCE'.<br>\nNote: your item limit is set during onboarding will be lower than field maximum and Bacs scheme item limit of Â£20m",
            "example": 100
          },
          "regularPaymentStartDate": {
            "type": "string",
            "description": "Start date of the regular collection payment, format: yyyy-MM-dd<br> Note: Does not apply where the frequency is 'ONCE'.",
            "example": "2018-01-10"
          },
          "currency": {
            "type": "string",
            "description": "Currency in which payment should be made. Must be 'GBP' currently."
          },
          "externalReference": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w-\\s]*",
            "type": "string",
            "description": "External Reference for collection schedule, should contain only alphanumeric characters, underscore, hyphen and space.<br> For your internal reconciliation only, not sent to Bacs scheme.",
            "example": "REFERENCE - 12"
          },
          "collectionReference": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "[\\w-\\s]*",
            "type": "string",
            "description": "An optional additional collection specific reference to be appended to the reference of the mandate.<br>\nThis is concatenated after the  core reference of the mandate, and will be truncated if combined reference is >18 characters.<br>\nShould only contain alphanumeric characters, dot, ampersand, forward-slash and hyphen only.",
            "example": "ABCD - EFGH"
          },
          "collectionCorrelationName": {
            "maxLength": 18,
            "minLength": 0,
            "pattern": "^[a-zA-Z 0-9\\.\\&\\/-]+$",
            "type": "string",
            "description": "(If enabled by Modulr) an optional collection specific reference appended to abbreviated SU name for the given collection schedule. If feature not enabled, any parameter supplied will be ignored.<br>\nWhen is enabled, this value is concatenated to a Service User Name abbreviation (set by Modulr) to form a Service User name containing extra information that can be used by payer to correlate (identify) transaction easily.<br>\nCharacters restricted to: alphanumeric characters, numbers, space, dot, ampersand, forward-slash and hyphen only.",
            "example": "TEST/NAME-1.2"
          }
        },
        "description": "Details of collection to create."
      },
      "card.ReportTypeNotificationPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              },
              "description": "List of responses on the current page"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "card.Constraints": {
        "type": "object",
        "properties": {
          "authorisation": {
            "type": "object",
            "properties": {
              "spend": {
                "type": "array",
                "description": "Spending constraints",
                "items": {
                  "required": [
                    "currency"
                  ],
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "description": "A 3 letter ISO 4217 code representing the transaction currency",
                      "example": "GBP",
                      "enum": [
                        "GBP",
                        "EUR",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHE",
                        "CHF",
                        "CHW",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "FJD",
                        "FKP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SLE",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "SHP",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "USN",
                        "UYI",
                        "UYU",
                        "UYW",
                        "UZS",
                        "VES",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XAG",
                        "XAU",
                        "XBA",
                        "XBB",
                        "XBC",
                        "XBD",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPD",
                        "XPF",
                        "XPT",
                        "XSU",
                        "XTS",
                        "XUA",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWL"
                      ]
                    },
                    "min": {
                      "type": "number",
                      "description": "Minimum spend amount (inclusive)",
                      "example": 5
                    },
                    "max": {
                      "type": "number",
                      "description": "Maximum spend amount (inclusive)",
                      "example": 2000
                    }
                  },
                  "description": "Spending constraints"
                }
              }
            },
            "description": "Authorisation constraints"
          }
        },
        "description": "Constraints"
      },
      "onboarding.AssociateComplianceDataRequest": {
        "required": [
          "relationship"
        ],
        "type": "object",
        "properties": {
          "relationship": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
      },
      "notification.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "payment.PaymentDetails": {
        "required": [
          "amount",
          "currency",
          "exchangeRate"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount of currency that the payment is in",
            "example": 1000.45
          },
          "exchangeRate": {
            "type": "number",
            "description": "Exchange rate",
            "example": 1.45
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 currency code that the amount is in",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          }
        }
      },
      "document.DocumentResponse": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          }
        }
      },
      "payment.status": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Payment status, multiple statuses can be specified by repeating the parameter",
          "enum": [
            "SUBMITTED",
            "SCREENING_REQ",
            "VALIDATED",
            "PENDING_FOR_DATE",
            "PENDING_FOR_FUNDS",
            "EXT_PROC",
            "PROCESSED",
            "RECONCILED",
            "ER_INVALID",
            "ER_EXTCONN",
            "ER_EXTSYS",
            "ER_EXPIRED",
            "ER_GENERAL",
            "ER_BATCH",
            "EXT_SENT",
            "UNALLOCATED",
            "HELD",
            "RETURNED",
            "CANCELLED",
            "REPROCESSING",
            "VOID",
            "CLEARING"
          ]
        }
      },
      "notification.WebHookFailureResponse": {
        "required": [
          "customerBid",
          "eventName",
          "lastFailedTime",
          "retry",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Endpoint URL for receiving webhook data"
          },
          "eventName": {
            "type": "string",
            "description": "Event which would trigger the webhook",
            "enum": [
              "PAYIN",
              "PAYOUT",
              "BALANCE_LOW",
              "BALANCE_HIGH",
              "BALANCE",
              "DDMANDATE",
              "CUSTVSTAT",
              "ACCOUNT_STATEMENT",
              "PENDING_PAYMENTS",
              "DD_INCOMING_DEBIT",
              "DD_FAILED_CLAIM",
              "DD_FUNDS_RETURNED",
              "CARD_AUTH",
              "CARD_CREATION",
              "UPCOMING_CREDIT",
              "UPCOMING_COLLECTION_CREDIT",
              "UPCOMING_COLLECTION_DEBIT",
              "CARD_STATUS_UPDATE",
              "CARD_TOKEN_PROVISIONING",
              "PAYMENT_COMPLIANCE_STATUS",
              "DD_COLLECTION_STATUS",
              "ACCOUNT_SWITCH_UPDATE",
              "PAYMENT_FILE_UPLOAD",
              "ACCOUNT_STATUS_CHANGE"
            ]
          },
          "customerBid": {
            "type": "string",
            "description": "Unique Identifier for the customer of this webhook."
          },
          "retry": {
            "type": "boolean",
            "description": "Turn webhook retry mechanism on/off"
          },
          "lastFailedTime": {
            "type": "string",
            "description": "Last failure time. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01+0000'",
            "format": "date-time"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "payment.POODetails": {
        "type": "object",
        "properties": {
          "ultimatePayer": {
            "required": [
              "address",
              "name"
            ],
            "type": "object",
            "properties": {
              "name": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Name of the ultimate payer"
              },
              "address": {
                "required": [
                  "country"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "First line of the ultimate payers address",
                    "example": "2nd Floor"
                  },
                  "addressLine2": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "Second line of the ultimate payers address",
                    "example": "123 High Street"
                  },
                  "postTown": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Postal town of the ultimate payers address",
                    "example": "Edinburgh"
                  },
                  "postCode": {
                    "maxLength": 16,
                    "minLength": 0,
                    "type": "string",
                    "description": "Post code of the ultimate payers address",
                    "example": "AB12 3XX"
                  },
                  "country": {
                    "type": "string",
                    "description": "ISO 3166 country code of the ultimate payers address",
                    "example": "GB"
                  }
                }
              },
              "birthDetails": {
                "type": "object",
                "properties": {
                  "dateOfBirth": {
                    "pattern": "^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$",
                    "type": "string",
                    "description": "Date of birth in ISO 8601 format of the ultimate payer",
                    "example": "1978-01-01"
                  },
                  "cityOfBirth": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "City of birth of the ultimate payer",
                    "example": "Edinburgh"
                  },
                  "countryOfBirth": {
                    "type": "string",
                    "description": "ISO 3166 country code of the ultimate payers country of birth",
                    "example": "GB"
                  }
                },
                "description": "Birth details of a person. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
              },
              "officialIdentification": {
                "type": "object",
                "properties": {
                  "drivingLicenceNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Driving licence number",
                    "example": "JONES849339TS8AD"
                  },
                  "customerNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Customer number",
                    "example": "23547326547632"
                  },
                  "socialSecurityNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Social security number or equivalent",
                    "example": "1110000000022AB"
                  },
                  "passportNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Passport number",
                    "example": "123456789"
                  },
                  "idCardNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "National ID card number",
                    "example": "123456789"
                  },
                  "otherIdNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Other ID number",
                    "example": "123456789"
                  }
                },
                "description": "Official identification for a person. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
              },
              "officialIdDetailOrgs": {
                "type": "object",
                "properties": {
                  "bankPartyIdentification": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Bank party identification",
                    "example": "12345"
                  },
                  "centralBankIdNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Central bank identification number",
                    "example": "678910"
                  },
                  "clearingIdNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Clearing identification Number",
                    "example": "xx15402"
                  },
                  "certificateOfIncorporationNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Certification of the incorporation number",
                    "example": "1100010"
                  },
                  "countryIdCode": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Country identification code",
                    "example": "111111"
                  },
                  "customerNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Customer number",
                    "example": "00221133"
                  },
                  "dataUniversalNumberingSystem": {
                    "pattern": "^[0-9]{9,9}?$",
                    "type": "string",
                    "description": "Data universal numbering system",
                    "example": "002211330"
                  },
                  "employerIdNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Employer identification number",
                    "example": "00221133"
                  },
                  "gs1glnIdentifier": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "GS1GLN identifier",
                    "example": "00221133"
                  },
                  "sirenCode": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "SIREN code",
                    "example": "00221133"
                  },
                  "siretCode": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "SIRET code",
                    "example": "00221133"
                  },
                  "taxIdNumber": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Tax identification number",
                    "example": "00221133"
                  },
                  "bicIdentifier": {
                    "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                    "type": "string",
                    "description": "BICI identification",
                    "example": "MGALODJAO7A"
                  },
                  "ibeiIdentifier": {
                    "pattern": "^[A-Z]{2,2}[B-DF-HJ-NP-TV-XZ0-9]{7,7}[0-9]{1,1}?$",
                    "type": "string",
                    "description": "IBEI identification",
                    "example": "HIZFTMTT59"
                  },
                  "beiIdentifier": {
                    "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                    "type": "string",
                    "description": "BEI identification",
                    "example": "MHIHISVZUMH"
                  },
                  "eanglnIdentifier": {
                    "pattern": "^[0-9]{13,13}?$",
                    "type": "string",
                    "description": "EANGLN identification",
                    "example": "7516164953429"
                  },
                  "chipsUniversalIdentifier": {
                    "pattern": "^CH[0-9]{6,6}?$",
                    "type": "string",
                    "description": "CHIPS universal identification",
                    "example": "CH157373"
                  },
                  "genericIdentification3": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Generic identification 3",
                    "example": "123456788"
                  },
                  "genericIdentificationIssr": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "Generic identification issr",
                    "example": "13143225"
                  }
                },
                "description": "Organisation's official identification. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
              },
              "overseasAccountIdentifier": {
                "type": "object",
                "properties": {
                  "iban": {
                    "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}$",
                    "type": "string",
                    "description": "International Bank Account Number (IBAN)",
                    "example": "GB20MODR00000000000001"
                  },
                  "bban": {
                    "pattern": "^[a-zA-Z0-9]{1,30}$",
                    "type": "string",
                    "description": "Basic Bank Account Number (BBAN)",
                    "example": "NWBK60161331926819"
                  },
                  "upic": {
                    "pattern": "^\\d{8,17}$",
                    "type": "string",
                    "description": "Universal Payment Identification Code (UPIC)",
                    "example": "987654321"
                  },
                  "otherAccountNumber": {
                    "pattern": "^[a-zA-Z0-9]{1,34}$",
                    "type": "string",
                    "description": "Other Account ID",
                    "example": "987654321"
                  }
                }
              },
              "bic": {
                "pattern": "^[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?$",
                "type": "string",
                "description": "Destination beneficiary's BIC/Swift Code.",
                "example": "MODRDEFF123"
              }
            }
          },
          "originalPaymentDetails": {
            "required": [
              "amount",
              "currency",
              "exchangeRate"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Amount of currency that the payment is in",
                "example": 1000.45
              },
              "exchangeRate": {
                "type": "number",
                "description": "Exchange rate",
                "example": 1.45
              },
              "currency": {
                "type": "string",
                "description": "ISO 4217 currency code that the amount is in",
                "enum": [
                  "GBP",
                  "EUR",
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BOV",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHE",
                  "CHF",
                  "CHW",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "COU",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "FJD",
                  "FKP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "SSP",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "SHP",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "USN",
                  "UYI",
                  "UYU",
                  "UYW",
                  "UZS",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XAG",
                  "XAU",
                  "XBA",
                  "XBB",
                  "XBC",
                  "XBD",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPD",
                  "XPF",
                  "XPT",
                  "XSU",
                  "XTS",
                  "XUA",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWL"
                ]
              }
            }
          },
          "chargeDetails": {
            "required": [
              "amount",
              "bearer",
              "currency"
            ],
            "type": "object",
            "properties": {
              "bearer": {
                "type": "string",
                "description": "Information about bearer of the charges. Its can be Creditor, Debtor or shared between both",
                "example": "CRED",
                "enum": [
                  "CRED",
                  "DEBT",
                  "SHAR"
                ]
              },
              "amount": {
                "type": "number",
                "description": "Amount of the charges. Max allowed is 999999999999.99",
                "example": 100
              },
              "currency": {
                "type": "string",
                "description": "Currency of charge. Should be ISO Standard currency",
                "example": "GBP",
                "enum": [
                  "GBP",
                  "EUR",
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BOV",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHE",
                  "CHF",
                  "CHW",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "COU",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "FJD",
                  "FKP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "SSP",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "SHP",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "USN",
                  "UYI",
                  "UYU",
                  "UYW",
                  "UZS",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XAG",
                  "XAU",
                  "XBA",
                  "XBB",
                  "XBC",
                  "XBD",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPD",
                  "XPF",
                  "XPT",
                  "XSU",
                  "XTS",
                  "XUA",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWL"
                ]
              }
            }
          },
          "additionalRemittanceInformation": {
            "maxLength": 140,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": "Details relating to payment originated overseas.\n\nNot applicable for international payments - all international transactions must originate from the Modulr account creating the payment request."
      },
      "rule.RulePageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "accountCurrency",
                "accountId",
                "data",
                "id",
                "masterId",
                "name",
                "type"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for a Rule",
                  "example": "R1000001"
                },
                "type": {
                  "type": "string",
                  "description": "The type of Rule. Can be one of the following {SWEEP, SPLIT, FUNDING}",
                  "enum": [
                    "SPLIT",
                    "SWEEP",
                    "FUNDING"
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Rule's name",
                  "example": "My new rule"
                },
                "accountId": {
                  "type": "string",
                  "description": "The Account which the Rule is created on.",
                  "example": "A1000001"
                },
                "accountCurrency": {
                  "type": "string",
                  "enum": [
                    "GBP",
                    "EUR",
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BOV",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHE",
                    "CHF",
                    "CHW",
                    "CLF",
                    "CLP",
                    "CNY",
                    "COP",
                    "COU",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "FJD",
                    "FKP",
                    "GEL",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRU",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MXV",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SLE",
                    "SLL",
                    "SOS",
                    "SRD",
                    "SSP",
                    "STN",
                    "SVC",
                    "SYP",
                    "SZL",
                    "SHP",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "USN",
                    "UYI",
                    "UYU",
                    "UYW",
                    "UZS",
                    "VES",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XAG",
                    "XAU",
                    "XBA",
                    "XBB",
                    "XBC",
                    "XBD",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPD",
                    "XPF",
                    "XPT",
                    "XSU",
                    "XTS",
                    "XUA",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWL"
                  ]
                },
                "masterId": {
                  "type": "string",
                  "description": "The master rule ID. When a rule is changed, the original is marked as inactive, and a new one created. The master ID enables us to identify those rules which are updates",
                  "example": "M1000001"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "daysToRun": {
                      "type": "array",
                      "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                      "items": {
                        "type": "string",
                        "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                        "enum": [
                          "MONDAY",
                          "TUESDAY",
                          "WEDNESDAY",
                          "THURSDAY",
                          "FRIDAY",
                          "SATURDAY",
                          "SUNDAY"
                        ]
                      }
                    },
                    "frequency": {
                      "type": "string",
                      "description": "Frequency of the rule. Sweep Rule Only",
                      "enum": [
                        "Daily"
                      ]
                    },
                    "destinationId": {
                      "type": "string",
                      "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
                    },
                    "balanceToLeave": {
                      "type": "number",
                      "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
                    },
                    "triggerBalance": {
                      "type": "number",
                      "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
                    },
                    "splits": {
                      "type": "array",
                      "items": {
                        "required": [
                          "destinationId",
                          "percent"
                        ],
                        "type": "object",
                        "properties": {
                          "destinationId": {
                            "type": "string",
                            "description": "Id of destination beneficiary. e.g. B1000001."
                          },
                          "percent": {
                            "type": "string",
                            "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                          }
                        },
                        "description": "Configuration for a Split Rule"
                      }
                    },
                    "conditionalSplits": {
                      "type": "array",
                      "items": {
                        "required": [
                          "destinationId",
                          "percent"
                        ],
                        "type": "object",
                        "properties": {
                          "destinationId": {
                            "type": "string",
                            "description": "Id of destination beneficiary. e.g. B1000001."
                          },
                          "percent": {
                            "type": "string",
                            "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                          }
                        },
                        "description": "Configuration for a Split Rule"
                      }
                    },
                    "conditionalSplitConfig": {
                      "required": [
                        "conditionAmount",
                        "destinationId",
                        "percent"
                      ],
                      "type": "object",
                      "properties": {
                        "destinationId": {
                          "type": "string",
                          "description": "Id of destination beneficiary. e.g. B1000001."
                        },
                        "percent": {
                          "type": "string",
                          "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                        },
                        "conditionAmount": {
                          "maximum": 2147483647,
                          "minimum": 0.01,
                          "exclusiveMinimum": false,
                          "type": "number",
                          "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
                        },
                        "conditionDone": {
                          "type": "boolean",
                          "description": "Whether the condition amount has been met. e.g. true or false"
                        }
                      },
                      "description": "Configuration for a Conditional Split Rule"
                    },
                    "sourceId": {
                      "type": "string",
                      "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
                    }
                  },
                  "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
                }
              }
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "card.CardReplacementResponse": {
        "required": [
          "createdDate",
          "cvv2",
          "expiry",
          "externalRef",
          "id",
          "maxLimit",
          "pan"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card identifier. Maximum of 10 alphanumeric characters."
          },
          "cvv2": {
            "type": "string",
            "description": "Card CVV2 number."
          },
          "pan": {
            "type": "string",
            "description": "Full card PAN."
          },
          "createdDate": {
            "type": "string",
            "description": "The creation date of the card",
            "format": "date-time"
          },
          "externalRef": {
            "type": "string",
            "description": "Client reference for the newly created card."
          },
          "expiry": {
            "type": "string",
            "description": "An ISO 8601 date with year & month components only",
            "example": "2018-12"
          },
          "maxLimit": {
            "type": "string",
            "description": "Maximum limit which can be set on this card and is the maximum lifetime spend the card can have",
            "example": "4000.0"
          },
          "managementToken": {
            "type": "string",
            "description": "Card Management Token required for API users for additional security when managing sensitive card data"
          }
        }
      },
      "notification.NotificationResponse": {
        "required": [
          "channel",
          "config",
          "customerId",
          "destinations",
          "id",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Identifier for the notification."
          },
          "customerId": {
            "type": "string",
            "description": "Unique Identifier for the customer of this notification."
          },
          "type": {
            "type": "string",
            "description": "Type of notification",
            "enum": [
              "PAYIN",
              "PAYOUT",
              "BALANCE_LOW",
              "BALANCE_HIGH",
              "BALANCE",
              "DDMANDATE",
              "CUSTVSTAT",
              "ACCOUNT_STATEMENT",
              "PENDING_PAYMENTS",
              "DD_INCOMING_DEBIT",
              "DD_FAILED_CLAIM",
              "DD_FUNDS_RETURNED",
              "CARD_AUTH",
              "CARD_CREATION",
              "UPCOMING_CREDIT",
              "UPCOMING_COLLECTION_CREDIT",
              "UPCOMING_COLLECTION_DEBIT",
              "CARD_STATUS_UPDATE",
              "CARD_TOKEN_PROVISIONING",
              "PAYMENT_COMPLIANCE_STATUS",
              "DD_COLLECTION_STATUS",
              "ACCOUNT_SWITCH_UPDATE",
              "PAYMENT_FILE_UPLOAD",
              "ACCOUNT_STATUS_CHANGE"
            ]
          },
          "channel": {
            "type": "string",
            "description": "Channel used to send the notification.",
            "enum": [
              "EMAIL",
              "WEBHOOK"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of notification.",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "destinations": {
            "type": "array",
            "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL.",
            "items": {
              "type": "string",
              "description": "A list of emails or url(webhook) used to send the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this will be a single URL."
            }
          },
          "config": {
            "type": "object",
            "properties": {
              "threshold": {
                "minimum": 0,
                "exclusiveMinimum": false,
                "type": "number",
                "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
              },
              "timesToRun": {
                "type": "array",
                "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                "items": {
                  "type": "string",
                  "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                  "enum": [
                    "AM",
                    "PM"
                  ]
                }
              },
              "daysToRun": {
                "type": "array",
                "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                "items": {
                  "type": "string",
                  "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                  "enum": [
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY",
                    "SUNDAY"
                  ]
                }
              },
              "retry": {
                "type": "boolean",
                "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
              },
              "secret": {
                "maxLength": 32,
                "minLength": 32,
                "type": "string",
                "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
              },
              "hmacAlgorithm": {
                "type": "string",
                "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                "enum": [
                  "hmac-sha1",
                  "hmac-sha256",
                  "hmac-sha384",
                  "hmac-sha512"
                ]
              }
            },
            "description": "Configuration information for this Notification entity."
          }
        }
      },
      "directdebit.BulkCancelMandateResponse": {
        "required": [
          "accountId",
          "auddisCancellationDate",
          "id",
          "migrationType",
          "status",
          "totalMandatesRequested"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for this bulk request.",
            "example": "R210000001"
          },
          "accountId": {
            "type": "string",
            "description": "Unique id for account for this bulk request.",
            "example": "A0000001"
          },
          "status": {
            "type": "string",
            "description": "Status for this bulk request."
          },
          "migrationType": {
            "type": "string",
            "description": "Migration type for this bulk request.",
            "enum": [
              "SCHEDULE_AUDDIS_MIGRATION",
              "TRANSFER_OF_SUN"
            ]
          },
          "totalMandatesRequested": {
            "type": "integer",
            "description": "Total mandates requested for this bulk request.",
            "format": "int64"
          },
          "auddisCancellationDate": {
            "type": "string",
            "description": "auddis cancellation date for this bulk request.",
            "format": "date"
          }
        }
      },
      "card.ReportResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "reportSubjectId": {
            "type": "string"
          },
          "reportDate": {
            "type": "string",
            "format": "date"
          },
          "reportType": {
            "type": "string",
            "enum": [
              "DAILY_CARD_ACTIVITY",
              "MONTHLY_CARD_ACTIVITY",
              "DAILY_ACCOUNT_FUNDING",
              "MONTHLY_ACCOUNT_FUNDING",
              "DAILY_AUTH_WINDOW",
              "DAILY_CARD_MANAGEMENT"
            ]
          }
        },
        "description": "List of responses on the current page"
      },
      "onboarding.CustomerTaxProfileRequest": {
        "required": [
          "taxIdentifier"
        ],
        "type": "object",
        "properties": {
          "taxIdentifier": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
          }
        },
        "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
      },
      "onboarding.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "payment.RegulatoryAuthority": {
        "type": "object",
        "properties": {
          "authorityName": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Authority name. Maximum of 70 characters.",
            "example": "Financial Conduct Authority"
          },
          "authorityCountry": {
            "type": "string",
            "description": "ISO 3166 country code of the ultimate payers address",
            "example": "GB",
            "enum": [
              "AT",
              "BE",
              "BG",
              "CY",
              "CZ",
              "DK",
              "EE",
              "FI",
              "FR",
              "DE",
              "GR",
              "HR",
              "HU",
              "IS",
              "IE",
              "IT",
              "LV",
              "LI",
              "LT",
              "LU",
              "MT",
              "NL",
              "NO",
              "PL",
              "PT",
              "RO",
              "SK",
              "SI",
              "ES",
              "SE",
              "GB",
              "MQ",
              "YT",
              "GP",
              "GF",
              "RE",
              "MF",
              "GI",
              "GG",
              "IM",
              "JE",
              "MC",
              "CH",
              "AD",
              "SM",
              "VA",
              "AX",
              "PM",
              "BL",
              "AF",
              "AL",
              "DZ",
              "AS",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "VG",
              "BN",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CK",
              "CR",
              "CU",
              "CW",
              "CD",
              "DJ",
              "DM",
              "DO",
              "TL",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "SZ",
              "ET",
              "FK",
              "FO",
              "FJ",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "GH",
              "GL",
              "GD",
              "GU",
              "GT",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "HN",
              "HK",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IL",
              "CI",
              "JM",
              "JP",
              "JO",
              "KZ",
              "KE",
              "KI",
              "XK",
              "KW",
              "KG",
              "LA",
              "LB",
              "LS",
              "LR",
              "LY",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MH",
              "MR",
              "MU",
              "MX",
              "FM",
              "MD",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "KP",
              "MK",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PR",
              "QA",
              "CG",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "VC",
              "WS",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SB",
              "SO",
              "ZA",
              "KR",
              "GS",
              "SS",
              "LK",
              "SD",
              "SR",
              "SY",
              "SJ",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UM",
              "US",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          }
        },
        "description": "Regulatory authority"
      },
      "pispgateway.CreateVrpConsentInitiationResponse": {
        "type": "object",
        "properties": {
          "vrpConsentInitiationId": {
            "type": "string",
            "description": "The unique identifier of the VRP consent initiation request at Modulr",
            "example": "E210000004"
          },
          "redirectUrl": {
            "type": "string",
            "description": "A redirect URL for the user to authorise the payment initiation request at the ASPSP",
            "example": "https://www.bankofmoney.com/authorize"
          }
        },
        "description": "Response object to Initiate Vrp Consent"
      },
      "onboarding.DelegateResponse": {
        "required": [
          "created",
          "id",
          "name",
          "roleId",
          "status",
          "updated"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique reference for the Delegate.",
            "example": "D0000001"
          },
          "name": {
            "type": "string",
            "description": "Name for the Delegate"
          },
          "address": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countrySubDivision": {
                "type": "string"
              }
            },
            "description": "Address"
          },
          "roleId": {
            "type": "string",
            "description": "The id of the Role assigned to the delegate",
            "example": "R02002M5"
          },
          "externalReference": {
            "type": "string",
            "description": "External system reference for the Delegate"
          },
          "partner": {
            "type": "string",
            "description": "Partner Bid.",
            "example": "R0000001"
          },
          "status": {
            "type": "string",
            "description": "Status of the Delegate."
          },
          "created": {
            "type": "string",
            "description": "Datetime the Delegate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Datetime the Delegate was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          }
        },
        "description": "Delegate"
      },
      "directdebit.CreateMandateRequest": {
        "required": [
          "accountName",
          "accountNumber",
          "address",
          "externalReference",
          "name",
          "phone",
          "reference",
          "sortCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Name for mandate"
          },
          "reference": {
            "maxLength": 18,
            "minLength": 6,
            "pattern": "^[a-zA-Z 0-9\\.\\&\\/-]+$",
            "type": "string",
            "description": "Mandate reference, should contain only letters, numbers, space, dot, ampersand, forward-slash and hyphen",
            "example": "REFER-1.2"
          },
          "externalReference": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w-\\s]*",
            "type": "string",
            "description": "External reference for mandate"
          },
          "accountName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Payee's account name"
          },
          "sortCode": {
            "pattern": "\\p{Digit}{6}",
            "type": "string",
            "description": "Payee's sort code of account for which direct-debit-mandate has to be created.",
            "example": "000000"
          },
          "accountNumber": {
            "pattern": "\\p{Digit}{8}",
            "type": "string",
            "description": "Payee's account number for which direct-debit-mandate has to be created.",
            "example": "12345678"
          },
          "address": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postTown": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postCode": {
                "maxLength": 8,
                "minLength": 0,
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "phone": {
            "maxLength": 14,
            "minLength": 0,
            "pattern": "\\p{Digit}+",
            "type": "string",
            "description": "Payee's phone number"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
            "type": "string",
            "description": "Payee's email address"
          },
          "payeeAccountBid": {
            "type": "string",
            "description": "Payee's accountBid"
          }
        },
        "description": "Details of the Direct Debit mandate."
      },
      "directdebit.id": {
        "type": "array",
        "description": "Id(s) of Mandate(s) to fetch.",
        "items": {
          "type": "string",
          "description": "Id(s) of Mandate(s) to fetch."
        }
      },
      "notification.UpdateNotificationRequest": {
        "required": [
          "config",
          "destinations",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the notification.",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "destinations": {
            "type": "array",
            "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL.",
            "items": {
              "type": "string",
              "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL."
            }
          },
          "config": {
            "type": "object",
            "properties": {
              "threshold": {
                "minimum": 0,
                "exclusiveMinimum": false,
                "type": "number",
                "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
              },
              "timesToRun": {
                "type": "array",
                "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                "items": {
                  "type": "string",
                  "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                  "enum": [
                    "AM",
                    "PM"
                  ]
                }
              },
              "daysToRun": {
                "type": "array",
                "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                "items": {
                  "type": "string",
                  "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                  "enum": [
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY",
                    "SUNDAY"
                  ]
                }
              },
              "retry": {
                "type": "boolean",
                "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
              },
              "secret": {
                "maxLength": 32,
                "minLength": 32,
                "type": "string",
                "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
              },
              "hmacAlgorithm": {
                "type": "string",
                "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                "enum": [
                  "hmac-sha1",
                  "hmac-sha256",
                  "hmac-sha384",
                  "hmac-sha512"
                ]
              }
            },
            "description": "Configuration information for this Notification entity."
          }
        }
      },
      "onboarding.BrandNameResponse": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the Brand Name"
          },
          "name": {
            "type": "string",
            "description": "The Brand Name"
          }
        },
        "description": "BrandName"
      },
      "payment.PaymentResponse": {
        "required": [
          "details",
          "externalReference",
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the Payment request. 10 characters long",
            "example": "P000001ABC"
          },
          "status": {
            "type": "string",
            "description": "Current status of payment.",
            "enum": [
              "SUBMITTED",
              "SCREENING_REQ",
              "VALIDATED",
              "PENDING_FOR_DATE",
              "PENDING_FOR_FUNDS",
              "EXT_PROC",
              "PROCESSED",
              "RECONCILED",
              "ER_INVALID",
              "ER_EXTCONN",
              "ER_EXTSYS",
              "ER_EXPIRED",
              "ER_GENERAL",
              "ER_BATCH",
              "EXT_SENT",
              "UNALLOCATED",
              "HELD",
              "RETURNED",
              "CANCELLED",
              "REPROCESSING",
              "VOID",
              "CLEARING"
            ]
          },
          "createdDate": {
            "type": "string",
            "description": "Datetime the request was created. Format is 'yyyy-MM-dd'T'HH:mm:ss.sssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01.010+0000'",
            "format": "date-time"
          },
          "externalReference": {
            "type": "string",
            "description": "external reference if provided",
            "example": "aReference_00001"
          },
          "details": {
            "type": "object",
            "description": "All the details of the payment from the original request"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Current approval status of payment",
            "enum": [
              "NOTNEEDED",
              "PENDING",
              "APPROVED",
              "REJECTED",
              "DELETED"
            ]
          },
          "message": {
            "type": "string",
            "description": "Information about payment (if available)"
          },
          "schemeInfo": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "responseCode": {
                "type": "string"
              }
            },
            "description": "Information with regards to the payment scheme"
          },
          "createdBy": {
            "type": "string",
            "description": "ID of the user that created the payment"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAYIN",
              "PAYOUT",
              "RETURN"
            ]
          },
          "paymentScheduledDate": {
            "type": "string",
            "description": "Datetime of the payment scheduled at. Format is 'yyyy-MM-dd'T'HH:mm:ss.sssZ' where Z is UTC offset. e.g '2017-01-28T01:01:01.010+0000'",
            "format": "date-time"
          },
          "currentUserCanApprove": {
            "type": "boolean",
            "description": "Indicates if current user can approve the payment"
          },
          "approvals": {
            "type": "array",
            "description": "List of approvals performed on the payment",
            "items": {
              "type": "object",
              "properties": {
                "approvedBy": {
                  "type": "string",
                  "description": "ID of user who approved this batch payment request",
                  "example": "U2100021"
                },
                "approvedOn": {
                  "type": "string",
                  "description": "Date this approval was applied",
                  "format": "date",
                  "example": "2022-06-25"
                }
              },
              "description": "A single approval against a batch payment request"
            }
          }
        }
      },
      "directdebitoutbound.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "cardsimulator.CardAuthorisationResponse": {
        "required": [
          "authorisationId",
          "billingAmount",
          "billingCurrency",
          "cardId",
          "fxRate",
          "mcc",
          "status",
          "transactionAmount",
          "transactionCurrency"
        ],
        "type": "object",
        "properties": {
          "authorisationId": {
            "type": "string",
            "description": "Authorisation Id",
            "example": "A00000000X"
          },
          "cardId": {
            "type": "string",
            "description": "Card Id",
            "example": "V000000001"
          },
          "status": {
            "type": "string",
            "description": "Authorisation Status [APPROVED, REVERSED, SETTLED]",
            "example": "APPROVED",
            "enum": [
              "APPROVED",
              "REVERSED",
              "SETTLED"
            ]
          },
          "transactionAmount": {
            "type": "number",
            "description": "Authorisation Transaction Amount",
            "example": 100
          },
          "transactionCurrency": {
            "type": "string",
            "description": "Currency for this transaction",
            "example": "EUR",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "billingAmount": {
            "type": "number",
            "description": "Authorisation billing amount",
            "example": 80
          },
          "billingCurrency": {
            "type": "string",
            "description": "Currency of the card",
            "example": "GBP",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "fxRate": {
            "type": "number",
            "description": "Foreign exchange rate used between transaction and billing currencies",
            "example": 0.8
          },
          "mcc": {
            "type": "string",
            "description": "Merchant Category Code",
            "example": "5812"
          }
        },
        "description": "CardAuthorisationResponse"
      },
      "confirmationofpayee.JsonOutboundCopRequest": {
        "required": [
          "accountNumber",
          "accountType",
          "name",
          "paymentAccountId",
          "sortCode"
        ],
        "type": "object",
        "properties": {
          "paymentAccountId": {
            "type": "string",
            "description": "The identifier of the account that a subsequent payment will be initiated from.",
            "example": "A123AAA4"
          },
          "sortCode": {
            "pattern": "^[0-9]{6}$",
            "type": "string",
            "description": "The sort code of the account.",
            "example": "000000"
          },
          "accountNumber": {
            "pattern": "^[0-9]{8}$",
            "type": "string",
            "description": "The account number.",
            "example": "12345678"
          },
          "secondaryAccountId": {
            "maxLength": 140,
            "minLength": 1,
            "pattern": "^.{0}$|^\u0000$|^([^\u0000])+$",
            "type": "string",
            "description": "Additional information used in conjunction with the Sort Code and Account Number to identify the account (such as a Building Society roll number).",
            "example": "A-1234567890"
          },
          "accountType": {
            "type": "string",
            "description": "The type of account, either a personal or business account.",
            "example": "PERSONAL",
            "enum": [
              "PERSONAL",
              "BUSINESS"
            ]
          },
          "name": {
            "maxLength": 140,
            "minLength": 1,
            "pattern": "^.{0}$|^\u0000$|^([^\u0000])+$",
            "type": "string",
            "description": "The name to match the account name against.",
            "example": "Joe Bloggs"
          }
        },
        "description": "Details of Account Name Check Request"
      },
      "onboarding.AddressRequest": {
        "required": [
          "addressLine1",
          "postTown"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "postTown": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "postCode": {
            "maxLength": 10,
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "Mandatory for international payments."
          },
          "countrySubDivision": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": "Home address"
      },
      "account.CreateBeneficiaryRequest": {
        "required": [
          "defaultReference",
          "destinationIdentifier",
          "name"
        ],
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w \\-]*",
            "type": "string",
            "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^([^\\p{L}0-9]*?[\\p{L}0-9]){1,}['\\.\\-\\/&\\s]*",
            "type": "string"
          },
          "birthdate": {
            "type": "string",
            "description": "The destination beneficiary's date of birth. Date in yyyy-MM-dd format",
            "format": "date"
          },
          "emailAddress": {
            "type": "string",
            "description": "The destination beneficiary's email address"
          },
          "phoneNumber": {
            "type": "string",
            "description": "The destination beneficiary's phone number, will be formatted into international number pattern"
          },
          "destinationIdentifier": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "accountNumber": {
                "type": "string",
                "example": "12345678"
              },
              "accountType": {
                "type": "string",
                "description": "Bank account type like PERSONAL/BUSINESS",
                "enum": [
                  "PERSONAL",
                  "BUSINESS"
                ]
              },
              "sortCode": {
                "pattern": "^\\d{6}",
                "type": "string",
                "example": "000000"
              },
              "iban": {
                "pattern": "[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}([a-zA-Z0-9]?){0,26}",
                "type": "string",
                "example": "GB20MODR00000000000001"
              },
              "bic": {
                "pattern": "([a-zA-Z]{6,6}[a-zA-Z2-9][a-nA-Np-zP-Z0-9]([a-zA-Z0-9]{3})?)",
                "type": "string",
                "example": "MODRGB21"
              },
              "currency": {
                "pattern": "[a-zA-Z]{3}",
                "type": "string",
                "example": "GBP"
              },
              "countrySpecificDetails": {
                "type": "object",
                "properties": {
                  "bankName": {
                    "maxLength": 140,
                    "minLength": 0,
                    "type": "string",
                    "description": "The name of the destination bank.",
                    "example": "Apple Bank"
                  },
                  "bankAddress": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "The address of the destination bank.",
                    "example": "2100 Broadway"
                  },
                  "bankCity": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "The city in which the destination bank resides.",
                    "example": "New York City"
                  },
                  "bankBranchName": {
                    "type": "string",
                    "description": "The name of the destination bank's branch.",
                    "example": "New York"
                  },
                  "bankBranchCode": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "The code of the destination bank's branch.",
                    "example": "44-04"
                  },
                  "bankCode": {
                    "maxLength": 35,
                    "minLength": 0,
                    "type": "string",
                    "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                  },
                  "chineseId": {
                    "type": "string",
                    "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                    "example": "01101201901018889"
                  },
                  "province": {
                    "type": "string",
                    "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                    "example": "Zhejiang"
                  },
                  "business": {
                    "type": "boolean",
                    "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                    "example": true
                  },
                  "bankCodeType": {
                    "type": "string",
                    "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                    "example": "ABA",
                    "enum": [
                      "ABA",
                      "CHIPS"
                    ]
                  },
                  "bankCountry": {
                    "type": "string",
                    "description": "The country in which the destination bank resides.",
                    "example": "US",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "GB",
                      "MQ",
                      "YT",
                      "GP",
                      "GF",
                      "RE",
                      "MF",
                      "GI",
                      "GG",
                      "IM",
                      "JE",
                      "MC",
                      "CH",
                      "AD",
                      "SM",
                      "VA",
                      "AX",
                      "PM",
                      "BL",
                      "AF",
                      "AL",
                      "DZ",
                      "AS",
                      "AO",
                      "AI",
                      "AQ",
                      "AG",
                      "AR",
                      "AM",
                      "AW",
                      "AU",
                      "AZ",
                      "BS",
                      "BH",
                      "BD",
                      "BB",
                      "BY",
                      "BZ",
                      "BJ",
                      "BM",
                      "BT",
                      "BO",
                      "BQ",
                      "BA",
                      "BW",
                      "BV",
                      "BR",
                      "IO",
                      "VG",
                      "BN",
                      "BF",
                      "BI",
                      "KH",
                      "CM",
                      "CA",
                      "CV",
                      "KY",
                      "CF",
                      "TD",
                      "CL",
                      "CN",
                      "CX",
                      "CC",
                      "CO",
                      "KM",
                      "CK",
                      "CR",
                      "CU",
                      "CW",
                      "CD",
                      "DJ",
                      "DM",
                      "DO",
                      "TL",
                      "EC",
                      "EG",
                      "SV",
                      "GQ",
                      "ER",
                      "SZ",
                      "ET",
                      "FK",
                      "FO",
                      "FJ",
                      "PF",
                      "TF",
                      "GA",
                      "GM",
                      "GE",
                      "GH",
                      "GL",
                      "GD",
                      "GU",
                      "GT",
                      "GN",
                      "GW",
                      "GY",
                      "HT",
                      "HM",
                      "HN",
                      "HK",
                      "IN",
                      "ID",
                      "IR",
                      "IQ",
                      "IL",
                      "CI",
                      "JM",
                      "JP",
                      "JO",
                      "KZ",
                      "KE",
                      "KI",
                      "XK",
                      "KW",
                      "KG",
                      "LA",
                      "LB",
                      "LS",
                      "LR",
                      "LY",
                      "MO",
                      "MG",
                      "MW",
                      "MY",
                      "MV",
                      "ML",
                      "MH",
                      "MR",
                      "MU",
                      "MX",
                      "FM",
                      "MD",
                      "MN",
                      "ME",
                      "MS",
                      "MA",
                      "MZ",
                      "MM",
                      "NA",
                      "NR",
                      "NP",
                      "AN",
                      "NC",
                      "NZ",
                      "NI",
                      "NE",
                      "NG",
                      "NU",
                      "NF",
                      "KP",
                      "MK",
                      "MP",
                      "OM",
                      "PK",
                      "PW",
                      "PS",
                      "PA",
                      "PG",
                      "PY",
                      "PE",
                      "PH",
                      "PN",
                      "PR",
                      "QA",
                      "CG",
                      "RU",
                      "RW",
                      "SH",
                      "KN",
                      "LC",
                      "VC",
                      "WS",
                      "ST",
                      "SA",
                      "SN",
                      "RS",
                      "SC",
                      "SL",
                      "SG",
                      "SX",
                      "SB",
                      "SO",
                      "ZA",
                      "KR",
                      "GS",
                      "SS",
                      "LK",
                      "SD",
                      "SR",
                      "SY",
                      "SJ",
                      "TW",
                      "TJ",
                      "TZ",
                      "TH",
                      "TG",
                      "TK",
                      "TO",
                      "TT",
                      "TN",
                      "TR",
                      "TM",
                      "TC",
                      "TV",
                      "UG",
                      "UA",
                      "AE",
                      "UM",
                      "US",
                      "UY",
                      "UZ",
                      "VU",
                      "VE",
                      "VN",
                      "VI",
                      "WF",
                      "EH",
                      "YE",
                      "ZM",
                      "ZW"
                    ]
                  },
                  "abaRoutingNumber": {
                    "pattern": "^\\d{9}$",
                    "type": "string",
                    "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                    "example": "123456789"
                  }
                },
                "example": {
                  "branchCode": "123456789"
                }
              }
            }
          },
          "defaultReference": {
            "type": "string"
          },
          "idToReplace": {
            "type": "string"
          },
          "address": {
            "required": [
              "addressLine1",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postTown": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postCode": {
                "maxLength": 10,
                "type": "string"
              },
              "country": {
                "type": "string",
                "description": "Mandatory for international payments."
              },
              "countrySubDivision": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Applicable to all types except 'INDIVIDUAL' and 'PCM_INDIVIDUAL'"
          },
          "qualifier": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Optional qualifier. Only to be supplied if multiple beneficiaries with same destination need to be supplied"
          }
        }
      },
      "account.IdentifierRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string",
            "example": "12345678"
          },
          "accountType": {
            "type": "string",
            "description": "Bank account type like PERSONAL/BUSINESS",
            "enum": [
              "PERSONAL",
              "BUSINESS"
            ]
          },
          "sortCode": {
            "pattern": "^\\d{6}",
            "type": "string",
            "example": "000000"
          },
          "iban": {
            "pattern": "[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}([a-zA-Z0-9]?){0,26}",
            "type": "string",
            "example": "GB20MODR00000000000001"
          },
          "bic": {
            "pattern": "([a-zA-Z]{6,6}[a-zA-Z2-9][a-nA-Np-zP-Z0-9]([a-zA-Z0-9]{3})?)",
            "type": "string",
            "example": "MODRGB21"
          },
          "currency": {
            "pattern": "[a-zA-Z]{3}",
            "type": "string",
            "example": "GBP"
          },
          "countrySpecificDetails": {
            "type": "object",
            "properties": {
              "bankName": {
                "maxLength": 140,
                "minLength": 0,
                "type": "string",
                "description": "The name of the destination bank.",
                "example": "Apple Bank"
              },
              "bankAddress": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "The address of the destination bank.",
                "example": "2100 Broadway"
              },
              "bankCity": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "The city in which the destination bank resides.",
                "example": "New York City"
              },
              "bankBranchName": {
                "type": "string",
                "description": "The name of the destination bank's branch.",
                "example": "New York"
              },
              "bankBranchCode": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "The code of the destination bank's branch.",
                "example": "44-04"
              },
              "bankCode": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
              },
              "chineseId": {
                "type": "string",
                "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                "example": "01101201901018889"
              },
              "province": {
                "type": "string",
                "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                "example": "Zhejiang"
              },
              "business": {
                "type": "boolean",
                "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                "example": true
              },
              "bankCodeType": {
                "type": "string",
                "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                "example": "ABA",
                "enum": [
                  "ABA",
                  "CHIPS"
                ]
              },
              "bankCountry": {
                "type": "string",
                "description": "The country in which the destination bank resides.",
                "example": "US",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "GB",
                  "MQ",
                  "YT",
                  "GP",
                  "GF",
                  "RE",
                  "MF",
                  "GI",
                  "GG",
                  "IM",
                  "JE",
                  "MC",
                  "CH",
                  "AD",
                  "SM",
                  "VA",
                  "AX",
                  "PM",
                  "BL",
                  "AF",
                  "AL",
                  "DZ",
                  "AS",
                  "AO",
                  "AI",
                  "AQ",
                  "AG",
                  "AR",
                  "AM",
                  "AW",
                  "AU",
                  "AZ",
                  "BS",
                  "BH",
                  "BD",
                  "BB",
                  "BY",
                  "BZ",
                  "BJ",
                  "BM",
                  "BT",
                  "BO",
                  "BQ",
                  "BA",
                  "BW",
                  "BV",
                  "BR",
                  "IO",
                  "VG",
                  "BN",
                  "BF",
                  "BI",
                  "KH",
                  "CM",
                  "CA",
                  "CV",
                  "KY",
                  "CF",
                  "TD",
                  "CL",
                  "CN",
                  "CX",
                  "CC",
                  "CO",
                  "KM",
                  "CK",
                  "CR",
                  "CU",
                  "CW",
                  "CD",
                  "DJ",
                  "DM",
                  "DO",
                  "TL",
                  "EC",
                  "EG",
                  "SV",
                  "GQ",
                  "ER",
                  "SZ",
                  "ET",
                  "FK",
                  "FO",
                  "FJ",
                  "PF",
                  "TF",
                  "GA",
                  "GM",
                  "GE",
                  "GH",
                  "GL",
                  "GD",
                  "GU",
                  "GT",
                  "GN",
                  "GW",
                  "GY",
                  "HT",
                  "HM",
                  "HN",
                  "HK",
                  "IN",
                  "ID",
                  "IR",
                  "IQ",
                  "IL",
                  "CI",
                  "JM",
                  "JP",
                  "JO",
                  "KZ",
                  "KE",
                  "KI",
                  "XK",
                  "KW",
                  "KG",
                  "LA",
                  "LB",
                  "LS",
                  "LR",
                  "LY",
                  "MO",
                  "MG",
                  "MW",
                  "MY",
                  "MV",
                  "ML",
                  "MH",
                  "MR",
                  "MU",
                  "MX",
                  "FM",
                  "MD",
                  "MN",
                  "ME",
                  "MS",
                  "MA",
                  "MZ",
                  "MM",
                  "NA",
                  "NR",
                  "NP",
                  "AN",
                  "NC",
                  "NZ",
                  "NI",
                  "NE",
                  "NG",
                  "NU",
                  "NF",
                  "KP",
                  "MK",
                  "MP",
                  "OM",
                  "PK",
                  "PW",
                  "PS",
                  "PA",
                  "PG",
                  "PY",
                  "PE",
                  "PH",
                  "PN",
                  "PR",
                  "QA",
                  "CG",
                  "RU",
                  "RW",
                  "SH",
                  "KN",
                  "LC",
                  "VC",
                  "WS",
                  "ST",
                  "SA",
                  "SN",
                  "RS",
                  "SC",
                  "SL",
                  "SG",
                  "SX",
                  "SB",
                  "SO",
                  "ZA",
                  "KR",
                  "GS",
                  "SS",
                  "LK",
                  "SD",
                  "SR",
                  "SY",
                  "SJ",
                  "TW",
                  "TJ",
                  "TZ",
                  "TH",
                  "TG",
                  "TK",
                  "TO",
                  "TT",
                  "TN",
                  "TR",
                  "TM",
                  "TC",
                  "TV",
                  "UG",
                  "UA",
                  "AE",
                  "UM",
                  "US",
                  "UY",
                  "UZ",
                  "VU",
                  "VE",
                  "VN",
                  "VI",
                  "WF",
                  "EH",
                  "YE",
                  "ZM",
                  "ZW"
                ]
              },
              "abaRoutingNumber": {
                "pattern": "^\\d{9}$",
                "type": "string",
                "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                "example": "123456789"
              }
            },
            "example": {
              "branchCode": "123456789"
            }
          }
        }
      },
      "card.CardReplacementRequest": {
        "required": [
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "The reason for replacing the card. Can be one of DAMAGED (physical only), LOST, STOLEN, RENEW",
            "example": "STOLEN",
            "enum": [
              "STOLEN",
              "DAMAGED",
              "LOST",
              "RENEW"
            ]
          },
          "externalRef": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "[\\w-\\s]*",
            "type": "string",
            "description": "Client reference for the newly created card. Maximum of 50 alphanumeric characters (including underscore, hyphen and space)."
          },
          "design": {
            "required": [
              "cardRef",
              "packagingRef"
            ],
            "type": "object",
            "properties": {
              "cardRef": {
                "type": "string",
                "description": "Design reference for card"
              },
              "packagingRef": {
                "type": "string",
                "description": "Design reference for card packaging"
              }
            },
            "description": "Design references for physical card and packaging"
          },
          "expiry": {
            "type": "string",
            "description": "ISO 8601 date with year & month components only. The supplied value must be in the future (cannot be the current month) and is _inclusive_ of the specified month. If no expiry is selected, the standard product expiry date will be set",
            "example": "2026-12"
          },
          "shippingAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string",
                "description": "First line of address",
                "example": "Floor 10"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Second line of address",
                "example": "80 George Street"
              },
              "postTown": {
                "maxLength": 20,
                "minLength": 1,
                "type": "string",
                "description": "Post town",
                "example": "EDINBURGH"
              },
              "postCode": {
                "maxLength": 10,
                "minLength": 1,
                "type": "string",
                "description": "Postcode",
                "example": "EH2 3BU"
              },
              "country": {
                "type": "string",
                "description": "Country (ISO 3166 alpha-2 country code)",
                "example": "GB",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "AX",
                  "AW",
                  "BL",
                  "CW",
                  "GF",
                  "GL",
                  "GP",
                  "ME",
                  "MF",
                  "MQ",
                  "NC",
                  "PF",
                  "PM",
                  "RE",
                  "SX",
                  "TF",
                  "WF",
                  "YT",
                  "AI",
                  "BM",
                  "FK",
                  "GB",
                  "GG",
                  "GI",
                  "GS",
                  "IO",
                  "JE",
                  "KY",
                  "MS",
                  "PN",
                  "SH",
                  "TC",
                  "VG"
                ]
              }
            },
            "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
          }
        },
        "description": "Replacement"
      },
      "account.AssociateResponse": {
        "required": [
          "dateOfBirth",
          "firstName",
          "id",
          "lastName",
          "type",
          "verificationStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the Associate"
          },
          "firstName": {
            "type": "string",
            "description": "Associate's first name(s)"
          },
          "middleName": {
            "type": "string",
            "description": "Associate's middle name"
          },
          "lastName": {
            "type": "string",
            "description": "Associate's surname"
          },
          "email": {
            "type": "string",
            "description": "Associate's email address"
          },
          "phone": {
            "type": "string",
            "description": "Associate's phone number, in international number format"
          },
          "applicant": {
            "type": "boolean",
            "description": "Indicates which Associate originally applied for the Modulr account"
          },
          "ownership": {
            "type": "integer",
            "description": "The Associate's percentage ownership of the Customer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Describes the relation between the Associate and the Customer. Can be one of "
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Associate's date of birth in format yyyy-MM-dd, or format yyyy-MM where day is unknown"
          },
          "verificationStatus": {
            "type": "string",
            "description": "How the Associate was verified. Can be one of "
          },
          "homeAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countrySubDivision": {
                "type": "string"
              }
            },
            "description": "Address"
          },
          "documentInfo": {
            "type": "array",
            "description": "Documents gathered during Customer Due Diligence checks on an Associate.",
            "items": {
              "required": [
                "fileName",
                "path",
                "uploadedDate"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "uploadedDate": {
                  "type": "string",
                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "example": "2017-01-28T01:01:01+0000"
                }
              },
              "description": "Document"
            }
          },
          "additionalPersonalIdentifiers": {
            "type": "array",
            "description": "Additional personal identifier(s)",
            "items": {
              "required": [
                "type",
                "value"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of Additional Personal Identifier",
                  "enum": [
                    "BSN"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "Additional Personal Identifier value"
                }
              },
              "description": "AdditionalPersonalIdentifier"
            }
          },
          "complianceData": {
            "type": "object",
            "properties": {
              "relationship": {
                "type": "string"
              }
            },
            "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
          }
        },
        "description": "Associate"
      },
      "directdebit.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "cardsimulator.CardAuthorisationRequest": {
        "required": [
          "mcc",
          "transactionAmount"
        ],
        "type": "object",
        "properties": {
          "transactionAmount": {
            "type": "number",
            "description": "The transaction amount",
            "example": 5.45
          },
          "transactionCurrency": {
            "type": "string",
            "description": "The transaction currency. Defaults to the card's billing currency",
            "example": "GBP",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "fxRate": {
            "type": "number",
            "description": "The foreign exchange rate to use, when transaction currency differs from billing currency. Defaults to 1.0",
            "example": 0.8
          },
          "mcc": {
            "type": "string",
            "description": "Merchant Category Code",
            "example": "5812"
          }
        },
        "description": "Details of the authorisation to create"
      },
      "payment.Destination": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Indicates the type of destination. IBAN type is required for international payments.",
            "example": "SCAN",
            "enum": [
              "BENEFICIARY",
              "ACCOUNT",
              "IBAN",
              "SCAN",
              "INTL",
              "ANBRN",
              "AN"
            ]
          },
          "id": {
            "type": "string",
            "description": "Identifier for the Payment destination if using ACCOUNT or BENEFICIARY type. Can be either: a) Beneficiary id for an external Payment, b) Account id for a transfer to another Account"
          },
          "iban": {
            "pattern": "^[a-zA-Z]{2}[0-9]{2}([a-zA-Z0-9]){11,30}$",
            "type": "string",
            "description": "International Bank Account Number (IBAN). To be used as the destination identifier when sending âIBANâ type payments",
            "example": "GB20MODR00000000000001"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account Number of destination account if using SCAN type.",
            "example": "12345678"
          },
          "sortCode": {
            "pattern": "^[0-9]{6}$",
            "type": "string",
            "description": "Sort Code of destination account if using SCAN type.",
            "example": "000000"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Name to use if a new beneficiary is created, and for using as the payee name if SCAN or IBAN types are specified for the destination",
            "example": "Test"
          },
          "address": {
            "required": [
              "addressLine1",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postTown": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postCode": {
                "maxLength": 10,
                "type": "string"
              },
              "country": {
                "type": "string",
                "description": "Mandatory for international payments."
              },
              "countrySubDivision": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Optional address. Mandatory for international payments."
          },
          "birthdate": {
            "type": "string",
            "description": "The destination beneficiary's date of birth. Format: yyyy-MM-dd",
            "format": "date",
            "example": "2000-01-01"
          },
          "emailAddress": {
            "pattern": "[^\\s@]+@[^\\s@]+\\.[^\\s@]+",
            "type": "string",
            "description": "The destination beneficiary's email address"
          },
          "phoneNumber": {
            "type": "string",
            "description": "The destination beneficiary's phone number"
          },
          "bic": {
            "type": "string",
            "description": "The destination beneficiary's SWIFT BIC (Bank Identifier Code). Only to be used for international payments."
          },
          "countrySpecificDetails": {
            "type": "object",
            "properties": {
              "bankName": {
                "type": "string",
                "description": "The name of the destination bank.",
                "example": "Apple Bank"
              },
              "bankAddress": {
                "type": "string",
                "description": "The address of the destination bank.",
                "example": "2100 Broadway"
              },
              "bankCity": {
                "type": "string",
                "description": "The city in which the destination bank resides.",
                "example": "New York City"
              },
              "bankBranchName": {
                "type": "string",
                "description": "The name of the destination bank's branch.",
                "example": "New York"
              },
              "bankBranchCode": {
                "type": "string",
                "description": "The code of the destination bank's branch.",
                "example": "44-04"
              },
              "bankCode": {
                "type": "string",
                "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
              },
              "chineseId": {
                "type": "string",
                "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                "example": "01101201901018889"
              },
              "province": {
                "type": "string",
                "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                "example": "Zhejiang"
              },
              "abaRoutingNumber": {
                "pattern": "^\\d{9}$",
                "type": "string",
                "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                "example": "123456789"
              },
              "business": {
                "type": "boolean",
                "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                "example": true
              },
              "bankCodeType": {
                "type": "string",
                "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                "example": "ABA",
                "enum": [
                  "ABA",
                  "CHIPS"
                ]
              },
              "bankCountry": {
                "type": "string",
                "description": "The country in which the destination bank resides. Mandatory for international payments.",
                "example": "US",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "GB",
                  "MQ",
                  "YT",
                  "GP",
                  "GF",
                  "RE",
                  "MF",
                  "GI",
                  "GG",
                  "IM",
                  "JE",
                  "MC",
                  "CH",
                  "AD",
                  "SM",
                  "VA",
                  "AX",
                  "PM",
                  "BL",
                  "AF",
                  "AL",
                  "DZ",
                  "AS",
                  "AO",
                  "AI",
                  "AQ",
                  "AG",
                  "AR",
                  "AM",
                  "AW",
                  "AU",
                  "AZ",
                  "BS",
                  "BH",
                  "BD",
                  "BB",
                  "BY",
                  "BZ",
                  "BJ",
                  "BM",
                  "BT",
                  "BO",
                  "BQ",
                  "BA",
                  "BW",
                  "BV",
                  "BR",
                  "IO",
                  "VG",
                  "BN",
                  "BF",
                  "BI",
                  "KH",
                  "CM",
                  "CA",
                  "CV",
                  "KY",
                  "CF",
                  "TD",
                  "CL",
                  "CN",
                  "CX",
                  "CC",
                  "CO",
                  "KM",
                  "CK",
                  "CR",
                  "CU",
                  "CW",
                  "CD",
                  "DJ",
                  "DM",
                  "DO",
                  "TL",
                  "EC",
                  "EG",
                  "SV",
                  "GQ",
                  "ER",
                  "SZ",
                  "ET",
                  "FK",
                  "FO",
                  "FJ",
                  "PF",
                  "TF",
                  "GA",
                  "GM",
                  "GE",
                  "GH",
                  "GL",
                  "GD",
                  "GU",
                  "GT",
                  "GN",
                  "GW",
                  "GY",
                  "HT",
                  "HM",
                  "HN",
                  "HK",
                  "IN",
                  "ID",
                  "IR",
                  "IQ",
                  "IL",
                  "CI",
                  "JM",
                  "JP",
                  "JO",
                  "KZ",
                  "KE",
                  "KI",
                  "XK",
                  "KW",
                  "KG",
                  "LA",
                  "LB",
                  "LS",
                  "LR",
                  "LY",
                  "MO",
                  "MG",
                  "MW",
                  "MY",
                  "MV",
                  "ML",
                  "MH",
                  "MR",
                  "MU",
                  "MX",
                  "FM",
                  "MD",
                  "MN",
                  "ME",
                  "MS",
                  "MA",
                  "MZ",
                  "MM",
                  "NA",
                  "NR",
                  "NP",
                  "AN",
                  "NC",
                  "NZ",
                  "NI",
                  "NE",
                  "NG",
                  "NU",
                  "NF",
                  "KP",
                  "MK",
                  "MP",
                  "OM",
                  "PK",
                  "PW",
                  "PS",
                  "PA",
                  "PG",
                  "PY",
                  "PE",
                  "PH",
                  "PN",
                  "PR",
                  "QA",
                  "CG",
                  "RU",
                  "RW",
                  "SH",
                  "KN",
                  "LC",
                  "VC",
                  "WS",
                  "ST",
                  "SA",
                  "SN",
                  "RS",
                  "SC",
                  "SL",
                  "SG",
                  "SX",
                  "SB",
                  "SO",
                  "ZA",
                  "KR",
                  "GS",
                  "SS",
                  "LK",
                  "SD",
                  "SR",
                  "SY",
                  "SJ",
                  "TW",
                  "TJ",
                  "TZ",
                  "TH",
                  "TG",
                  "TK",
                  "TO",
                  "TT",
                  "TN",
                  "TR",
                  "TM",
                  "TC",
                  "TV",
                  "UG",
                  "UA",
                  "AE",
                  "UM",
                  "US",
                  "UY",
                  "UZ",
                  "VU",
                  "VE",
                  "VN",
                  "VI",
                  "WF",
                  "EH",
                  "YE",
                  "ZM",
                  "ZW"
                ]
              }
            },
            "description": "Further details required, depending on the destination's country"
          }
        },
        "description": "Destination of the Payment"
      },
      "card.CardConstraints": {
        "required": [
          "mccWhitelist"
        ],
        "type": "object",
        "properties": {
          "mccWhitelist": {
            "type": "array",
            "description": "mccWhitelist",
            "example": [
              "1000",
              "1002-3000",
              "5060"
            ],
            "items": {
              "type": "string",
              "description": "mccWhitelist",
              "example": "[\"1000\",\"1002-3000\",\"5060\"]"
            }
          },
          "authorisation": {
            "type": "object",
            "properties": {
              "spend": {
                "type": "array",
                "description": "Spending constraints",
                "items": {
                  "required": [
                    "currency"
                  ],
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "description": "A 3 letter ISO 4217 code representing the transaction currency",
                      "example": "GBP",
                      "enum": [
                        "GBP",
                        "EUR",
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHE",
                        "CHF",
                        "CHW",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "FJD",
                        "FKP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SLE",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "SHP",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "USN",
                        "UYI",
                        "UYU",
                        "UYW",
                        "UZS",
                        "VES",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XAG",
                        "XAU",
                        "XBA",
                        "XBB",
                        "XBC",
                        "XBD",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPD",
                        "XPF",
                        "XPT",
                        "XSU",
                        "XTS",
                        "XUA",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWL"
                      ]
                    },
                    "min": {
                      "type": "number",
                      "description": "Minimum spend amount (inclusive)",
                      "example": 5
                    },
                    "max": {
                      "type": "number",
                      "description": "Maximum spend amount (inclusive)",
                      "example": 2000
                    }
                  },
                  "description": "Spending constraints"
                }
              }
            },
            "description": "Authorisation constraints"
          }
        },
        "description": "CardConstraints"
      },
      "card.CardActivityResponse": {
        "required": [
          "billingAmount",
          "billingCurrency",
          "cardId",
          "createdDate",
          "fxRate",
          "id",
          "mcc",
          "orderId",
          "transactionAmount",
          "transactionCurrency",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The card activity identifier. Maximum of 10 alphanumeric characters",
            "example": "X000000001"
          },
          "orderId": {
            "type": "string",
            "description": "Order identifier which links together related authorisations, reversals & settlements. Maximum of 10 alphanumeric characters",
            "example": "1234"
          },
          "cardId": {
            "type": "string",
            "description": "Card identifier. Maximum of 10 alphanumeric characters",
            "example": "V000000001"
          },
          "type": {
            "type": "string",
            "description": "Type of card activity",
            "enum": [
              "AUTHORISATION",
              "REVERSAL",
              "SETTLEMENT",
              "REFUND"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of card activity. Only applies to activities of type AUTHORISATION",
            "enum": [
              "DECLINED",
              "APPROVED",
              "SETTLED",
              "EXPIRED"
            ]
          },
          "reason": {
            "type": "string",
            "description": "The reason why this activity was declined. Only applies to activities with status DECLINED",
            "example": "Account has insufficient funds"
          },
          "verifiedBy3DS": {
            "type": "boolean",
            "description": "Whether the activity was 3DS enabled"
          },
          "createdDate": {
            "type": "string",
            "description": "The creation date of the card activity",
            "format": "date-time"
          },
          "transactionAmount": {
            "type": "number",
            "description": "The card activity transaction amount",
            "example": 123.45
          },
          "transactionCurrency": {
            "type": "string",
            "description": "The 3 letter ISO 4217 card activity transaction currency",
            "example": "EUR"
          },
          "billingAmount": {
            "type": "number",
            "description": "The card activity billing amount",
            "example": 678.91
          },
          "billingCurrency": {
            "type": "string",
            "description": "The 3 letter ISO 4217 card activity billing currency",
            "example": "GBP"
          },
          "fxRate": {
            "type": "number",
            "description": "The FX rate applied to any conversion between transaction & billing amount. Rounded to 6 decimal places and zero padded",
            "example": 1.123456
          },
          "mcc": {
            "type": "string",
            "description": "The Merchant Category Code (MCC) for the card activity. Follows ISO-18245 format",
            "example": "5182"
          },
          "merchantName": {
            "type": "string",
            "description": "The merchant name",
            "example": "Loudons Cafe"
          },
          "merchantCountry": {
            "type": "string",
            "description": "The 3 letter ISO 3166 merchant country code",
            "example": "GBR"
          },
          "authorisationInfo": {
            "required": [
              "inputMethod",
              "type"
            ],
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Transaction type"
              },
              "inputMethod": {
                "type": "string",
                "description": "Input method"
              }
            },
            "description": "Authorisation information of the activity"
          },
          "cardTokenId": {
            "type": "string",
            "description": "The card token associated with this activity, if a tokenised card was used."
          },
          "cardTokenDeviceId": {
            "type": "string",
            "description": "The bound card token device associated with this activity, if a tokenised card was used."
          }
        },
        "description": "List of responses on the current page"
      },
      "account.DelegateResponse": {
        "required": [
          "created",
          "id",
          "name",
          "roleId",
          "status",
          "updated"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique reference for the Delegate.",
            "example": "D0000001"
          },
          "name": {
            "type": "string",
            "description": "Name for the Delegate"
          },
          "address": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countrySubDivision": {
                "type": "string"
              }
            },
            "description": "Address"
          },
          "roleId": {
            "type": "string",
            "description": "The id of the Role assigned to the delegate",
            "example": "R02002M5"
          },
          "externalReference": {
            "type": "string",
            "description": "External system reference for the Delegate"
          },
          "partner": {
            "type": "string",
            "description": "Partner Bid.",
            "example": "R0000001"
          },
          "status": {
            "type": "string",
            "description": "Status of the Delegate."
          },
          "created": {
            "type": "string",
            "description": "Datetime the Delegate was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Datetime the Delegate was last updated.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          }
        },
        "description": "Delegate"
      },
      "card.CardCustomFieldRequest": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Custom field key"
          },
          "value": {
            "type": "string",
            "description": "Custom field value"
          }
        },
        "description": "Custom fields"
      },
      "cardsimulator.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "pispgateway.CreateVrpConsentCreationRequest": {
        "required": [
          "aspspId",
          "destination",
          "paymentConstraints",
          "reference",
          "type"
        ],
        "type": "object",
        "properties": {
          "aspspId": {
            "type": "string",
            "description": "Identifier of the payerâs ASPSP where the consent will be created. The ASPSP must have the âSWEEPINGâ capability enabled (which can be checked using our API).",
            "example": "H100000001"
          },
          "destination": {
            "required": [
              "type"
            ],
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                "enum": [
                  "ACCOUNT",
                  "SCAN",
                  "ACCOUNT",
                  "SCAN"
                ]
              },
              "id": {
                "type": "string",
                "description": "Identifier of the destination account if using ACCOUNT type",
                "example": "A1100001"
              },
              "accountNumber": {
                "pattern": "^[0-9]{8}$",
                "type": "string",
                "description": "Account Number of destination account if using SCAN type",
                "example": "12345678"
              },
              "sortCode": {
                "pattern": "^[0-9]{6}$",
                "type": "string",
                "description": "Sort Code of destination account if using SCAN type",
                "example": "000000"
              },
              "name": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Name of destination account if using SCAN type (this may be truncated)",
                "example": "Test"
              }
            },
            "description": "The destination account for the payment"
          },
          "paymentConstraints": {
            "required": [
              "maximumIndividualAmount"
            ],
            "type": "object",
            "properties": {
              "maximumIndividualAmount": {
                "required": [
                  "currency"
                ],
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Currency of the maximum individual amount. Must be specified in ISO 4217 format."
                  },
                  "amount": {
                    "type": "number",
                    "description": "Maximum amount of any single payment initiated using this consent - '1' = 1.00 GBP",
                    "example": 100
                  }
                },
                "description": "Maximum amount of any single payment initiated using this consent."
              },
              "periodicLimits": {
                "type": "array",
                "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days.",
                "items": {
                  "required": [
                    "currency",
                    "periodAlignment",
                    "periodType"
                  ],
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "description": "Currency of the maximum amount. Must be specified in ISO 4217 format."
                    },
                    "amount": {
                      "type": "number",
                      "description": "The maximum amount of all payments initiated using this consent in the specified period. At least one periodic limit is required - '1' = 1.00 GBP",
                      "example": 100
                    },
                    "periodAlignment": {
                      "type": "string",
                      "description": "Specifies whether the period starts on the date of consent creation or lines up with a calendar."
                    },
                    "periodType": {
                      "type": "string",
                      "description": "Period type. Must be one of âDAYâ,âWEEKâ,âFORTNIGHTâ,âMONTHâ,âHALF_YEARâ,âYEARâ."
                    }
                  },
                  "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days."
                }
              }
            },
            "description": "Limits that will apply to payments initiated using this consent. "
          },
          "validFromDate": {
            "type": "string",
            "description": "Start date time from which payments can be initiated using this consent. Must be specified using YYYY-MM-DDTHH:mm:ssZ format.",
            "format": "date-time",
            "example": "2022-01-31T20:16:01.9Z"
          },
          "validToDate": {
            "type": "string",
            "description": "End date time after which payments cannot be initiated using this consent. Must be specified using YYYY-MM-DDTHH:mm:ssZ format.",
            "format": "date-time",
            "example": "2022-07-31T20:16:01.9Z"
          },
          "type": {
            "type": "string",
            "description": "Type of VRP consent that will be created. Must be one of âSWEEPINGâ or âNON_SWEEPINGâ. Note that âNON_SWEEPINGâ is not yet available."
          },
          "reference": {
            "type": "string",
            "description": "Reference to be used for the Consent. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
            "example": "Invoice ABC123"
          }
        },
        "description": "Request object to Initiate VRP Consent Creation"
      },
      "account.DocumentInfo": {
        "required": [
          "fileName",
          "path",
          "uploadedDate"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "uploadedDate": {
            "type": "string",
            "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "example": "2017-01-28T01:01:01+0000"
          }
        },
        "description": "Document"
      },
      "card.UpdateCardCustomFieldsRequest": {
        "required": [
          "customFields"
        ],
        "type": "object",
        "properties": {
          "customFields": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "description": "Custom fields",
            "items": {
              "required": [
                "key",
                "value"
              ],
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Custom field key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom field value"
                }
              },
              "description": "Custom fields"
            }
          }
        },
        "description": "Custom fields to be updated"
      },
      "card.BulkCreateCustomFieldKeysRequest": {
        "required": [
          "customFields"
        ],
        "type": "object",
        "properties": {
          "customFields": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "description": "Custom fields",
            "items": {
              "required": [
                "key",
                "required"
              ],
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Custom field key"
                },
                "required": {
                  "type": "boolean",
                  "description": "Whether the custom field is required or not"
                }
              },
              "description": "Custom fields"
            }
          }
        },
        "description": "Bulk create custom field keys request"
      },
      "directdebit.SuspendMandateRequest": {
        "required": [
          "reason"
        ],
        "type": "object",
        "properties": {
          "cancelAllScheduledPayments": {
            "type": "boolean",
            "description": "Should cancel all collections schedules for the mandate"
          },
          "reason": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "description": "Reason to suspend the mandate"
          }
        },
        "description": "Details of Mandate suspension."
      },
      "pispgateway.PaymentAmount": {
        "required": [
          "currency",
          "value"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency of the account in ISO 4217 format. Only allowable value is GBP",
            "enum": [
              "GBP"
            ]
          },
          "value": {
            "maximum": 2147483647,
            "minimum": 0.01,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Amount of the payment in Major Currency Units - '1' = 1.00 GBP",
            "example": 100
          }
        },
        "description": "The amount of the payment"
      },
      "card.CardAuthentication": {
        "required": [
          "knowledgeBase"
        ],
        "type": "object",
        "properties": {
          "knowledgeBase": {
            "type": "array",
            "description": "3DS knowledge-based authentication (KBA) answers",
            "items": {
              "required": [
                "answer",
                "type"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "3DS knowledge-based authentication answer type",
                  "enum": [
                    "FIRST_PET_NAME",
                    "MATERNAL_GRANDMOTHER_MAIDEN_NAME",
                    "FAVOURITE_CHILDHOOD_FRIEND",
                    "FIRST_CAR",
                    "CITY_PARENTS_MET"
                  ]
                },
                "answer": {
                  "maxLength": 45,
                  "minLength": 1,
                  "type": "string",
                  "description": "3DS knowledge-based authentication answer"
                }
              },
              "description": "3DS Knowledge-Based Authentication (KBA) answers"
            }
          }
        },
        "description": "Authentication. Required by default, optional for Virtual Business Travel Cards only"
      },
      "directdebit.ReconciliationResponse": {
        "type": "object",
        "properties": {
          "reconciliationId": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "collectionDate": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "notifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "schemeDetails": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "description": "List of responses on the current page"
      },
      "account.BrandNameResponse": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the Brand Name"
          },
          "name": {
            "type": "string",
            "description": "The Brand Name"
          }
        },
        "description": "BrandName"
      },
      "notification.NotificationConfig": {
        "type": "object",
        "properties": {
          "threshold": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
          },
          "timesToRun": {
            "type": "array",
            "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
            "items": {
              "type": "string",
              "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
              "enum": [
                "AM",
                "PM"
              ]
            }
          },
          "daysToRun": {
            "type": "array",
            "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
            "items": {
              "type": "string",
              "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
              "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
              ]
            }
          },
          "retry": {
            "type": "boolean",
            "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
          },
          "secret": {
            "maxLength": 32,
            "minLength": 32,
            "type": "string",
            "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
          },
          "hmacAlgorithm": {
            "type": "string",
            "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
            "enum": [
              "hmac-sha1",
              "hmac-sha256",
              "hmac-sha384",
              "hmac-sha512"
            ]
          }
        },
        "description": "Configuration information for this Notification entity."
      },
      "confirmationofpayee.JsonSrdAccount": {
        "required": [
          "sortCode"
        ],
        "type": "object",
        "properties": {
          "sortCode": {
            "type": "string",
            "description": "The sort code of one or more accounts that requires Secondary Reference Data to be provided when making account name check requests.\n",
            "example": "123456"
          },
          "accountNumbers": {
            "type": "array",
            "description": "Account numbers that require Secondary Reference Data. If empty, Secondary Reference Data is required for all name check requests for this sort code.",
            "example": [
              "11111111",
              "22222222"
            ],
            "items": {
              "type": "string",
              "description": "The account number of a specific account that requires Secondary Reference Data to be provided when making account name check requests.",
              "example": "11111111"
            }
          }
        },
        "description": "List of responses on the current page"
      },
      "payment.RegulatoryReporting": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Regulatory Reporting Type",
            "example": "CRED",
            "enum": [
              "CRED",
              "DEBT",
              "BOTH"
            ]
          },
          "regulatoryAuthority": {
            "type": "object",
            "properties": {
              "authorityName": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Authority name. Maximum of 70 characters.",
                "example": "Financial Conduct Authority"
              },
              "authorityCountry": {
                "type": "string",
                "description": "ISO 3166 country code of the ultimate payers address",
                "example": "GB",
                "enum": [
                  "AT",
                  "BE",
                  "BG",
                  "CY",
                  "CZ",
                  "DK",
                  "EE",
                  "FI",
                  "FR",
                  "DE",
                  "GR",
                  "HR",
                  "HU",
                  "IS",
                  "IE",
                  "IT",
                  "LV",
                  "LI",
                  "LT",
                  "LU",
                  "MT",
                  "NL",
                  "NO",
                  "PL",
                  "PT",
                  "RO",
                  "SK",
                  "SI",
                  "ES",
                  "SE",
                  "GB",
                  "MQ",
                  "YT",
                  "GP",
                  "GF",
                  "RE",
                  "MF",
                  "GI",
                  "GG",
                  "IM",
                  "JE",
                  "MC",
                  "CH",
                  "AD",
                  "SM",
                  "VA",
                  "AX",
                  "PM",
                  "BL",
                  "AF",
                  "AL",
                  "DZ",
                  "AS",
                  "AO",
                  "AI",
                  "AQ",
                  "AG",
                  "AR",
                  "AM",
                  "AW",
                  "AU",
                  "AZ",
                  "BS",
                  "BH",
                  "BD",
                  "BB",
                  "BY",
                  "BZ",
                  "BJ",
                  "BM",
                  "BT",
                  "BO",
                  "BQ",
                  "BA",
                  "BW",
                  "BV",
                  "BR",
                  "IO",
                  "VG",
                  "BN",
                  "BF",
                  "BI",
                  "KH",
                  "CM",
                  "CA",
                  "CV",
                  "KY",
                  "CF",
                  "TD",
                  "CL",
                  "CN",
                  "CX",
                  "CC",
                  "CO",
                  "KM",
                  "CK",
                  "CR",
                  "CU",
                  "CW",
                  "CD",
                  "DJ",
                  "DM",
                  "DO",
                  "TL",
                  "EC",
                  "EG",
                  "SV",
                  "GQ",
                  "ER",
                  "SZ",
                  "ET",
                  "FK",
                  "FO",
                  "FJ",
                  "PF",
                  "TF",
                  "GA",
                  "GM",
                  "GE",
                  "GH",
                  "GL",
                  "GD",
                  "GU",
                  "GT",
                  "GN",
                  "GW",
                  "GY",
                  "HT",
                  "HM",
                  "HN",
                  "HK",
                  "IN",
                  "ID",
                  "IR",
                  "IQ",
                  "IL",
                  "CI",
                  "JM",
                  "JP",
                  "JO",
                  "KZ",
                  "KE",
                  "KI",
                  "XK",
                  "KW",
                  "KG",
                  "LA",
                  "LB",
                  "LS",
                  "LR",
                  "LY",
                  "MO",
                  "MG",
                  "MW",
                  "MY",
                  "MV",
                  "ML",
                  "MH",
                  "MR",
                  "MU",
                  "MX",
                  "FM",
                  "MD",
                  "MN",
                  "ME",
                  "MS",
                  "MA",
                  "MZ",
                  "MM",
                  "NA",
                  "NR",
                  "NP",
                  "AN",
                  "NC",
                  "NZ",
                  "NI",
                  "NE",
                  "NG",
                  "NU",
                  "NF",
                  "KP",
                  "MK",
                  "MP",
                  "OM",
                  "PK",
                  "PW",
                  "PS",
                  "PA",
                  "PG",
                  "PY",
                  "PE",
                  "PH",
                  "PN",
                  "PR",
                  "QA",
                  "CG",
                  "RU",
                  "RW",
                  "SH",
                  "KN",
                  "LC",
                  "VC",
                  "WS",
                  "ST",
                  "SA",
                  "SN",
                  "RS",
                  "SC",
                  "SL",
                  "SG",
                  "SX",
                  "SB",
                  "SO",
                  "ZA",
                  "KR",
                  "GS",
                  "SS",
                  "LK",
                  "SD",
                  "SR",
                  "SY",
                  "SJ",
                  "TW",
                  "TJ",
                  "TZ",
                  "TH",
                  "TG",
                  "TK",
                  "TO",
                  "TT",
                  "TN",
                  "TR",
                  "TM",
                  "TC",
                  "TV",
                  "UG",
                  "UA",
                  "AE",
                  "UM",
                  "US",
                  "UY",
                  "UZ",
                  "VU",
                  "VE",
                  "VN",
                  "VI",
                  "WF",
                  "EH",
                  "YE",
                  "ZM",
                  "ZW"
                ]
              }
            },
            "description": "Regulatory authority"
          },
          "structuredRegulatoryReporting": {
            "type": "object",
            "properties": {
              "code": {
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "amount": {
                "maximum": 2147483647,
                "minimum": 0.01,
                "exclusiveMinimum": false,
                "type": "number",
                "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
                "example": 100
              },
              "currencyCode": {
                "type": "string",
                "description": "Currency of the account in ISO 4217 format. Default is GBP",
                "enum": [
                  "GBP",
                  "EUR",
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BOV",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHE",
                  "CHF",
                  "CHW",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "COU",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "FJD",
                  "FKP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "SSP",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "SHP",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "USN",
                  "UYI",
                  "UYU",
                  "UYW",
                  "UZS",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XAG",
                  "XAU",
                  "XBA",
                  "XBB",
                  "XBC",
                  "XBD",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPD",
                  "XPF",
                  "XPT",
                  "XSU",
                  "XTS",
                  "XUA",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWL"
                ]
              },
              "information": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Structured regulatory reporting"
          }
        },
        "description": "Regulatory reporting"
      },
      "payment.StructuredRegulatoryReporting": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string"
          },
          "amount": {
            "maximum": 2147483647,
            "minimum": 0.01,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Amount of the payment in Major Current Units - '1' = 1.00 GBP",
            "example": 100
          },
          "currencyCode": {
            "type": "string",
            "description": "Currency of the account in ISO 4217 format. Default is GBP",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "information": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": "Structured regulatory reporting"
      },
      "card.AsyncTaskPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "createdDate",
                "status",
                "taskBid",
                "type"
              ],
              "type": "object",
              "properties": {
                "taskBid": {
                  "type": "string",
                  "description": "ID of async task",
                  "example": "T110000003"
                },
                "resourceUrl": {
                  "type": "string",
                  "description": "Url of available resource after task completion",
                  "example": "/cards/V110000022"
                },
                "resourceId": {
                  "type": "string",
                  "description": "ID of resource after task completion. Will only be returned for COMPLETE tasks.",
                  "example": "V110000022"
                },
                "type": {
                  "type": "string",
                  "description": "Type of async task"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the task"
                },
                "createdDate": {
                  "type": "string",
                  "description": "The creation date of the task",
                  "format": "date-time"
                },
                "errorReason": {
                  "type": "string",
                  "description": "The error reason. Only populated if status is ERROR"
                }
              },
              "description": "List of responses on the current page"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "card.AsyncTaskCreatedResponse": {
        "required": [
          "taskId",
          "taskUrl"
        ],
        "type": "object",
        "properties": {
          "taskUrl": {
            "type": "string",
            "description": "Url of card task resource"
          },
          "taskId": {
            "type": "string",
            "description": "ID of card task"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Meta data associated with async task response"
            },
            "description": "Meta data associated with async task response"
          }
        }
      },
      "card.ReportTypeNotificationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "description": "List of responses on the current page"
      },
      "pispgateway.Capability": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the capability, can be one of SINGLE_IMMEDIATE, STANDING_ORDER",
            "example": "SINGLE_IMMEDIATE",
            "enum": [
              "SINGLE_IMMEDIATE",
              "STANDING_ORDER",
              "SWEEPING_VRP"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the capability, can be one of ENABLED, DISABLED",
            "example": "ENABLED",
            "enum": [
              "ENABLED",
              "DISABLED"
            ]
          }
        },
        "description": "Capability list of the ASPSP"
      },
      "onboarding.AssociateComplianceDataResponse": {
        "type": "object",
        "properties": {
          "relationship": {
            "type": "string"
          }
        },
        "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
      },
      "account.AccessGroupWithDetailsResponse": {
        "required": [
          "accountIds",
          "beneficiaryIds",
          "countOfAccounts",
          "id",
          "name",
          "status",
          "type",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the access group",
            "example": "G0000001"
          },
          "name": {
            "type": "string",
            "description": "Access group name"
          },
          "type": {
            "type": "string",
            "description": "The type of access group",
            "enum": [
              "SERVICE_PARTNER",
              "SERVICE_CUSTOMER",
              "DELEGATE",
              "USER_DEFINED"
            ]
          },
          "typeId": {
            "type": "string",
            "description": "The identifier of the linked entity implied by the type, e.g. the partner ID"
          },
          "status": {
            "type": "string",
            "description": "Status of the access group",
            "enum": [
              "ACTIVE",
              "DELETED"
            ]
          },
          "countOfAccounts": {
            "type": "integer",
            "description": "The number of accounts in this group",
            "format": "int64",
            "deprecated": true
          },
          "accountIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "BIDs of Accounts in the group",
            "items": {
              "type": "string",
              "description": "BIDs of Accounts in the group"
            }
          },
          "beneficiaryIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "BIDs of Beneficiaries in the group",
            "items": {
              "type": "string",
              "description": "BIDs of Beneficiaries in the group"
            }
          }
        },
        "description": "AccessGroupWithDetails"
      },
      "card.CardEnquiryRequest": {
        "type": "object",
        "properties": {
          "pan": {
            "type": "string",
            "description": "pan"
          },
          "providerSuppliedId": {
            "type": "string",
            "description": "providerSuppliedId"
          }
        },
        "description": "Enquiry"
      },
      "card.OtpDetails": {
        "required": [
          "deliveryDetails",
          "deliveryMethod",
          "expiry",
          "verificationCode"
        ],
        "type": "object",
        "properties": {
          "deliveryDetails": {
            "type": "string",
            "description": "OTP delivery details",
            "example": "+447777123456"
          },
          "deliveryMethod": {
            "type": "string",
            "description": "OTP delivery method",
            "example": "SMS",
            "enum": [
              "SMS",
              "EMAIL",
              "CALL_CENTRE",
              "AUTOMATED_CALL_CENTRE",
              "WEB",
              "APP",
              "PHONE_CALL",
              "NONE"
            ]
          },
          "expiry": {
            "type": "string",
            "description": "OTP expiry date and time (UTC, ISO 8601 format)",
            "format": "date-time"
          },
          "verificationCode": {
            "type": "string",
            "description": "OTP",
            "example": "393805"
          }
        }
      },
      "directdebit.ReinstateMandateRequest": {
        "required": [
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "description": "Reason to re-instate the mandate"
          }
        },
        "description": "Details of Mandate reinstatement."
      },
      "onboarding.CustomerTaxProfileResponse": {
        "required": [
          "taxIdentifier"
        ],
        "type": "object",
        "properties": {
          "taxIdentifier": {
            "type": "string",
            "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
          }
        },
        "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
      },
      "account.CustomerTrustRequest": {
        "required": [
          "trustNature"
        ],
        "type": "object",
        "properties": {
          "trustNature": {
            "type": "string",
            "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers.",
            "enum": [
              "BARE_TRUSTS",
              "INTEREST_IN_POSSESSION_TRUSTS",
              "DISCRETIONARY_TRUSTS",
              "ACCUMULATION_TRUSTS",
              "MIXED_TRUSTS",
              "SETTLOR_INTERESTED_TRUSTS",
              "NON_RESIDENT_TRUSTS",
              "OFFSHORE_TRUSTS",
              "FAMILY_LIVING_TRUST",
              "PILOT_TRUST",
              "VULNERABLE_BENEFICIARY_TRUST",
              "CHARITABLE_TRUSTS",
              "IRREVOCABLE_LIFE_INSURANCE_TRUST",
              "TESTAMENTARY_TRUSTS",
              "OTHER"
            ]
          }
        },
        "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers."
      },
      "account.CustomerTaxProfileResponse": {
        "required": [
          "taxIdentifier"
        ],
        "type": "object",
        "properties": {
          "taxIdentifier": {
            "type": "string",
            "description": "Tax identifier for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
          }
        },
        "description": "Tax profile for customers of type SOLETRADER. Optional for type SOLETRADER, not to be set for non-SOLETRADER customers."
      },
      "onboarding.AssociateResponse": {
        "required": [
          "dateOfBirth",
          "firstName",
          "id",
          "lastName",
          "type",
          "verificationStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the Associate"
          },
          "firstName": {
            "type": "string",
            "description": "Associate's first name(s)"
          },
          "middleName": {
            "type": "string",
            "description": "Associate's middle name"
          },
          "lastName": {
            "type": "string",
            "description": "Associate's surname"
          },
          "email": {
            "type": "string",
            "description": "Associate's email address"
          },
          "phone": {
            "type": "string",
            "description": "Associate's phone number, in international number format"
          },
          "applicant": {
            "type": "boolean",
            "description": "Indicates which Associate originally applied for the Modulr account"
          },
          "ownership": {
            "type": "integer",
            "description": "The Associate's percentage ownership of the Customer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Describes the relation between the Associate and the Customer. Can be one of "
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Associate's date of birth in format yyyy-MM-dd, or format yyyy-MM where day is unknown"
          },
          "verificationStatus": {
            "type": "string",
            "description": "How the Associate was verified. Can be one of "
          },
          "homeAddress": {
            "required": [
              "addressLine1",
              "country",
              "postCode",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "postTown": {
                "type": "string"
              },
              "postCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countrySubDivision": {
                "type": "string"
              }
            },
            "description": "Address"
          },
          "documentInfo": {
            "type": "array",
            "description": "Documents gathered during Customer Due Diligence checks on an Associate.",
            "items": {
              "required": [
                "fileName",
                "path",
                "uploadedDate"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "uploadedDate": {
                  "type": "string",
                  "description": "Valid date. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "example": "2017-01-28T01:01:01+0000"
                }
              },
              "description": "Array of document objects that relate to the Customer being created. Examples of Documents could be proof of a Company Director's identity or address, Articles of Association or a Partnership Agreement."
            }
          },
          "additionalPersonalIdentifiers": {
            "type": "array",
            "description": "Additional personal identifier(s)",
            "items": {
              "required": [
                "type",
                "value"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of Additional Personal Identifier",
                  "enum": [
                    "BSN"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "Additional Personal Identifier value"
                }
              },
              "description": "AdditionalPersonalIdentifier"
            }
          },
          "complianceData": {
            "type": "object",
            "properties": {
              "relationship": {
                "type": "string"
              }
            },
            "description": "Optional for associates of type C_INTEREST and an EU customer legal entity. Mandatory for associates of type PREQUALIFIED. Not to be set for other associate types and/or for UK customer legal entity."
          }
        },
        "description": "Associate"
      },
      "payment.UltimatePayer": {
        "required": [
          "address",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Name of the ultimate payer"
          },
          "address": {
            "required": [
              "country"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "First line of the ultimate payers address",
                "example": "2nd Floor"
              },
              "addressLine2": {
                "maxLength": 70,
                "minLength": 0,
                "type": "string",
                "description": "Second line of the ultimate payers address",
                "example": "123 High Street"
              },
              "postTown": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Postal town of the ultimate payers address",
                "example": "Edinburgh"
              },
              "postCode": {
                "maxLength": 16,
                "minLength": 0,
                "type": "string",
                "description": "Post code of the ultimate payers address",
                "example": "AB12 3XX"
              },
              "country": {
                "type": "string",
                "description": "ISO 3166 country code of the ultimate payers address",
                "example": "GB"
              }
            }
          },
          "birthDetails": {
            "type": "object",
            "properties": {
              "dateOfBirth": {
                "pattern": "^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$",
                "type": "string",
                "description": "Date of birth in ISO 8601 format of the ultimate payer",
                "example": "1978-01-01"
              },
              "cityOfBirth": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "City of birth of the ultimate payer",
                "example": "Edinburgh"
              },
              "countryOfBirth": {
                "type": "string",
                "description": "ISO 3166 country code of the ultimate payers country of birth",
                "example": "GB"
              }
            },
            "description": "Birth details of a person. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
          },
          "officialIdentification": {
            "type": "object",
            "properties": {
              "drivingLicenceNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Driving licence number",
                "example": "JONES849339TS8AD"
              },
              "customerNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Customer number",
                "example": "23547326547632"
              },
              "socialSecurityNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Social security number or equivalent",
                "example": "1110000000022AB"
              },
              "passportNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Passport number",
                "example": "123456789"
              },
              "idCardNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "National ID card number",
                "example": "123456789"
              },
              "otherIdNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Other ID number",
                "example": "123456789"
              }
            },
            "description": "Official identification for a person. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
          },
          "officialIdDetailOrgs": {
            "type": "object",
            "properties": {
              "bankPartyIdentification": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Bank party identification",
                "example": "12345"
              },
              "centralBankIdNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Central bank identification number",
                "example": "678910"
              },
              "clearingIdNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Clearing identification Number",
                "example": "xx15402"
              },
              "certificateOfIncorporationNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Certification of the incorporation number",
                "example": "1100010"
              },
              "countryIdCode": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Country identification code",
                "example": "111111"
              },
              "customerNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Customer number",
                "example": "00221133"
              },
              "dataUniversalNumberingSystem": {
                "pattern": "^[0-9]{9,9}?$",
                "type": "string",
                "description": "Data universal numbering system",
                "example": "002211330"
              },
              "employerIdNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Employer identification number",
                "example": "00221133"
              },
              "gs1glnIdentifier": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "GS1GLN identifier",
                "example": "00221133"
              },
              "sirenCode": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "SIREN code",
                "example": "00221133"
              },
              "siretCode": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "SIRET code",
                "example": "00221133"
              },
              "taxIdNumber": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Tax identification number",
                "example": "00221133"
              },
              "bicIdentifier": {
                "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                "type": "string",
                "description": "BICI identification",
                "example": "MGALODJAO7A"
              },
              "ibeiIdentifier": {
                "pattern": "^[A-Z]{2,2}[B-DF-HJ-NP-TV-XZ0-9]{7,7}[0-9]{1,1}?$",
                "type": "string",
                "description": "IBEI identification",
                "example": "HIZFTMTT59"
              },
              "beiIdentifier": {
                "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}?$",
                "type": "string",
                "description": "BEI identification",
                "example": "MHIHISVZUMH"
              },
              "eanglnIdentifier": {
                "pattern": "^[0-9]{13,13}?$",
                "type": "string",
                "description": "EANGLN identification",
                "example": "7516164953429"
              },
              "chipsUniversalIdentifier": {
                "pattern": "^CH[0-9]{6,6}?$",
                "type": "string",
                "description": "CHIPS universal identification",
                "example": "CH157373"
              },
              "genericIdentification3": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Generic identification 3",
                "example": "123456788"
              },
              "genericIdentificationIssr": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string",
                "description": "Generic identification issr",
                "example": "13143225"
              }
            },
            "description": "Organisation's official identification. Official identification details. Property 'birthDetails' and/or 'officialIdentification' Or 'officialIdDetailOrgs' is mandatory"
          },
          "overseasAccountIdentifier": {
            "type": "object",
            "properties": {
              "iban": {
                "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}$",
                "type": "string",
                "description": "International Bank Account Number (IBAN)",
                "example": "GB20MODR00000000000001"
              },
              "bban": {
                "pattern": "^[a-zA-Z0-9]{1,30}$",
                "type": "string",
                "description": "Basic Bank Account Number (BBAN)",
                "example": "NWBK60161331926819"
              },
              "upic": {
                "pattern": "^\\d{8,17}$",
                "type": "string",
                "description": "Universal Payment Identification Code (UPIC)",
                "example": "987654321"
              },
              "otherAccountNumber": {
                "pattern": "^[a-zA-Z0-9]{1,34}$",
                "type": "string",
                "description": "Other Account ID",
                "example": "987654321"
              }
            }
          },
          "bic": {
            "pattern": "^[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?$",
            "type": "string",
            "description": "Destination beneficiary's BIC/Swift Code.",
            "example": "MODRDEFF123"
          }
        }
      },
      "directdebit.DirectDebitPageResponseCollectionScheduleResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "createdDate",
                "frequency",
                "id",
                "numberOfPayments",
                "status"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for direct-debit collection.",
                  "example": "Q0000001"
                },
                "frequency": {
                  "type": "string",
                  "description": "Frequency for direct-debit collection",
                  "example": "MONTHLY"
                },
                "numberOfPayments": {
                  "type": "integer",
                  "description": "Number of payments for direct-debit collection",
                  "format": "int32",
                  "example": 12
                },
                "firstPaymentAmount": {
                  "type": "number",
                  "description": "Amount of the first collection payment",
                  "example": 100
                },
                "firstPaymentDate": {
                  "type": "string",
                  "description": "Date of the first collection payment. Format is yyyy-MM-dd.",
                  "example": "2018-01-10"
                },
                "regularPaymentAmount": {
                  "type": "number",
                  "description": "Amount of the regular collection payments",
                  "example": 100
                },
                "regularPaymentStartDate": {
                  "type": "string",
                  "description": "Start date of the regular collection payment. Format is yyyy-MM-dd.",
                  "example": "2018-01-10"
                },
                "createdDate": {
                  "type": "string",
                  "description": "Datetime when direct-debit collection was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
                  "format": "date-time"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the direct-debit collection. Can be one of ",
                  "example": "PROCESSING"
                },
                "externalReference": {
                  "type": "string"
                },
                "collectionReference": {
                  "type": "string"
                }
              }
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0-based, i.e first page = 0, second page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "account.CustomerComplianceDataResponse": {
        "type": "object",
        "properties": {
          "typeDescription": {
            "type": "string"
          },
          "riskLevel": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "UNDETERMINED"
            ]
          },
          "vulnerabilityReasons": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "LIFE_EVENTS",
                "HEALTH",
                "RESILIENCE",
                "CAPABILITY",
                "FINANCIAL_DIFFICULTY"
              ]
            }
          }
        },
        "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
      },
      "account.IdentifierCountrySpecificDetailsResponse": {
        "type": "object",
        "properties": {
          "bankName": {
            "type": "string",
            "description": "The name of the destination bank.",
            "example": "Apple Bank"
          },
          "bankAddress": {
            "type": "string",
            "description": "The address of the destination bank.",
            "example": "2100 Broadway"
          },
          "bankCity": {
            "type": "string",
            "description": "The city in which the destination bank resides.",
            "example": "New York City"
          },
          "bankBranchName": {
            "type": "string",
            "description": "The name of the destination bank's branch.",
            "example": "New York"
          },
          "bankBranchCode": {
            "type": "string",
            "description": "The code of the destination bank's branch.",
            "example": "44-04"
          },
          "bankCode": {
            "type": "string",
            "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
          },
          "chineseId": {
            "type": "string",
            "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
            "example": "01101201901018889"
          },
          "province": {
            "type": "string",
            "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
            "example": "Zhejiang"
          },
          "business": {
            "type": "boolean",
            "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
            "example": true
          },
          "bankCodeType": {
            "type": "string",
            "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
            "example": "ABA",
            "enum": [
              "ABA",
              "CHIPS"
            ]
          },
          "bankCountry": {
            "type": "string",
            "description": "The country in which the destination bank resides.",
            "example": "US",
            "enum": [
              "AT",
              "BE",
              "BG",
              "CY",
              "CZ",
              "DK",
              "EE",
              "FI",
              "FR",
              "DE",
              "GR",
              "HR",
              "HU",
              "IS",
              "IE",
              "IT",
              "LV",
              "LI",
              "LT",
              "LU",
              "MT",
              "NL",
              "NO",
              "PL",
              "PT",
              "RO",
              "SK",
              "SI",
              "ES",
              "SE",
              "GB",
              "MQ",
              "YT",
              "GP",
              "GF",
              "RE",
              "MF",
              "GI",
              "GG",
              "IM",
              "JE",
              "MC",
              "CH",
              "AD",
              "SM",
              "VA",
              "AX",
              "PM",
              "BL",
              "AF",
              "AL",
              "DZ",
              "AS",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "VG",
              "BN",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CK",
              "CR",
              "CU",
              "CW",
              "CD",
              "DJ",
              "DM",
              "DO",
              "TL",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "SZ",
              "ET",
              "FK",
              "FO",
              "FJ",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "GH",
              "GL",
              "GD",
              "GU",
              "GT",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "HN",
              "HK",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IL",
              "CI",
              "JM",
              "JP",
              "JO",
              "KZ",
              "KE",
              "KI",
              "XK",
              "KW",
              "KG",
              "LA",
              "LB",
              "LS",
              "LR",
              "LY",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MH",
              "MR",
              "MU",
              "MX",
              "FM",
              "MD",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "KP",
              "MK",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PR",
              "QA",
              "CG",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "VC",
              "WS",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SB",
              "SO",
              "ZA",
              "KR",
              "GS",
              "SS",
              "LK",
              "SD",
              "SR",
              "SY",
              "SJ",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UM",
              "US",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "abaRoutingNumber": {
            "type": "string",
            "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
            "example": "123456789"
          }
        },
        "example": {
          "branchCode": "123456789"
        }
      },
      "payment.SchemeInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "responseCode": {
            "type": "string"
          }
        },
        "description": "Information with regards to the payment scheme"
      },
      "card.AppleInAppProvisioningRequest": {
        "required": [
          "additionalCertificates",
          "leafCertificate",
          "nonce",
          "nonceSignature"
        ],
        "type": "object",
        "properties": {
          "leafCertificate": {
            "type": "string",
            "description": "Apple issued public base 64 encoded certificate to encrypt the provisioning data"
          },
          "additionalCertificates": {
            "type": "array",
            "description": "Apple issued public base 64 encoded certificates that complete the chain including the root certificate",
            "items": {
              "type": "string",
              "description": "Apple issued public base 64 encoded certificates that complete the chain including the root certificate"
            }
          },
          "nonce": {
            "type": "string",
            "description": "Hex encoded nonce generated by the client"
          },
          "nonceSignature": {
            "type": "string",
            "description": "Hex encoded nonce signed with the private key to verify the certificate public key"
          }
        },
        "description": "Apple in app provisioning request"
      },
      "confirmationofpayee.JsonOutboundCopResult": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The result of the account name check.",
            "example": "MATCHED",
            "enum": [
              "MATCHED",
              "NOT_MATCHED",
              "CLOSE_MATCH",
              "BUSINESS_ACCOUNT_NAME_MATCHED",
              "PERSONAL_ACCOUNT_NAME_MATCHED",
              "BUSINESS_ACCOUNT_CLOSE_MATCH",
              "PERSONAL_ACCOUNT_CLOSE_MATCH",
              "ACCOUNT_DOES_NOT_EXIST",
              "SECONDARY_ACCOUNT_ID_NOT_FOUND",
              "ACCOUNT_NOT_SUPPORTED",
              "OPTED_OUT",
              "ACCOUNT_SWITCHED",
              "WRONG_PARTICIPANT",
              "NO_RESPONSE",
              "NOT_ENROLLED"
            ]
          },
          "name": {
            "type": "string",
            "description": "The actual name on the account (as provided by the participating organisation).",
            "example": "Joseph Bloggs"
          }
        },
        "description": "Account Name Check Result"
      },
      "rule.RuleResponse": {
        "required": [
          "accountCurrency",
          "accountId",
          "data",
          "id",
          "masterId",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for a Rule",
            "example": "R1000001"
          },
          "type": {
            "type": "string",
            "description": "The type of Rule. Can be one of the following {SWEEP, SPLIT, FUNDING}",
            "enum": [
              "SPLIT",
              "SWEEP",
              "FUNDING"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "name": {
            "type": "string",
            "description": "Rule's name",
            "example": "My new rule"
          },
          "accountId": {
            "type": "string",
            "description": "The Account which the Rule is created on.",
            "example": "A1000001"
          },
          "accountCurrency": {
            "type": "string",
            "enum": [
              "GBP",
              "EUR",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SLE",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "SHP",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "masterId": {
            "type": "string",
            "description": "The master rule ID. When a rule is changed, the original is marked as inactive, and a new one created. The master ID enables us to identify those rules which are updates",
            "example": "M1000001"
          },
          "data": {
            "type": "object",
            "properties": {
              "daysToRun": {
                "type": "array",
                "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                "items": {
                  "type": "string",
                  "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
                  "enum": [
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY",
                    "SUNDAY"
                  ]
                }
              },
              "frequency": {
                "type": "string",
                "description": "Frequency of the rule. Sweep Rule Only",
                "enum": [
                  "Daily"
                ]
              },
              "destinationId": {
                "type": "string",
                "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
              },
              "balanceToLeave": {
                "type": "number",
                "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
              },
              "triggerBalance": {
                "type": "number",
                "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
              },
              "splits": {
                "type": "array",
                "items": {
                  "required": [
                    "destinationId",
                    "percent"
                  ],
                  "type": "object",
                  "properties": {
                    "destinationId": {
                      "type": "string",
                      "description": "Id of destination beneficiary. e.g. B1000001."
                    },
                    "percent": {
                      "type": "string",
                      "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                    }
                  },
                  "description": "Configuration for a Split Rule"
                }
              },
              "conditionalSplits": {
                "type": "array",
                "items": {
                  "required": [
                    "destinationId",
                    "percent"
                  ],
                  "type": "object",
                  "properties": {
                    "destinationId": {
                      "type": "string",
                      "description": "Id of destination beneficiary. e.g. B1000001."
                    },
                    "percent": {
                      "type": "string",
                      "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                    }
                  },
                  "description": "Configuration for a Split Rule"
                }
              },
              "conditionalSplitConfig": {
                "required": [
                  "conditionAmount",
                  "destinationId",
                  "percent"
                ],
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "description": "Id of destination beneficiary. e.g. B1000001."
                  },
                  "percent": {
                    "type": "string",
                    "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                  },
                  "conditionAmount": {
                    "maximum": 2147483647,
                    "minimum": 0.01,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
                  },
                  "conditionDone": {
                    "type": "boolean",
                    "description": "Whether the condition amount has been met. e.g. true or false"
                  }
                },
                "description": "Configuration for a Conditional Split Rule"
              },
              "sourceId": {
                "type": "string",
                "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
              }
            },
            "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
          }
        }
      },
      "account.AccountResponse": {
        "required": [
          "availableBalance",
          "balance",
          "createdDate",
          "currency",
          "customerId",
          "id",
          "identifiers",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the account",
            "example": "A0000001"
          },
          "name": {
            "type": "string",
            "description": "Name for the account"
          },
          "balance": {
            "type": "string",
            "description": "Balance of the account in format 'NN.NN'",
            "example": "10000.0"
          },
          "availableBalance": {
            "type": "string",
            "description": "The current available balance of the Account. Calculated by subtracting any pending payments from the current balance",
            "example": "10000.0"
          },
          "currency": {
            "type": "string",
            "description": "Currency of the account in ISO 4217 format",
            "example": "GBP"
          },
          "status": {
            "type": "string",
            "description": "Status of the account. Accounts must be 'ACTIVE' to make and receive payments. Can be one of ",
            "example": "ACTIVE"
          },
          "identifiers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "accountNumber": {
                  "type": "string",
                  "description": "Bank account Sort Code",
                  "example": "12345678"
                },
                "accountType": {
                  "type": "string",
                  "description": "Bank account type like PERSONAL/BUSINESS",
                  "enum": [
                    "PERSONAL",
                    "BUSINESS"
                  ]
                },
                "sortCode": {
                  "type": "string",
                  "description": "Bank account Sort Code",
                  "example": "000000"
                },
                "iban": {
                  "type": "string",
                  "example": "GB20MODR04001401100000"
                },
                "bic": {
                  "type": "string",
                  "example": "MODRGB21"
                },
                "currency": {
                  "type": "string",
                  "example": "GBP"
                },
                "countrySpecificDetails": {
                  "type": "object",
                  "properties": {
                    "bankName": {
                      "type": "string",
                      "description": "The name of the destination bank.",
                      "example": "Apple Bank"
                    },
                    "bankAddress": {
                      "type": "string",
                      "description": "The address of the destination bank.",
                      "example": "2100 Broadway"
                    },
                    "bankCity": {
                      "type": "string",
                      "description": "The city in which the destination bank resides.",
                      "example": "New York City"
                    },
                    "bankBranchName": {
                      "type": "string",
                      "description": "The name of the destination bank's branch.",
                      "example": "New York"
                    },
                    "bankBranchCode": {
                      "type": "string",
                      "description": "The code of the destination bank's branch.",
                      "example": "44-04"
                    },
                    "bankCode": {
                      "type": "string",
                      "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
                    },
                    "chineseId": {
                      "type": "string",
                      "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
                      "example": "01101201901018889"
                    },
                    "province": {
                      "type": "string",
                      "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
                      "example": "Zhejiang"
                    },
                    "business": {
                      "type": "boolean",
                      "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
                      "example": true
                    },
                    "bankCodeType": {
                      "type": "string",
                      "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
                      "example": "ABA",
                      "enum": [
                        "ABA",
                        "CHIPS"
                      ]
                    },
                    "bankCountry": {
                      "type": "string",
                      "description": "The country in which the destination bank resides.",
                      "example": "US",
                      "enum": [
                        "AT",
                        "BE",
                        "BG",
                        "CY",
                        "CZ",
                        "DK",
                        "EE",
                        "FI",
                        "FR",
                        "DE",
                        "GR",
                        "HR",
                        "HU",
                        "IS",
                        "IE",
                        "IT",
                        "LV",
                        "LI",
                        "LT",
                        "LU",
                        "MT",
                        "NL",
                        "NO",
                        "PL",
                        "PT",
                        "RO",
                        "SK",
                        "SI",
                        "ES",
                        "SE",
                        "GB",
                        "MQ",
                        "YT",
                        "GP",
                        "GF",
                        "RE",
                        "MF",
                        "GI",
                        "GG",
                        "IM",
                        "JE",
                        "MC",
                        "CH",
                        "AD",
                        "SM",
                        "VA",
                        "AX",
                        "PM",
                        "BL",
                        "AF",
                        "AL",
                        "DZ",
                        "AS",
                        "AO",
                        "AI",
                        "AQ",
                        "AG",
                        "AR",
                        "AM",
                        "AW",
                        "AU",
                        "AZ",
                        "BS",
                        "BH",
                        "BD",
                        "BB",
                        "BY",
                        "BZ",
                        "BJ",
                        "BM",
                        "BT",
                        "BO",
                        "BQ",
                        "BA",
                        "BW",
                        "BV",
                        "BR",
                        "IO",
                        "VG",
                        "BN",
                        "BF",
                        "BI",
                        "KH",
                        "CM",
                        "CA",
                        "CV",
                        "KY",
                        "CF",
                        "TD",
                        "CL",
                        "CN",
                        "CX",
                        "CC",
                        "CO",
                        "KM",
                        "CK",
                        "CR",
                        "CU",
                        "CW",
                        "CD",
                        "DJ",
                        "DM",
                        "DO",
                        "TL",
                        "EC",
                        "EG",
                        "SV",
                        "GQ",
                        "ER",
                        "SZ",
                        "ET",
                        "FK",
                        "FO",
                        "FJ",
                        "PF",
                        "TF",
                        "GA",
                        "GM",
                        "GE",
                        "GH",
                        "GL",
                        "GD",
                        "GU",
                        "GT",
                        "GN",
                        "GW",
                        "GY",
                        "HT",
                        "HM",
                        "HN",
                        "HK",
                        "IN",
                        "ID",
                        "IR",
                        "IQ",
                        "IL",
                        "CI",
                        "JM",
                        "JP",
                        "JO",
                        "KZ",
                        "KE",
                        "KI",
                        "XK",
                        "KW",
                        "KG",
                        "LA",
                        "LB",
                        "LS",
                        "LR",
                        "LY",
                        "MO",
                        "MG",
                        "MW",
                        "MY",
                        "MV",
                        "ML",
                        "MH",
                        "MR",
                        "MU",
                        "MX",
                        "FM",
                        "MD",
                        "MN",
                        "ME",
                        "MS",
                        "MA",
                        "MZ",
                        "MM",
                        "NA",
                        "NR",
                        "NP",
                        "AN",
                        "NC",
                        "NZ",
                        "NI",
                        "NE",
                        "NG",
                        "NU",
                        "NF",
                        "KP",
                        "MK",
                        "MP",
                        "OM",
                        "PK",
                        "PW",
                        "PS",
                        "PA",
                        "PG",
                        "PY",
                        "PE",
                        "PH",
                        "PN",
                        "PR",
                        "QA",
                        "CG",
                        "RU",
                        "RW",
                        "SH",
                        "KN",
                        "LC",
                        "VC",
                        "WS",
                        "ST",
                        "SA",
                        "SN",
                        "RS",
                        "SC",
                        "SL",
                        "SG",
                        "SX",
                        "SB",
                        "SO",
                        "ZA",
                        "KR",
                        "GS",
                        "SS",
                        "LK",
                        "SD",
                        "SR",
                        "SY",
                        "SJ",
                        "TW",
                        "TJ",
                        "TZ",
                        "TH",
                        "TG",
                        "TK",
                        "TO",
                        "TT",
                        "TN",
                        "TR",
                        "TM",
                        "TC",
                        "TV",
                        "UG",
                        "UA",
                        "AE",
                        "UM",
                        "US",
                        "UY",
                        "UZ",
                        "VU",
                        "VE",
                        "VN",
                        "VI",
                        "WF",
                        "EH",
                        "YE",
                        "ZM",
                        "ZW"
                      ]
                    },
                    "abaRoutingNumber": {
                      "type": "string",
                      "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
                      "example": "123456789"
                    }
                  },
                  "example": {
                    "branchCode": "123456789"
                  }
                }
              },
              "description": "Account Identifier"
            }
          },
          "customerId": {
            "type": "string",
            "description": "Unique id of the Customer",
            "example": "C0000001"
          },
          "customerName": {
            "type": "string",
            "description": "Customer Name"
          },
          "externalReference": {
            "type": "string",
            "description": "Your reference for an account",
            "example": "aReference_00001"
          },
          "accessGroups": {
            "type": "array",
            "description": "Ids of Access Groups this account belongs to",
            "items": {
              "type": "string",
              "description": "Ids of Access Groups this account belongs to"
            }
          },
          "createdDate": {
            "type": "string",
            "description": "Datetime when the account was created. Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "directDebit": {
            "type": "boolean",
            "description": "Direct Debit Enabled"
          },
          "securedFundingLimit": {
            "type": "string",
            "description": "Limit of funds available below a balance of zero"
          }
        },
        "description": "Account"
      },
      "card.UpdateCardRequest": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Total card authorisation limit.",
            "example": 1000
          },
          "cancellationDate": {
            "type": "string",
            "description": "ISO 8601 date with year, month & day components only. The supplied value must be in the future and at most 1 day before the expiry date.",
            "example": "2025-01-01"
          },
          "holder": {
            "type": "object",
            "properties": {
              "billingAddress": {
                "required": [
                  "addressLine1",
                  "country",
                  "postCode",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "First line of address",
                    "example": "Floor 10"
                  },
                  "addressLine2": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Second line of address",
                    "example": "80 George Street"
                  },
                  "postTown": {
                    "maxLength": 20,
                    "minLength": 1,
                    "type": "string",
                    "description": "Post town",
                    "example": "EDINBURGH"
                  },
                  "postCode": {
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string",
                    "description": "Postcode",
                    "example": "EH2 3BU"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country (ISO 3166 alpha-2 country code)",
                    "example": "GB",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "AX",
                      "AW",
                      "BL",
                      "CW",
                      "GF",
                      "GL",
                      "GP",
                      "ME",
                      "MF",
                      "MQ",
                      "NC",
                      "PF",
                      "PM",
                      "RE",
                      "SX",
                      "TF",
                      "WF",
                      "YT",
                      "AI",
                      "BM",
                      "FK",
                      "GB",
                      "GG",
                      "GI",
                      "GS",
                      "IO",
                      "JE",
                      "KY",
                      "MS",
                      "PN",
                      "SH",
                      "TC",
                      "VG"
                    ]
                  }
                },
                "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
              },
              "shippingAddress": {
                "required": [
                  "addressLine1",
                  "country",
                  "postCode",
                  "postTown"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "First line of address",
                    "example": "Floor 10"
                  },
                  "addressLine2": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Second line of address",
                    "example": "80 George Street"
                  },
                  "postTown": {
                    "maxLength": 20,
                    "minLength": 1,
                    "type": "string",
                    "description": "Post town",
                    "example": "EDINBURGH"
                  },
                  "postCode": {
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string",
                    "description": "Postcode",
                    "example": "EH2 3BU"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country (ISO 3166 alpha-2 country code)",
                    "example": "GB",
                    "enum": [
                      "AT",
                      "BE",
                      "BG",
                      "CY",
                      "CZ",
                      "DK",
                      "EE",
                      "FI",
                      "FR",
                      "DE",
                      "GR",
                      "HR",
                      "HU",
                      "IS",
                      "IE",
                      "IT",
                      "LV",
                      "LI",
                      "LT",
                      "LU",
                      "MT",
                      "NL",
                      "NO",
                      "PL",
                      "PT",
                      "RO",
                      "SK",
                      "SI",
                      "ES",
                      "SE",
                      "AX",
                      "AW",
                      "BL",
                      "CW",
                      "GF",
                      "GL",
                      "GP",
                      "ME",
                      "MF",
                      "MQ",
                      "NC",
                      "PF",
                      "PM",
                      "RE",
                      "SX",
                      "TF",
                      "WF",
                      "YT",
                      "AI",
                      "BM",
                      "FK",
                      "GB",
                      "GG",
                      "GI",
                      "GS",
                      "IO",
                      "JE",
                      "KY",
                      "MS",
                      "PN",
                      "SH",
                      "TC",
                      "VG"
                    ]
                  }
                },
                "description": "Address details for the cardholder. Optional for individual customers whose partner has verification type EXTERNAL."
              },
              "dateOfBirth": {
                "type": "string",
                "description": "Cardholder date of birth. Must match date format of yyyy-mm-dd. Required for virtual consumer and physical cards. Must be NULL for individual customers.",
                "format": "date",
                "example": "2001-01-01"
              },
              "mobileNumber": {
                "type": "string",
                "description": "Cardholder mobile number. Must start with a '+', followed by the country code and then the mobile number. Required for virtual consumer and physical cards.",
                "example": "+447123456000"
              },
              "email": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string",
                "description": "Cardholder email",
                "example": "cardholder@example.com"
              }
            },
            "description": "CardHolder"
          },
          "authWindow": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "example": "2025-01-01"
              },
              "endDate": {
                "type": "string",
                "example": "2025-01-01"
              }
            },
            "description": "Authorisation Windows allow the card holder to add a period of time where the card can ONLY be used, if an Authorisation Window set then transactions outside this window will decline. ISO 8601 date with year, month & day components only."
          }
        },
        "description": "Update card"
      },
      "payment.OverseasAccountIdentifier": {
        "type": "object",
        "properties": {
          "iban": {
            "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}$",
            "type": "string",
            "description": "International Bank Account Number (IBAN)",
            "example": "GB20MODR00000000000001"
          },
          "bban": {
            "pattern": "^[a-zA-Z0-9]{1,30}$",
            "type": "string",
            "description": "Basic Bank Account Number (BBAN)",
            "example": "NWBK60161331926819"
          },
          "upic": {
            "pattern": "^\\d{8,17}$",
            "type": "string",
            "description": "Universal Payment Identification Code (UPIC)",
            "example": "987654321"
          },
          "otherAccountNumber": {
            "pattern": "^[a-zA-Z0-9]{1,34}$",
            "type": "string",
            "description": "Other Account ID",
            "example": "987654321"
          }
        }
      },
      "inboundpayment.SchemeInfoRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique id that identifies a payment end-to-end within a scheme. If used ensure that its unique"
          }
        },
        "description": "Optional scheme details"
      },
      "pispgateway.StandingOrderInitiationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the standing order initiation",
            "example": "I000000001"
          },
          "payment": {
            "required": [
              "amount",
              "destination",
              "reference"
            ],
            "type": "object",
            "properties": {
              "destination": {
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Indicates the type of destination. Can be one of ACCOUNT, SCAN",
                    "enum": [
                      "ACCOUNT",
                      "SCAN",
                      "ACCOUNT",
                      "SCAN"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "Identifier of the destination account if using ACCOUNT type",
                    "example": "A1100001"
                  },
                  "accountNumber": {
                    "pattern": "^[0-9]{8}$",
                    "type": "string",
                    "description": "Account Number of destination account if using SCAN type",
                    "example": "12345678"
                  },
                  "sortCode": {
                    "pattern": "^[0-9]{6}$",
                    "type": "string",
                    "description": "Sort Code of destination account if using SCAN type",
                    "example": "000000"
                  },
                  "name": {
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string",
                    "description": "Name of destination account if using SCAN type (this may be truncated)",
                    "example": "Test"
                  }
                },
                "description": "The destination account for the payment"
              },
              "amount": {
                "required": [
                  "currency",
                  "recurringAmount"
                ],
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Currency of the account in ISO 4217 format. Default is GBP",
                    "enum": [
                      "GBP"
                    ]
                  },
                  "recurringAmount": {
                    "maximum": 2147483647,
                    "minimum": 0.01,
                    "exclusiveMinimum": false,
                    "type": "number",
                    "description": "Recurring amount of the payment in Major Currency Units - '1' = 1.00 GBP",
                    "example": 100
                  }
                },
                "description": "The amount of the standing order"
              },
              "reference": {
                "type": "string",
                "description": "Reference to be used for the Payment. This will appear on the Account statement/the recipient's bank account. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space.",
                "example": "Invoice ABC123"
              }
            },
            "description": "The payment of the standing order"
          },
          "schedule": {
            "required": [
              "frequency",
              "initialDate"
            ],
            "type": "object",
            "properties": {
              "frequency": {
                "type": "string",
                "description": "Type of the capability, can be one of WEEKLY, MONTHLY",
                "enum": [
                  "WEEKLY",
                  "MONTHLY"
                ]
              },
              "initialDate": {
                "type": "string",
                "description": "The date on which the standing order should begin. This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                "example": "2021-03-25"
              },
              "finalDate": {
                "type": "string",
                "description": "The optional date on which the standing order should end. If unspecified, the standing order will continue until cancelled.This must be at least 3 days in the future from today. Date format 'yyyy-MM-dd'",
                "example": "2021-03-25"
              }
            },
            "description": "The schedule of the standing order"
          },
          "status": {
            "type": "string",
            "description": "The status of the standing order initiation, can be one of SUBMITTED, AWAITING_CONSENT, CONSENT_REJECTED, EXECUTED, ER_EXPIRED, ER_EXTSYS, ER_GENERAL",
            "example": "AWAITING_CONSENT"
          },
          "aspspId": {
            "type": "string",
            "description": "The identifier of the ASPSP used for the standing order",
            "example": "H100000001"
          },
          "standingOrderStatus": {
            "type": "string",
            "description": "The status of the standing order at the ASPSP. When available, this is passed through from the ASPSP without modification.",
            "example": "InitiationCompleted"
          }
        },
        "description": "Response object for Get Standing Order Initiation"
      },
      "directdebit.CollectionScheduleResponse": {
        "required": [
          "createdDate",
          "frequency",
          "id",
          "numberOfPayments",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for direct-debit collection.",
            "example": "Q0000001"
          },
          "frequency": {
            "type": "string",
            "description": "Frequency for direct-debit collection",
            "example": "MONTHLY"
          },
          "numberOfPayments": {
            "type": "integer",
            "description": "Number of payments for direct-debit collection",
            "format": "int32",
            "example": 12
          },
          "firstPaymentAmount": {
            "type": "number",
            "description": "Amount of the first collection payment",
            "example": 100
          },
          "firstPaymentDate": {
            "type": "string",
            "description": "Date of the first collection payment. Format is yyyy-MM-dd.",
            "example": "2018-01-10"
          },
          "regularPaymentAmount": {
            "type": "number",
            "description": "Amount of the regular collection payments",
            "example": 100
          },
          "regularPaymentStartDate": {
            "type": "string",
            "description": "Start date of the regular collection payment. Format is yyyy-MM-dd.",
            "example": "2018-01-10"
          },
          "createdDate": {
            "type": "string",
            "description": "Datetime when direct-debit collection was created.Format is 'yyyy-MM-dd'T'HH:mm:ssZ' where Z is UTC offset. e.g 2017-01-28T01:01:01+0000",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Status of the direct-debit collection. Can be one of ",
            "example": "PROCESSING"
          },
          "externalReference": {
            "type": "string"
          },
          "collectionReference": {
            "type": "string"
          }
        }
      },
      "rule.RuleConfigData": {
        "type": "object",
        "properties": {
          "daysToRun": {
            "type": "array",
            "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
            "items": {
              "type": "string",
              "description": "Day(s) of the week the rule is to run. e.g. [\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\",\"SUNDAY\"]. Sweep Rule Only",
              "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
              ]
            }
          },
          "frequency": {
            "type": "string",
            "description": "Frequency of the rule. Sweep Rule Only",
            "enum": [
              "Daily"
            ]
          },
          "destinationId": {
            "type": "string",
            "description": "Id of destination beneficiary. e.g. B1000001. Sweep Rule Only"
          },
          "balanceToLeave": {
            "type": "number",
            "description": "Balance to be left after the rule has been ran. e.g. 100.00. Sweep Rule Only"
          },
          "triggerBalance": {
            "type": "number",
            "description": "Minimum balance required to trigger the rule. e.g. 100.00. Sweep Rule Only"
          },
          "splits": {
            "type": "array",
            "items": {
              "required": [
                "destinationId",
                "percent"
              ],
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string",
                  "description": "Id of destination beneficiary. e.g. B1000001."
                },
                "percent": {
                  "type": "string",
                  "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                }
              },
              "description": "Configuration for a Split Rule"
            }
          },
          "conditionalSplits": {
            "type": "array",
            "items": {
              "required": [
                "destinationId",
                "percent"
              ],
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string",
                  "description": "Id of destination beneficiary. e.g. B1000001."
                },
                "percent": {
                  "type": "string",
                  "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
                }
              },
              "description": "Configuration for a Split Rule"
            }
          },
          "conditionalSplitConfig": {
            "required": [
              "conditionAmount",
              "destinationId",
              "percent"
            ],
            "type": "object",
            "properties": {
              "destinationId": {
                "type": "string",
                "description": "Id of destination beneficiary. e.g. B1000001."
              },
              "percent": {
                "type": "string",
                "description": "Percentage of payment to be moved to specified destination. e.g. 7.25."
              },
              "conditionAmount": {
                "maximum": 2147483647,
                "minimum": 0.01,
                "exclusiveMinimum": false,
                "type": "number",
                "description": "Amount the conditional split rule should reach before defaulting to the split rule. e.g. 100."
              },
              "conditionDone": {
                "type": "boolean",
                "description": "Whether the condition amount has been met. e.g. true or false"
              }
            },
            "description": "Configuration for a Conditional Split Rule"
          },
          "sourceId": {
            "type": "string",
            "description": "Account to fund the supplied accountId. e.g. A1000002. Funding Rule Only"
          }
        },
        "description": "Configuration fields for all types of rules. To be populated where applicable based on rule type."
      },
      "pispgateway.CreateStandingOrderInitiationResponse": {
        "type": "object",
        "properties": {
          "standingOrderInitiationId": {
            "type": "string",
            "description": "The unique identifier of the standing order initiation request at Modulr",
            "example": "I000000001"
          },
          "redirectUrl": {
            "type": "string",
            "description": "A redirect URL for the user to authorise the standing order initiation request at the ASPSP",
            "example": "https://www.bankofmoney.com/authorize"
          }
        },
        "description": "Response object to Initiate Standing Order"
      },
      "card.CardCustomFieldResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Custom field key"
          },
          "value": {
            "type": "string",
            "description": "Custom field value"
          }
        },
        "description": "Custom fields currently defined for card"
      },
      "payment.paymentStatuses": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Current status of payment. Multiple statuses can be specified by repeating the parameter.",
          "enum": [
            "SUBMITTED",
            "SCREENING_REQ",
            "VALIDATED",
            "PENDING_FOR_DATE",
            "PENDING_FOR_FUNDS",
            "EXT_PROC",
            "PROCESSED",
            "RECONCILED",
            "ER_INVALID",
            "ER_EXTCONN",
            "ER_EXTSYS",
            "ER_EXPIRED",
            "ER_GENERAL",
            "ER_BATCH",
            "EXT_SENT",
            "UNALLOCATED",
            "HELD",
            "RETURNED",
            "CANCELLED",
            "REPROCESSING",
            "VOID",
            "CLEARING"
          ]
        }
      },
      "document.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "pispgateway.VrpPaymentResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the VRP payment initiation request at Modulr",
            "example": "V21000001E"
          },
          "status": {
            "type": "string",
            "description": "The current status of vrp payment. Must be one of âSUBMITTEDâ,âACCEPTEDCREDITSETTLEMENTCOMPLETEDâ,âACCEPTEDWITHOUTPOSTINGâ,âACCEPTEDSETTLEMENTCOMPLETEDâ,âACCEPTEDSETTLEMENTINPROCESSâ,âPENDINGâ,âREJECTEDâ,âER_GENERALâ,âER_EXTSYSâ",
            "enum": [
              "SUBMITTED",
              "ACCEPTEDCREDITSETTLEMENTCOMPLETED",
              "ACCEPTEDWITHOUTPOSTING",
              "ACCEPTEDSETTLEMENTCOMPLETED",
              "ACCEPTEDSETTLEMENTINPROCESS",
              "PENDING",
              "REJECTED",
              "ER_GENERAL",
              "ER_EXTSYS"
            ]
          }
        }
      },
      "pispgateway.PaymentConstraints": {
        "required": [
          "maximumIndividualAmount"
        ],
        "type": "object",
        "properties": {
          "maximumIndividualAmount": {
            "required": [
              "currency"
            ],
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency of the maximum individual amount. Must be specified in ISO 4217 format."
              },
              "amount": {
                "type": "number",
                "description": "Maximum amount of any single payment initiated using this consent - '1' = 1.00 GBP",
                "example": 100
              }
            },
            "description": "Maximum amount of any single payment initiated using this consent."
          },
          "periodicLimits": {
            "type": "array",
            "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days.",
            "items": {
              "required": [
                "currency",
                "periodAlignment",
                "periodType"
              ],
              "type": "object",
              "properties": {
                "currency": {
                  "type": "string",
                  "description": "Currency of the maximum amount. Must be specified in ISO 4217 format."
                },
                "amount": {
                  "type": "number",
                  "description": "The maximum amount of all payments initiated using this consent in the specified period. At least one periodic limit is required - '1' = 1.00 GBP",
                  "example": 100
                },
                "periodAlignment": {
                  "type": "string",
                  "description": "Specifies whether the period starts on the date of consent creation or lines up with a calendar."
                },
                "periodType": {
                  "type": "string",
                  "description": "Period type. Must be one of âDAYâ,âWEEKâ,âFORTNIGHTâ,âMONTHâ,âHALF_YEARâ,âYEARâ."
                }
              },
              "description": "Maximum amount of all payments that can be initiated using this consent in a given period. If the periodAlignment is âCalendarâ, the limit is pro-rated in the first period to the remaining number of days."
            }
          }
        },
        "description": "Limits that will apply to payments initiated using this consent. "
      },
      "directdebit.CancelMandateRequest": {
        "required": [
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Reason to cancel the mandate"
          }
        },
        "description": "Details of Mandate cancellation."
      },
      "payment.batchPaymentStatuses": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Current status of batch. Multiple statuses can be specified by repeating the parameter.",
          "enum": [
            "ACCEPTED",
            "REJECTED",
            "SUBMITTED",
            "CANCELLED"
          ]
        }
      },
      "account.UpdateCustomerRequest": {
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "[\\w \\-]*",
            "type": "string",
            "description": "External Reference can only have alphanumeric characters plus underscore, hyphen and space up to 50 characters long"
          },
          "associates": {
            "type": "array",
            "description": "Applicable to all types except 'PCM_BUSINESS'",
            "items": {
              "required": [
                "firstName",
                "homeAddress",
                "lastName",
                "type"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of associate"
                },
                "firstName": {
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": "^[\\p{L}' -]+$",
                  "type": "string",
                  "description": "Letters, hyphens and apostrophes"
                },
                "middleName": {
                  "pattern": "^[\\p{L}' -]*$",
                  "type": "string",
                  "description": "Letters, hyphens and apostrophes"
                },
                "lastName": {
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": "^[\\p{L}' -]+$",
                  "type": "string",
                  "description": "Letters, hyphens and apostrophes"
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "Date in yyyy-MM-dd format. If associate is a non-applicant director or partner, then partial DOB of yyyy-MM format is allowed. Valid age is from 16 to 100 years. If Applicant then minimum age required is 18 years for specific partners. Required for all associate types except PCM_INDIVIDUAL."
                },
                "ownership": {
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer",
                  "description": "Ownership percentage for Partners",
                  "format": "int32"
                },
                "homeAddress": {
                  "required": [
                    "addressLine1",
                    "postTown"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "addressLine2": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "postTown": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string"
                    },
                    "postCode": {
                      "maxLength": 10,
                      "type": "string"
                    },
                    "country": {
                      "type": "string",
                      "description": "Mandatory for international payments."
                    },
                    "countrySubDivision": {
                      "maxLength": 35,
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "description": "Applicable to all types except 'INDIVIDUAL' and 'PCM_INDIVIDUAL'"
                },
                "id": {
                  "type": "string",
                  "description": "ID of associate"
                }
              },
              "description": "Applicable to all types except 'PCM_BUSINESS'"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^([_'@,&()Â£$â¬Â¥=#%\\â\\â:;/<>Â«Â»\\\"!\\â\\â\\â.\\?\\-\\s\\*\\{\\}\\[\\]\\+\\%\\\\]*?[\\p{L}0-9])+[_'@,&()Â£$â¬Â¥=#%\\â\\â:;/<>Â«Â»\\\"!\\â\\â\\â.\\?\\-\\s\\*\\{\\}\\[\\]\\+\\%\\\\]*",
            "type": "string",
            "description": "AlphaNumeric characters plus [ _ ' @ , & Â£ $ â¬ Â¥ = # % â â : ; \\ / < > Â« Â»  ! â â â . ? - *{ }  + % ( )]. Mandatory for all types except 'INDIVIDUAL and PCM_INDIVIDUAL'"
          },
          "brandNames": {
            "type": "array",
            "description": "The customers brand name(s)",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id for the Brand Name"
                },
                "name": {
                  "type": "string",
                  "description": "The Brand Name"
                }
              },
              "description": "The customers brand name(s)"
            }
          },
          "tradingAddress": {
            "required": [
              "addressLine1",
              "postTown"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "addressLine2": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postTown": {
                "maxLength": 50,
                "minLength": 0,
                "type": "string"
              },
              "postCode": {
                "maxLength": 10,
                "type": "string"
              },
              "country": {
                "type": "string",
                "description": "Mandatory for international payments."
              },
              "countrySubDivision": {
                "maxLength": 35,
                "minLength": 0,
                "type": "string"
              }
            },
            "description": "Applicable to all types except 'INDIVIDUAL' and 'PCM_INDIVIDUAL'"
          },
          "customerTrust": {
            "required": [
              "trustNature"
            ],
            "type": "object",
            "properties": {
              "trustNature": {
                "type": "string",
                "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers.",
                "enum": [
                  "BARE_TRUSTS",
                  "INTEREST_IN_POSSESSION_TRUSTS",
                  "DISCRETIONARY_TRUSTS",
                  "ACCUMULATION_TRUSTS",
                  "MIXED_TRUSTS",
                  "SETTLOR_INTERESTED_TRUSTS",
                  "NON_RESIDENT_TRUSTS",
                  "OFFSHORE_TRUSTS",
                  "FAMILY_LIVING_TRUST",
                  "PILOT_TRUST",
                  "VULNERABLE_BENEFICIARY_TRUST",
                  "CHARITABLE_TRUSTS",
                  "IRREVOCABLE_LIFE_INSURANCE_TRUST",
                  "TESTAMENTARY_TRUSTS",
                  "OTHER"
                ]
              }
            },
            "description": "Trust nature for customers of type Trust. Mandatory for type Trust, not to be set for non-trust customers."
          },
          "complianceData": {
            "type": "object",
            "properties": {
              "typeDescription": {
                "maxLength": 200,
                "minLength": 0,
                "type": "string",
                "description": "Required for customers of type PREQUALIFIED. Not allowed for all other customer types."
              },
              "riskLevel": {
                "type": "string",
                "description": "Risk level of the customer",
                "enum": [
                  "LOW",
                  "MEDIUM",
                  "HIGH",
                  "UNDETERMINED"
                ]
              },
              "vulnerabilityReasons": {
                "type": "array",
                "description": "Vulnerability Reasons of the customer",
                "items": {
                  "type": "string",
                  "description": "Vulnerability Reasons of the customer",
                  "enum": [
                    "LIFE_EVENTS",
                    "HEALTH",
                    "RESILIENCE",
                    "CAPABILITY",
                    "FINANCIAL_DIFFICULTY"
                  ]
                }
              }
            },
            "description": "Required for customers of type PREQUALIFIED"
          }
        },
        "description": "Details of customer to edit"
      },
      "onboarding.AdditionalPersonalIdentifierResponse": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of Additional Personal Identifier",
            "enum": [
              "BSN"
            ]
          },
          "value": {
            "type": "string",
            "description": "Additional Personal Identifier value"
          }
        },
        "description": "AdditionalPersonalIdentifier"
      },
      "pispgateway.Payment": {
        "required": [
          "currency",
          "reference"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency of the payment amount. Must be specified in ISO 4217 format."
          },
          "amount": {
            "type": "number",
            "description": "Payment amount",
            "example": 100
          },
          "reference": {
            "type": "string",
            "description": "A reference used to unambiguously refer to the payment transaction. Min 6 to max 18 characters. Can contain alphanumeric, '-', '.', '&', '/' and space."
          }
        },
        "description": "Payment details for the VRP payment initiation request."
      },
      "card.CreateCardResponse": {
        "required": [
          "createdDate",
          "cvv2",
          "externalRef",
          "id",
          "maxLimit",
          "pan"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card identifier. Maximum of 10 alphanumeric characters."
          },
          "pan": {
            "type": "string",
            "description": "Full card PAN."
          },
          "maskedPan": {
            "type": "string",
            "description": "Masked card PAN."
          },
          "cvv2": {
            "type": "string",
            "description": "Card CVV2 number."
          },
          "externalRef": {
            "type": "string",
            "description": "Client reference for the newly created card."
          },
          "createdDate": {
            "type": "string",
            "description": "The creation date of the card",
            "format": "date-time"
          },
          "maxLimit": {
            "type": "string",
            "description": "Maximum Limit which can be set on this card and is the maximum lifetime spend the card can have",
            "example": "4000.0"
          }
        }
      },
      "notification.NotificationRequest": {
        "required": [
          "channel",
          "config",
          "destinations",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the notification.",
            "enum": [
              "PAYIN",
              "PAYOUT",
              "BALANCE_LOW",
              "BALANCE_HIGH",
              "BALANCE",
              "DDMANDATE",
              "CUSTVSTAT",
              "ACCOUNT_STATEMENT",
              "PENDING_PAYMENTS",
              "DD_INCOMING_DEBIT",
              "DD_FAILED_CLAIM",
              "DD_FUNDS_RETURNED",
              "CARD_AUTH",
              "CARD_CREATION",
              "UPCOMING_CREDIT",
              "UPCOMING_COLLECTION_CREDIT",
              "UPCOMING_COLLECTION_DEBIT",
              "CARD_STATUS_UPDATE",
              "CARD_TOKEN_PROVISIONING",
              "PAYMENT_COMPLIANCE_STATUS",
              "DD_COLLECTION_STATUS",
              "ACCOUNT_SWITCH_UPDATE",
              "PAYMENT_FILE_UPLOAD",
              "ACCOUNT_STATUS_CHANGE"
            ]
          },
          "channel": {
            "type": "string",
            "description": "Channel used for sending the notification",
            "enum": [
              "EMAIL",
              "WEBHOOK"
            ]
          },
          "destinations": {
            "type": "array",
            "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL.",
            "items": {
              "type": "string",
              "description": "The list of emails or url(webhook) used for sending the notification. For 'EMAIL' channel this can be a list of comma separated email addresses. For 'WEBHOOK' channel this should be a single URL."
            }
          },
          "config": {
            "type": "object",
            "properties": {
              "threshold": {
                "minimum": 0,
                "exclusiveMinimum": false,
                "type": "number",
                "description": "Amount threshold which triggers the notification. This attribute only applies to 'EMAIL' notifications channel, of type 'PAYIN', 'PAYOUT'."
              },
              "timesToRun": {
                "type": "array",
                "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                "items": {
                  "type": "string",
                  "description": "Times of the day when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                  "enum": [
                    "AM",
                    "PM"
                  ]
                }
              },
              "daysToRun": {
                "type": "array",
                "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                "items": {
                  "type": "string",
                  "description": "Days of the week when to trigger the notification. This attribute applies only to 'EMAIL' notifications channel, of type 'BALANCE'.",
                  "enum": [
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY",
                    "SUNDAY"
                  ]
                }
              },
              "retry": {
                "type": "boolean",
                "description": "Flag indicating whether failed webhooks should be retried. This attribute applies only to 'WEBHOOK' notifications channel."
              },
              "secret": {
                "maxLength": 32,
                "minLength": 32,
                "type": "string",
                "description": "Mandatory for webhook. Secret that is used in HMAC calculation, for webhooks. This attribute applies only to 'WEBHOOK' notifications channel."
              },
              "hmacAlgorithm": {
                "type": "string",
                "description": "Signing algorithm that is used in Webhook HMAC calculation. This attribute only applies to 'WEBHOOK' notifications channel.",
                "enum": [
                  "hmac-sha1",
                  "hmac-sha256",
                  "hmac-sha384",
                  "hmac-sha512"
                ]
              }
            },
            "description": "Configuration information for this Notification entity."
          }
        }
      },
      "rule.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "account.BeneficiaryLockResponse": {
        "required": [
          "ownerId",
          "ownerType"
        ],
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Reference for the entity owning the lock.",
            "example": "R00000001A"
          },
          "ownerType": {
            "type": "string",
            "description": "Entity type owning the lock.",
            "enum": [
              "RULE",
              "PAYMENT"
            ]
          }
        },
        "description": "BeneficiaryLock"
      },
      "card.CardActivityPageResponse": {
        "required": [
          "content",
          "page",
          "size",
          "totalPages",
          "totalSize"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of responses on the current page",
            "items": {
              "required": [
                "billingAmount",
                "billingCurrency",
                "cardId",
                "createdDate",
                "fxRate",
                "id",
                "mcc",
                "orderId",
                "transactionAmount",
                "transactionCurrency",
                "type"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The card activity identifier. Maximum of 10 alphanumeric characters",
                  "example": "X000000001"
                },
                "orderId": {
                  "type": "string",
                  "description": "Order identifier which links together related authorisations, reversals & settlements. Maximum of 10 alphanumeric characters",
                  "example": "1234"
                },
                "cardId": {
                  "type": "string",
                  "description": "Card identifier. Maximum of 10 alphanumeric characters",
                  "example": "V000000001"
                },
                "type": {
                  "type": "string",
                  "description": "Type of card activity",
                  "enum": [
                    "AUTHORISATION",
                    "REVERSAL",
                    "SETTLEMENT",
                    "REFUND"
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "Status of card activity. Only applies to activities of type AUTHORISATION",
                  "enum": [
                    "DECLINED",
                    "APPROVED",
                    "SETTLED",
                    "EXPIRED"
                  ]
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why this activity was declined. Only applies to activities with status DECLINED",
                  "example": "Account has insufficient funds"
                },
                "verifiedBy3DS": {
                  "type": "boolean",
                  "description": "Whether the activity was 3DS enabled"
                },
                "createdDate": {
                  "type": "string",
                  "description": "The creation date of the card activity",
                  "format": "date-time"
                },
                "transactionAmount": {
                  "type": "number",
                  "description": "The card activity transaction amount",
                  "example": 123.45
                },
                "transactionCurrency": {
                  "type": "string",
                  "description": "The 3 letter ISO 4217 card activity transaction currency",
                  "example": "EUR"
                },
                "billingAmount": {
                  "type": "number",
                  "description": "The card activity billing amount",
                  "example": 678.91
                },
                "billingCurrency": {
                  "type": "string",
                  "description": "The 3 letter ISO 4217 card activity billing currency",
                  "example": "GBP"
                },
                "fxRate": {
                  "type": "number",
                  "description": "The FX rate applied to any conversion between transaction & billing amount. Rounded to 6 decimal places and zero padded",
                  "example": 1.123456
                },
                "mcc": {
                  "type": "string",
                  "description": "The Merchant Category Code (MCC) for the card activity. Follows ISO-18245 format",
                  "example": "5182"
                },
                "merchantName": {
                  "type": "string",
                  "description": "The merchant name",
                  "example": "Loudons Cafe"
                },
                "merchantCountry": {
                  "type": "string",
                  "description": "The 3 letter ISO 3166 merchant country code",
                  "example": "GBR"
                },
                "authorisationInfo": {
                  "required": [
                    "inputMethod",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Transaction type"
                    },
                    "inputMethod": {
                      "type": "string",
                      "description": "Input method"
                    }
                  },
                  "description": "Authorisation information of the activity"
                },
                "cardTokenId": {
                  "type": "string",
                  "description": "The card token associated with this activity, if a tokenised card was used."
                },
                "cardTokenDeviceId": {
                  "type": "string",
                  "description": "The bound card token device associated with this activity, if a tokenised card was used."
                }
              },
              "description": "List of responses on the current page"
            }
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "Total count",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number, 0 based; i.e first-page = 0, second-page = 1",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "format": "int32"
          }
        }
      },
      "payment.PaymentsSummary": {
        "type": "object",
        "properties": {
          "totalPaymentCount": {
            "type": "integer",
            "description": "Total count of payments",
            "format": "int32",
            "example": 10
          },
          "totalAmount": {
            "type": "number",
            "description": "Sum total of payment amounts",
            "example": 100
          },
          "pendingApprovalCount": {
            "type": "integer",
            "description": "Count of payments currently pending approval",
            "format": "int32",
            "example": 5
          },
          "pendingApprovalAmount": {
            "type": "number",
            "description": "Sum total of payment amounts currently pending approval",
            "example": 50
          }
        },
        "description": "Summary of payments and approvals"
      },
      "payment.MessageResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "GENERAL",
              "BUSINESSRULE",
              "MFASTATUS",
              "MFAERROR",
              "MFATIMEOUT",
              "MFADEVICEMM",
              "MFAMESSAGEINVALID",
              "NOTFOUND",
              "DUPLICATE",
              "INVALID",
              "CONNECTION",
              "RETRY",
              "RATELIMIT",
              "PERMISSION",
              "NOTACCEPTABLE",
              "MFAVERIFICATION"
            ]
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sourceService": {
            "type": "string"
          }
        }
      },
      "inboundpayment.AccountIdentifierDetailRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Account identifier type",
            "enum": [
              "SCAN",
              "IBAN",
              "DD",
              "INTL",
              "ANBRN",
              "AN"
            ]
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "sortCode": {
            "type": "string",
            "description": "Sortcode"
          },
          "iban": {
            "type": "string",
            "description": "IBAN"
          },
          "bic": {
            "type": "string",
            "description": "BIC"
          }
        },
        "description": "Account identifier"
      },
      "document.DocumentUploadRequest": {
        "required": [
          "content",
          "fileName",
          "group"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\w,\\s-.]+\\.(\\w){3,4}$",
            "type": "string"
          },
          "content": {
            "type": "string",
            "description": "Needs to be Base64 encoded"
          },
          "group": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Use to group documents together. Combination of group+filename should be unique else the files will be overwritten"
          }
        }
      },
      "payment.DestinationCountrySpecificDetails": {
        "type": "object",
        "properties": {
          "bankName": {
            "type": "string",
            "description": "The name of the destination bank.",
            "example": "Apple Bank"
          },
          "bankAddress": {
            "type": "string",
            "description": "The address of the destination bank.",
            "example": "2100 Broadway"
          },
          "bankCity": {
            "type": "string",
            "description": "The city in which the destination bank resides.",
            "example": "New York City"
          },
          "bankBranchName": {
            "type": "string",
            "description": "The name of the destination bank's branch.",
            "example": "New York"
          },
          "bankBranchCode": {
            "type": "string",
            "description": "The code of the destination bank's branch.",
            "example": "44-04"
          },
          "bankCode": {
            "type": "string",
            "description": "The code identifying the target bank on its respective national network. This is not the BIC/SWIFT code. This is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on."
          },
          "chineseId": {
            "type": "string",
            "description": "The 18 digit identification code of the beneficiary. Applies to Chinese beneficiaries only.",
            "example": "01101201901018889"
          },
          "province": {
            "type": "string",
            "description": "The province in which the beneficiary resides. Applies only to beneficiaries residing in China.",
            "example": "Zhejiang"
          },
          "abaRoutingNumber": {
            "pattern": "^\\d{9}$",
            "type": "string",
            "description": "The 9 digit identification code of the beneficiary. Applies to US beneficiaries only.",
            "example": "123456789"
          },
          "business": {
            "type": "boolean",
            "description": "The type of the beneficiary. 'true' for businesses, 'false' otherwise.",
            "example": true
          },
          "bankCodeType": {
            "type": "string",
            "description": "The code type identifying the target bank on its respective national network.\nThis is known as the 'ABA code' in the U.S., 'ISFC' in India, 'routing number' in Canada, and so on.",
            "example": "ABA",
            "enum": [
              "ABA",
              "CHIPS"
            ]
          },
          "bankCountry": {
            "type": "string",
            "description": "The country in which the destination bank resides. Mandatory for international payments.",
            "example": "US",
            "enum": [
              "AT",
              "BE",
              "BG",
              "CY",
              "CZ",
              "DK",
              "EE",
              "FI",
              "FR",
              "DE",
              "GR",
              "HR",
              "HU",
              "IS",
              "IE",
              "IT",
              "LV",
              "LI",
              "LT",
              "LU",
              "MT",
              "NL",
              "NO",
              "PL",
              "PT",
              "RO",
              "SK",
              "SI",
              "ES",
              "SE",
              "GB",
              "MQ",
              "YT",
              "GP",
              "GF",
              "RE",
              "MF",
              "GI",
              "GG",
              "IM",
              "JE",
              "MC",
              "CH",
              "AD",
              "SM",
              "VA",
              "AX",
              "PM",
              "BL",
              "AF",
              "AL",
              "DZ",
              "AS",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "VG",
              "BN",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CK",
              "CR",
              "CU",
              "CW",
              "CD",
              "DJ",
              "DM",
              "DO",
              "TL",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "SZ",
              "ET",
              "FK",
              "FO",
              "FJ",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "GH",
              "GL",
              "GD",
              "GU",
              "GT",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "HN",
              "HK",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IL",
              "CI",
              "JM",
              "JP",
              "JO",
              "KZ",
              "KE",
              "KI",
              "XK",
              "KW",
              "KG",
              "LA",
              "LB",
              "LS",
              "LR",
              "LY",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MH",
              "MR",
              "MU",
              "MX",
              "FM",
              "MD",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "KP",
              "MK",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PR",
              "QA",
              "CG",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "VC",
              "WS",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SB",
              "SO",
              "ZA",
              "KR",
              "GS",
              "SS",
              "LK",
              "SD",
              "SR",
              "SY",
              "SJ",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UM",
              "US",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          }
        },
        "description": "Further details required, depending on the destination's country"
      },
      "pispgateway.VrpConfirmationOfFundsRequest": {
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency of the maximum individual amount. Must be specified in ISO 4217 format."
          },
          "amount": {
            "type": "number",
            "description": "amount that will be confirmed for availability of funds - '1' = 1.00 GBP",
            "example": 100
          }
        },
        "description": "Request object to confirm the availability of funds in account"
      }
    },
    "securitySchemes": {
      "modulo_security": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "TOKEN": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}